{
	"id": "64ea7d3841a8fbdd8d8b6e5fd76e8d19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Contract_1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NZFToken is ERC20, Ownable {\n    using SafeERC20 for IERC20;\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 lowerTick;\n        int24 upperTick;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n    }\n\n    uint256 public constant TOTAL_SUPPLY = 10_000_000 * (10**18);\n    uint256 public constant DEVELOPER_SUPPLY = 1_000_000 * (10**18);\n    uint256 public constant INVESTOR_SUPPLY = 9_000_000 * (10**18);\n    uint256 public constant MINT_LIMIT_PER_INVESTOR = 20_000 * (10**18);\n\n    // USDT 컨트랙트 주소\n    // TestUSDTContractAddress = 0xf7ADDb930777E11b83A5E7494421Ec4C589d0317\n    address public developerWallet;\n    uint256 public currentSupply;\n    address public USDTAddress;\n\n    // 개인지갑 별 토큰 발행량\n    mapping(address => uint256) public mintedTokens;\n\n    event DeveloperMint(address indexed to, uint256 amount);\n    event InvestorMint(address indexed to, uint256 amount);\n\n    modifier onlyDeveloper() {\n        require(msg.sender == developerWallet, \"Not authorized\");\n        _;\n    }\n\n    modifier canMint(uint256 amount) {\n        require(totalSupply() + amount <= TOTAL_SUPPLY, \"Exceeds total supply\");\n        _;\n    }\n\n    // 컨트랙트 배포와 동시에 개발자 물량 발행\n    constructor(address _developerWallet, address _USDTAddress)\n        ERC20(\"NZF Token\", \"NZF\")\n        Ownable(_developerWallet)\n    {\n        developerWallet = _developerWallet;\n        USDTAddress = _USDTAddress;\n        _mint(developerWallet, DEVELOPER_SUPPLY);\n    }\n\n    // 투자자 민팅 함수\n    function mintInvestor(uint256 amount) external canMint(amount) {\n        require(\n            amount <= MINT_LIMIT_PER_INVESTOR,\n            \"Exceeds mint limit per investor\"\n        );\n        require(\n            mintedTokens[msg.sender] + amount <= MINT_LIMIT_PER_INVESTOR,\n            \"Exceeds mint limit for the investor\"\n        );\n        require(\n            IERC20(USDTAddress).allowance(msg.sender, address(this)) >= amount,\n            \"You must approve the contract to access your USDT\"\n        );\n\n        IERC20(USDTAddress).safeTransferFrom(msg.sender, address(this), amount);\n\n        _mint(msg.sender, amount);\n        mintedTokens[msg.sender] += amount;\n        currentSupply += amount;\n\n        emit InvestorMint(msg.sender, amount);\n    }\n\n    // 개발자 USDT 회수 함수\n    function withdraw() external onlyDeveloper {\n        uint256 contractBalance = IERC20(USDTAddress).balanceOf(address(this));\n        require(contractBalance > 0, \"No tokens to withdraw\");\n        require(currentSupply > TOTAL_SUPPLY, \"Not Enough Supply\");\n\n        //Factory_addr 0x0227628f3F023bb0B980b67D528571c95c6DaC1c\n        // USDT 컨트랙트 주소\n        // TestUSDTContractAddress = 0xf7ADDb930777E11b83A5E7494421Ec4C589d0317\n        poolInit(\n            0x0227628f3F023bb0B980b67D528571c95c6DaC1c,\n            address(this),\n            0xf7ADDb930777E11b83A5E7494421Ec4C589d0317,\n            500\n        );\n        IERC20(USDTAddress).transfer(developerWallet, contractBalance);\n    }\n\n    // Factory에 Pool & init생성.\n    function poolInit(\n        address factory_addr,\n        address token0,\n        address token1,\n        uint24 fee\n    ) internal {\n        (bool success, bytes memory poolAddress) = factory_addr.call(\n            abi.encodeWithSignature(\n                \"createPool(address,address,uint24)\",\n                token0,\n                token1,\n                fee\n            )\n        );\n        require(success, \"Failed to find Factory\");\n        address poolAddress_ = bytesToAddress(poolAddress);\n        (success, ) = address(poolAddress_).call(\n            abi.encodeWithSignature(\"initailize(uint160)\", 500000)\n        );\n        require(success, \"Failed to Pool initialize\");\n\n        MintParams memory params;\n        params.token0 = token0;\n        params.token1 = token1;\n        params.fee = fee;\n        params.lowerTick = -887220;\n        params.upperTick = 887220;\n        params.amount0Desired = 500000 * (10**18);\n        params.amount1Desired = 500000 * (10**18);\n        params.amount0Min = 0;\n        params.amount1Min = 0;\n\n        (success, ) = address(poolAddress_).call(\n            abi.encodeWithSignature(\n                \"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256))\",\n                params\n            )\n        );\n        require(success, \"Failed to Mint\");\n    }\n\n    \n    function bytesToAddress(bytes memory bys) private pure returns (address addr) {\n        assembly {\n            addr := mload(add(bys, 20))\n        }\n    }\n\n    function buyBack(address pool, uint256 amount) public onlyDeveloper {\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        (bool success, ) = pool.call(abi.encodeWithSignature(\n            \"swap(address,bool,uint256,uint160,bytes)\",\n            msg.sender,\n            false,\n            0,\n            0,\n            new bytes(0))\n        );\n        require(success, \"Failed to Mint\");\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/Contract_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/Contract_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract_1.sol": {
				"NZFToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_developerWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_USDTAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DeveloperMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InvestorMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEVELOPER_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INVESTOR_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINT_LIMIT_PER_INVESTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buyBack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developerWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintInvestor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mintedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract_1.sol\":291:5414  contract NZFToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/Contract_1.sol\":1657:1926  constructor(address _developerWallet, address _USDTAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/Contract_1.sol\":1767:1783  _developerWallet */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x4e5a4620546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4e5a460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/Contract_1.sol\":1817:1833  _developerWallet */\n  dup2\n    /* \"src/Contract_1.sol\":1799:1814  developerWallet */\n  0x06\n  0x00\n    /* \"src/Contract_1.sol\":1799:1833  developerWallet = _developerWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/Contract_1.sol\":1857:1869  _USDTAddress */\n  dup1\n    /* \"src/Contract_1.sol\":1843:1854  USDTAddress */\n  0x08\n  0x00\n    /* \"src/Contract_1.sol\":1843:1869  USDTAddress = _USDTAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/Contract_1.sol\":1879:1919  _mint(developerWallet, DEVELOPER_SUPPLY) */\n  tag_18\n    /* \"src/Contract_1.sol\":1885:1900  developerWallet */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/Contract_1.sol\":744:764  1_000_000 * (10**18) */\n  0xd3c21bcecceda1000000\n    /* \"src/Contract_1.sol\":1879:1884  _mint */\n  shl(0x20, tag_19)\n    /* \"src/Contract_1.sol\":1879:1919  _mint(developerWallet, DEVELOPER_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"src/Contract_1.sol\":1657:1926  constructor(address _developerWallet, address _USDTAddress)... */\n  pop\n  pop\n    /* \"src/Contract_1.sol\":291:5414  contract NZFToken is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_75\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_77\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_78:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_80\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_83\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":949:1068   */\ntag_82:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_84\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_45\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_85\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_45\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_46:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_47:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_48:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_49:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_90:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_92\n  tag_48\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2065:2149   */\ntag_91:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_50:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_51:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_52:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_53:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_97\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2780:2819   */\n  tag_98\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_52\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_54:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_55:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_56:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_102\n    /* \"#utility.yul\":3169:3203   */\n  tag_103\n    /* \"#utility.yul\":3178:3202   */\n  tag_104\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_54\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3169:3203   */\n  tag_55\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3151:3204   */\n  tag_54\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_57:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_58:\n    /* \"#utility.yul\":3407:3446   */\n  tag_107\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_56\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3468:3559   */\n  tag_108\n    /* \"#utility.yul\":3517:3558   */\n  tag_109\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_53\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_59:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_60:\n    /* \"#utility.yul\":3728:3760   */\n  tag_112\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3769:3834   */\n  tag_113\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_58\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_61:\n    /* \"#utility.yul\":3906:4026   */\ntag_115:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_118\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_60\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_62:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_121\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4257:4286   */\n  tag_122\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_51\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_123:\n    /* \"#utility.yul\":4484:4564   */\n  tag_124\n    /* \"#utility.yul\":4540:4562   */\n  tag_125\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_51\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_120:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_63:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_64:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_128\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_63\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_65:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_130\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_132\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_46\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_134\n  tag_47\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5389:5445   */\ntag_133:\n    /* \"#utility.yul\":5469:5507   */\n  tag_135\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_49\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5554:5621   */\n  tag_136\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_62\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_139:\n    /* \"#utility.yul\":6495:6562   */\n  tag_140\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_65\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_137)\n    /* \"#utility.yul\":5716:6334   */\ntag_138:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_141\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_50\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_142:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_146\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_64\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_145:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_137:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_66:\n    /* \"#utility.yul\":6672:6696   */\n  tag_148\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_43\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_150\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_66\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7117   */\ntag_67:\n    /* \"#utility.yul\":6985:7062   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6982:6983   */\n  0x00\n    /* \"#utility.yul\":6975:7063   */\n  mstore\n    /* \"#utility.yul\":7082:7086   */\n  0x11\n    /* \"#utility.yul\":7079:7080   */\n  0x04\n    /* \"#utility.yul\":7072:7087   */\n  mstore\n    /* \"#utility.yul\":7106:7110   */\n  0x24\n    /* \"#utility.yul\":7103:7104   */\n  0x00\n    /* \"#utility.yul\":7096:7111   */\n  revert\n    /* \"#utility.yul\":7123:7314   */\ntag_30:\n    /* \"#utility.yul\":7163:7166   */\n  0x00\n    /* \"#utility.yul\":7182:7202   */\n  tag_153\n    /* \"#utility.yul\":7200:7201   */\n  dup3\n    /* \"#utility.yul\":7182:7202   */\n  tag_54\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7177:7202   */\n  swap2\n  pop\n    /* \"#utility.yul\":7216:7236   */\n  tag_154\n    /* \"#utility.yul\":7234:7235   */\n  dup4\n    /* \"#utility.yul\":7216:7236   */\n  tag_54\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7211:7236   */\n  swap3\n  pop\n    /* \"#utility.yul\":7259:7260   */\n  dup3\n    /* \"#utility.yul\":7256:7257   */\n  dup3\n    /* \"#utility.yul\":7252:7261   */\n  add\n    /* \"#utility.yul\":7245:7261   */\n  swap1\n  pop\n    /* \"#utility.yul\":7280:7283   */\n  dup1\n    /* \"#utility.yul\":7277:7278   */\n  dup3\n    /* \"#utility.yul\":7274:7284   */\n  gt\n    /* \"#utility.yul\":7271:7307   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7287:7305   */\n  tag_156\n  tag_67\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7271:7307   */\ntag_155:\n    /* \"#utility.yul\":7123:7314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7320:7438   */\ntag_68:\n    /* \"#utility.yul\":7407:7431   */\n  tag_158\n    /* \"#utility.yul\":7425:7430   */\n  dup2\n    /* \"#utility.yul\":7407:7431   */\n  tag_54\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7402:7405   */\n  dup3\n    /* \"#utility.yul\":7395:7432   */\n  mstore\n    /* \"#utility.yul\":7320:7438   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7444:7886   */\ntag_34:\n    /* \"#utility.yul\":7593:7597   */\n  0x00\n    /* \"#utility.yul\":7631:7633   */\n  0x60\n    /* \"#utility.yul\":7620:7629   */\n  dup3\n    /* \"#utility.yul\":7616:7634   */\n  add\n    /* \"#utility.yul\":7608:7634   */\n  swap1\n  pop\n    /* \"#utility.yul\":7644:7715   */\n  tag_160\n    /* \"#utility.yul\":7712:7713   */\n  0x00\n    /* \"#utility.yul\":7701:7710   */\n  dup4\n    /* \"#utility.yul\":7697:7714   */\n  add\n    /* \"#utility.yul\":7688:7694   */\n  dup7\n    /* \"#utility.yul\":7644:7715   */\n  tag_66\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7725:7797   */\n  tag_161\n    /* \"#utility.yul\":7793:7795   */\n  0x20\n    /* \"#utility.yul\":7782:7791   */\n  dup4\n    /* \"#utility.yul\":7778:7796   */\n  add\n    /* \"#utility.yul\":7769:7775   */\n  dup6\n    /* \"#utility.yul\":7725:7797   */\n  tag_68\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7807:7879   */\n  tag_162\n    /* \"#utility.yul\":7875:7877   */\n  0x40\n    /* \"#utility.yul\":7864:7873   */\n  dup4\n    /* \"#utility.yul\":7860:7878   */\n  add\n    /* \"#utility.yul\":7851:7857   */\n  dup5\n    /* \"#utility.yul\":7807:7879   */\n  tag_68\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7444:7886   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7892:8114   */\ntag_38:\n    /* \"#utility.yul\":7985:7989   */\n  0x00\n    /* \"#utility.yul\":8023:8025   */\n  0x20\n    /* \"#utility.yul\":8012:8021   */\n  dup3\n    /* \"#utility.yul\":8008:8026   */\n  add\n    /* \"#utility.yul\":8000:8026   */\n  swap1\n  pop\n    /* \"#utility.yul\":8036:8107   */\n  tag_164\n    /* \"#utility.yul\":8104:8105   */\n  0x00\n    /* \"#utility.yul\":8093:8102   */\n  dup4\n    /* \"#utility.yul\":8089:8106   */\n  add\n    /* \"#utility.yul\":8080:8086   */\n  dup5\n    /* \"#utility.yul\":8036:8107   */\n  tag_68\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7892:8114   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/Contract_1.sol\":291:5414  contract NZFToken is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Contract_1.sol\":291:5414  contract NZFToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1b8df22\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe5a7eb75\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xff920c74\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7241dfa0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x771282f6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x23b872dd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x329927a7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4fe72439\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x039600d2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x185870f9\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Contract_1.sol\":838:905  uint256 public constant MINT_LIMIT_PER_INVESTOR = 20_000 * (10**18) */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":1020:1050  address public developerWallet */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":770:832  uint256 public constant INVESTOR_SUPPLY = 9_000_000 * (10**18) */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":2763:3463  function withdraw() external onlyDeveloper {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"src/Contract_1.sol\":701:764  uint256 public constant DEVELOPER_SUPPLY = 1_000_000 * (10**18) */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"src/Contract_1.sol\":1164:1211  mapping(address => uint256) public mintedTokens */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":1056:1084  uint256 public currentSupply */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":635:695  uint256 public constant TOTAL_SUPPLY = 10_000_000 * (10**18) */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":4998:5411  function buyBack(address pool, uint256 amount) public onlyDeveloper {... */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":1963:2721  function mintInvestor(uint256 amount) external canMint(amount) {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"src/Contract_1.sol\":1090:1116  address public USDTAddress */\n    tag_25:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract_1.sol\":838:905  uint256 public constant MINT_LIMIT_PER_INVESTOR = 20_000 * (10**18) */\n    tag_30:\n        /* \"src/Contract_1.sol\":888:905  20_000 * (10**18) */\n      0x043c33c1937564800000\n        /* \"src/Contract_1.sol\":838:905  uint256 public constant MINT_LIMIT_PER_INVESTOR = 20_000 * (10**18) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/Contract_1.sol\":1020:1050  address public developerWallet */\n    tag_47:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/Contract_1.sol\":770:832  uint256 public constant INVESTOR_SUPPLY = 9_000_000 * (10**18) */\n    tag_60:\n        /* \"src/Contract_1.sol\":812:832  9_000_000 * (10**18) */\n      0x0771d2fa45345aa9000000\n        /* \"src/Contract_1.sol\":770:832  uint256 public constant INVESTOR_SUPPLY = 9_000_000 * (10**18) */\n      dup2\n      jump\t// out\n        /* \"src/Contract_1.sol\":2763:3463  function withdraw() external onlyDeveloper {... */\n    tag_63:\n        /* \"src/Contract_1.sol\":1397:1412  developerWallet */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":1383:1412  msg.sender == developerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":1383:1393  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":1383:1412  msg.sender == developerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/Contract_1.sol\":1375:1431  require(msg.sender == developerWallet, \"Not authorized\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"src/Contract_1.sol\":2816:2839  uint256 contractBalance */\n      0x00\n        /* \"src/Contract_1.sol\":2849:2860  USDTAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":2842:2871  IERC20(USDTAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/Contract_1.sol\":2880:2884  this */\n      address\n        /* \"src/Contract_1.sol\":2842:2886  IERC20(USDTAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"src/Contract_1.sol\":2816:2886  uint256 contractBalance = IERC20(USDTAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/Contract_1.sol\":2922:2923  0 */\n      0x00\n        /* \"src/Contract_1.sol\":2904:2919  contractBalance */\n      dup2\n        /* \"src/Contract_1.sol\":2904:2923  contractBalance > 0 */\n      gt\n        /* \"src/Contract_1.sol\":2896:2949  require(contractBalance > 0, \"No tokens to withdraw\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"src/Contract_1.sol\":674:695  10_000_000 * (10**18) */\n      0x084595161401484a000000\n        /* \"src/Contract_1.sol\":2967:2980  currentSupply */\n      sload(0x07)\n        /* \"src/Contract_1.sol\":2967:2995  currentSupply > TOTAL_SUPPLY */\n      gt\n        /* \"src/Contract_1.sol\":2959:3017  require(currentSupply > TOTAL_SUPPLY, \"Not Enough Supply\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"src/Contract_1.sol\":3210:3384  poolInit(... */\n      tag_148\n        /* \"src/Contract_1.sol\":3232:3274  0x0227628f3F023bb0B980b67D528571c95c6DaC1c */\n      0x0227628f3f023bb0b980b67d528571c95c6dac1c\n        /* \"src/Contract_1.sol\":3296:3300  this */\n      address\n        /* \"src/Contract_1.sol\":3315:3357  0xf7ADDb930777E11b83A5E7494421Ec4C589d0317 */\n      0xf7addb930777e11b83a5e7494421ec4c589d0317\n        /* \"src/Contract_1.sol\":3371:3374  500 */\n      0x01f4\n        /* \"src/Contract_1.sol\":3210:3218  poolInit */\n      tag_149\n        /* \"src/Contract_1.sol\":3210:3384  poolInit(... */\n      jump\t// in\n    tag_148:\n        /* \"src/Contract_1.sol\":3401:3412  USDTAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":3394:3422  IERC20(USDTAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/Contract_1.sol\":3423:3438  developerWallet */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":3440:3455  contractBalance */\n      dup4\n        /* \"src/Contract_1.sol\":3394:3456  IERC20(USDTAddress).transfer(developerWallet, contractBalance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      pop\n        /* \"src/Contract_1.sol\":2806:3463  {... */\n      pop\n        /* \"src/Contract_1.sol\":2763:3463  function withdraw() external onlyDeveloper {... */\n      jump\t// out\n        /* \"src/Contract_1.sol\":701:764  uint256 public constant DEVELOPER_SUPPLY = 1_000_000 * (10**18) */\n    tag_65:\n        /* \"src/Contract_1.sol\":744:764  1_000_000 * (10**18) */\n      0xd3c21bcecceda1000000\n        /* \"src/Contract_1.sol\":701:764  uint256 public constant DEVELOPER_SUPPLY = 1_000_000 * (10**18) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/Contract_1.sol\":1164:1211  mapping(address => uint256) public mintedTokens */\n    tag_76:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Contract_1.sol\":1056:1084  uint256 public currentSupply */\n    tag_79:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/Contract_1.sol\":635:695  uint256 public constant TOTAL_SUPPLY = 10_000_000 * (10**18) */\n    tag_85:\n        /* \"src/Contract_1.sol\":674:695  10_000_000 * (10**18) */\n      0x084595161401484a000000\n        /* \"src/Contract_1.sol\":635:695  uint256 public constant TOTAL_SUPPLY = 10_000_000 * (10**18) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_114\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_114\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract_1.sol\":4998:5411  function buyBack(address pool, uint256 amount) public onlyDeveloper {... */\n    tag_96:\n        /* \"src/Contract_1.sol\":1397:1412  developerWallet */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":1383:1412  msg.sender == developerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":1383:1393  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":1383:1412  msg.sender == developerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/Contract_1.sol\":1375:1431  require(msg.sender == developerWallet, \"Not authorized\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_135\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"src/Contract_1.sol\":5093:5094  0 */\n      0x00\n        /* \"src/Contract_1.sol\":5084:5090  amount */\n      dup2\n        /* \"src/Contract_1.sol\":5084:5094  amount > 0 */\n      gt\n        /* \"src/Contract_1.sol\":5076:5131  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"src/Contract_1.sol\":5143:5155  bool success */\n      0x00\n        /* \"src/Contract_1.sol\":5161:5165  pool */\n      dup3\n        /* \"src/Contract_1.sol\":5161:5170  pool.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":5264:5274  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":5288:5293  false */\n      0x00\n        /* \"src/Contract_1.sol\":5307:5308  0 */\n      dup1\n        /* \"src/Contract_1.sol\":5322:5323  0 */\n      0x00\n        /* \"src/Contract_1.sol\":5347:5348  0 */\n      dup1\n        /* \"src/Contract_1.sol\":5337:5349  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n    tag_180:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_183:\n      pop\n        /* \"src/Contract_1.sol\":5171:5350  abi.encodeWithSignature(... */\n      add(0x24, mload(0x40))\n      tag_184\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xdd5a12d800000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract_1.sol\":5161:5360  pool.call(abi.encodeWithSignature(... */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_190\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_189)\n    tag_190:\n      0x60\n      swap2\n      pop\n    tag_189:\n      pop\n        /* \"src/Contract_1.sol\":5142:5360  (bool success, ) = pool.call(abi.encodeWithSignature(... */\n      pop\n      swap1\n      pop\n        /* \"src/Contract_1.sol\":5378:5385  success */\n      dup1\n        /* \"src/Contract_1.sol\":5370:5404  require(success, \"Failed to Mint\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"src/Contract_1.sol\":5066:5411  {... */\n      pop\n        /* \"src/Contract_1.sol\":4998:5411  function buyBack(address pool, uint256 amount) public onlyDeveloper {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract_1.sol\":1963:2721  function mintInvestor(uint256 amount) external canMint(amount) {... */\n    tag_105:\n        /* \"src/Contract_1.sol\":2018:2024  amount */\n      dup1\n        /* \"src/Contract_1.sol\":674:695  10_000_000 * (10**18) */\n      0x084595161401484a000000\n        /* \"src/Contract_1.sol\":1522:1528  amount */\n      dup2\n        /* \"src/Contract_1.sol\":1506:1519  totalSupply() */\n      tag_196\n        /* \"src/Contract_1.sol\":1506:1517  totalSupply */\n      tag_44\n        /* \"src/Contract_1.sol\":1506:1519  totalSupply() */\n      jump\t// in\n    tag_196:\n        /* \"src/Contract_1.sol\":1506:1528  totalSupply() + amount */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"src/Contract_1.sol\":1506:1544  totalSupply() + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"src/Contract_1.sol\":1498:1569  require(totalSupply() + amount <= TOTAL_SUPPLY, \"Exceeds total supply\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"src/Contract_1.sol\":888:905  20_000 * (10**18) */\n      0x043c33c1937564800000\n        /* \"src/Contract_1.sol\":2057:2063  amount */\n      dup3\n        /* \"src/Contract_1.sol\":2057:2090  amount <= MINT_LIMIT_PER_INVESTOR */\n      gt\n      iszero\n        /* \"src/Contract_1.sol\":2036:2147  require(... */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"src/Contract_1.sol\":888:905  20_000 * (10**18) */\n      0x043c33c1937564800000\n        /* \"src/Contract_1.sol\":2205:2211  amount */\n      dup3\n        /* \"src/Contract_1.sol\":2178:2190  mintedTokens */\n      0x09\n        /* \"src/Contract_1.sol\":2178:2202  mintedTokens[msg.sender] */\n      0x00\n        /* \"src/Contract_1.sol\":2191:2201  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2178:2202  mintedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Contract_1.sol\":2178:2211  mintedTokens[msg.sender] + amount */\n      tag_206\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_206:\n        /* \"src/Contract_1.sol\":2178:2238  mintedTokens[msg.sender] + amount <= MINT_LIMIT_PER_INVESTOR */\n      gt\n      iszero\n        /* \"src/Contract_1.sol\":2157:2299  require(... */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"src/Contract_1.sol\":2390:2396  amount */\n      dup2\n        /* \"src/Contract_1.sol\":2337:2348  USDTAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":2330:2359  IERC20(USDTAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"src/Contract_1.sol\":2360:2370  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2380:2384  this */\n      address\n        /* \"src/Contract_1.sol\":2330:2386  IERC20(USDTAddress).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"src/Contract_1.sol\":2330:2396  IERC20(USDTAddress).allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"src/Contract_1.sol\":2309:2471  require(... */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"src/Contract_1.sol\":2482:2553  IERC20(USDTAddress).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_218\n        /* \"src/Contract_1.sol\":2519:2529  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2539:2543  this */\n      address\n        /* \"src/Contract_1.sol\":2546:2552  amount */\n      dup5\n        /* \"src/Contract_1.sol\":2489:2500  USDTAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":2482:2518  IERC20(USDTAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap1\n        /* \"src/Contract_1.sol\":2482:2553  IERC20(USDTAddress).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"src/Contract_1.sol\":2564:2589  _mint(msg.sender, amount) */\n      tag_220\n        /* \"src/Contract_1.sol\":2570:2580  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2582:2588  amount */\n      dup4\n        /* \"src/Contract_1.sol\":2564:2569  _mint */\n      tag_221\n        /* \"src/Contract_1.sol\":2564:2589  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_220:\n        /* \"src/Contract_1.sol\":2627:2633  amount */\n      dup2\n        /* \"src/Contract_1.sol\":2599:2611  mintedTokens */\n      0x09\n        /* \"src/Contract_1.sol\":2599:2623  mintedTokens[msg.sender] */\n      0x00\n        /* \"src/Contract_1.sol\":2612:2622  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2599:2623  mintedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Contract_1.sol\":2599:2633  mintedTokens[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_222\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_222:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Contract_1.sol\":2660:2666  amount */\n      dup2\n        /* \"src/Contract_1.sol\":2643:2656  currentSupply */\n      0x07\n      0x00\n        /* \"src/Contract_1.sol\":2643:2666  currentSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_223\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_223:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Contract_1.sol\":2695:2705  msg.sender */\n      caller\n        /* \"src/Contract_1.sol\":2682:2714  InvestorMint(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8936d06b61ad023525017d83cb2cec9d7a688f71eb45e3ed02a9ba311c17b51b\n        /* \"src/Contract_1.sol\":2707:2713  amount */\n      dup4\n        /* \"src/Contract_1.sol\":2682:2714  InvestorMint(msg.sender, amount) */\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Contract_1.sol\":1963:2721  function mintInvestor(uint256 amount) external canMint(amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/Contract_1.sol\":1090:1116  address public USDTAddress */\n    tag_110:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract_1.sol\":3506:4827  function poolInit(... */\n    tag_149:\n        /* \"src/Contract_1.sol\":3648:3660  bool success */\n      0x00\n        /* \"src/Contract_1.sol\":3662:3686  bytes memory poolAddress */\n      dup1\n        /* \"src/Contract_1.sol\":3690:3702  factory_addr */\n      dup6\n        /* \"src/Contract_1.sol\":3690:3707  factory_addr.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":3816:3822  token0 */\n      dup6\n        /* \"src/Contract_1.sol\":3840:3846  token1 */\n      dup6\n        /* \"src/Contract_1.sol\":3864:3867  fee */\n      dup6\n        /* \"src/Contract_1.sol\":3721:3881  abi.encodeWithSignature(... */\n      add(0x24, mload(0x40))\n      tag_250\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xa167129500000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract_1.sol\":3690:3891  factory_addr.call(... */\n      mload(0x40)\n      tag_252\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_252:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_255\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_254)\n    tag_255:\n      0x60\n      swap2\n      pop\n    tag_254:\n      pop\n        /* \"src/Contract_1.sol\":3647:3891  (bool success, bytes memory poolAddress) = factory_addr.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/Contract_1.sol\":3909:3916  success */\n      dup2\n        /* \"src/Contract_1.sol\":3901:3943  require(success, \"Failed to find Factory\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"src/Contract_1.sol\":3953:3973  address poolAddress_ */\n      0x00\n        /* \"src/Contract_1.sol\":3976:4003  bytesToAddress(poolAddress) */\n      tag_259\n        /* \"src/Contract_1.sol\":3991:4002  poolAddress */\n      dup3\n        /* \"src/Contract_1.sol\":3976:3990  bytesToAddress */\n      tag_260\n        /* \"src/Contract_1.sol\":3976:4003  bytesToAddress(poolAddress) */\n      jump\t// in\n    tag_259:\n        /* \"src/Contract_1.sol\":3953:4003  address poolAddress_ = bytesToAddress(poolAddress) */\n      swap1\n      pop\n        /* \"src/Contract_1.sol\":4035:4047  poolAddress_ */\n      dup1\n        /* \"src/Contract_1.sol\":4027:4053  address(poolAddress_).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":4114:4120  500000 */\n      0x07a120\n        /* \"src/Contract_1.sol\":4067:4121  abi.encodeWithSignature(\"initailize(uint160)\", 500000) */\n      add(0x24, mload(0x40))\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x9a26bd8100000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4027:4131  address(poolAddress_).call(... */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_263:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_266\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_265)\n    tag_266:\n      0x60\n      swap2\n      pop\n    tag_265:\n      pop\n        /* \"src/Contract_1.sol\":4013:4131  (success, ) = address(poolAddress_).call(... */\n      pop\n      dup1\n      swap4\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4149:4156  success */\n      dup3\n        /* \"src/Contract_1.sol\":4141:4186  require(success, \"Failed to Pool initialize\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"src/Contract_1.sol\":4197:4221  MintParams memory params */\n      tag_270\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"src/Contract_1.sol\":4247:4253  token0 */\n      dup7\n        /* \"src/Contract_1.sol\":4231:4237  params */\n      dup2\n        /* \"src/Contract_1.sol\":4231:4244  params.token0 */\n      0x00\n      add\n        /* \"src/Contract_1.sol\":4231:4253  params.token0 = token0 */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4279:4285  token1 */\n      dup6\n        /* \"src/Contract_1.sol\":4263:4269  params */\n      dup2\n        /* \"src/Contract_1.sol\":4263:4276  params.token1 */\n      0x20\n      add\n        /* \"src/Contract_1.sol\":4263:4285  params.token1 = token1 */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4308:4311  fee */\n      dup5\n        /* \"src/Contract_1.sol\":4295:4301  params */\n      dup2\n        /* \"src/Contract_1.sol\":4295:4305  params.fee */\n      0x40\n      add\n        /* \"src/Contract_1.sol\":4295:4311  params.fee = fee */\n      swap1\n      0xffffff\n      and\n      swap1\n      dup2\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4340:4347  -887220 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764c\n        /* \"src/Contract_1.sol\":4321:4327  params */\n      dup2\n        /* \"src/Contract_1.sol\":4321:4337  params.lowerTick */\n      0x60\n      add\n        /* \"src/Contract_1.sol\":4321:4347  params.lowerTick = -887220 */\n      swap1\n      0x02\n      signextend\n      swap1\n      dup2\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4376:4382  887220 */\n      0x0d89b4\n        /* \"src/Contract_1.sol\":4357:4363  params */\n      dup2\n        /* \"src/Contract_1.sol\":4357:4373  params.upperTick */\n      0x80\n      add\n        /* \"src/Contract_1.sol\":4357:4382  params.upperTick = 887220 */\n      swap1\n      0x02\n      signextend\n      swap1\n      dup2\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4416:4433  500000 * (10**18) */\n      0x69e10de76676d0800000\n        /* \"src/Contract_1.sol\":4392:4398  params */\n      dup2\n        /* \"src/Contract_1.sol\":4392:4413  params.amount0Desired */\n      0xa0\n      add\n        /* \"src/Contract_1.sol\":4392:4433  params.amount0Desired = 500000 * (10**18) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4467:4484  500000 * (10**18) */\n      0x69e10de76676d0800000\n        /* \"src/Contract_1.sol\":4443:4449  params */\n      dup2\n        /* \"src/Contract_1.sol\":4443:4464  params.amount1Desired */\n      0xc0\n      add\n        /* \"src/Contract_1.sol\":4443:4484  params.amount1Desired = 500000 * (10**18) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4514:4515  0 */\n      0x00\n        /* \"src/Contract_1.sol\":4494:4500  params */\n      dup2\n        /* \"src/Contract_1.sol\":4494:4511  params.amount0Min */\n      0xe0\n      add\n        /* \"src/Contract_1.sol\":4494:4515  params.amount0Min = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4545:4546  0 */\n      0x00\n        /* \"src/Contract_1.sol\":4525:4531  params */\n      dup2\n        /* \"src/Contract_1.sol\":4525:4542  params.amount1Min */\n      0x0100\n      add\n        /* \"src/Contract_1.sol\":4525:4546  params.amount1Min = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4579:4591  poolAddress_ */\n      dup2\n        /* \"src/Contract_1.sol\":4571:4597  address(poolAddress_).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Contract_1.sol\":4746:4752  params */\n      dup2\n        /* \"src/Contract_1.sol\":4611:4766  abi.encodeWithSignature(... */\n      add(0x24, mload(0x40))\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xaa88a96c00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4571:4776  address(poolAddress_).call(... */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_274:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"src/Contract_1.sol\":4557:4776  (success, ) = address(poolAddress_).call(... */\n      pop\n      dup1\n      swap5\n      pop\n      pop\n        /* \"src/Contract_1.sol\":4794:4801  success */\n      dup4\n        /* \"src/Contract_1.sol\":4786:4820  require(success, \"Failed to Mint\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_193\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"src/Contract_1.sol\":3637:4827  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract_1.sol\":3506:4827  function poolInit(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_289\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_305\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_306)\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_310)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract_1.sol\":4838:4992  function bytesToAddress(bytes memory bys) private pure returns (address addr) {... */\n    tag_260:\n        /* \"src/Contract_1.sol\":4902:4914  address addr */\n      0x00\n        /* \"src/Contract_1.sol\":4972:4974  20 */\n      0x14\n        /* \"src/Contract_1.sol\":4967:4970  bys */\n      dup3\n        /* \"src/Contract_1.sol\":4963:4975  add(bys, 20) */\n      add\n        /* \"src/Contract_1.sol\":4957:4976  mload(add(bys, 20)) */\n      mload\n        /* \"src/Contract_1.sol\":4949:4976  addr := mload(add(bys, 20)) */\n      swap1\n      pop\n        /* \"src/Contract_1.sol\":4838:4992  function bytesToAddress(bytes memory bys) private pure returns (address addr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_315\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_326\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_326:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_329\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_328)\n    tag_329:\n      0x60\n      swap2\n      pop\n    tag_328:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_331\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_334\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_336)\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_337\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_332)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_332:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      signextend(0x02, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      signextend(0x02, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_343:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_344:\n        /* \"#utility.yul\":177:201   */\n      tag_414\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_343\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_32:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_416\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_344\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_345:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_346:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_347:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_420:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_348:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_349:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_425\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_345\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1253:1324   */\n      tag_426\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_346\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_427\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_347\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1423:1452   */\n      tag_428\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_348\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_36:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_430\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_349\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_351:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2237   */\n    tag_353:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2188:2230   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2181:2186   */\n      dup3\n        /* \"#utility.yul\":2177:2231   */\n      and\n        /* \"#utility.yul\":2166:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2339   */\n    tag_354:\n        /* \"#utility.yul\":2280:2287   */\n      0x00\n        /* \"#utility.yul\":2309:2333   */\n      tag_436\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2309:2333   */\n      tag_353\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":2298:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2243:2339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2467   */\n    tag_355:\n        /* \"#utility.yul\":2418:2442   */\n      tag_438\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_354\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_439:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2612   */\n    tag_356:\n        /* \"#utility.yul\":2519:2524   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup2\n        /* \"#utility.yul\":2544:2564   */\n      calldataload\n        /* \"#utility.yul\":2535:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2606   */\n      tag_441\n        /* \"#utility.yul\":2600:2605   */\n      dup2\n        /* \"#utility.yul\":2573:2606   */\n      tag_355\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2473:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2740   */\n    tag_357:\n        /* \"#utility.yul\":2691:2715   */\n      tag_443\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2691:2715   */\n      tag_343\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2716   */\n      eq\n        /* \"#utility.yul\":2671:2734   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2671:2734   */\n    tag_444:\n        /* \"#utility.yul\":2618:2740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2885   */\n    tag_358:\n        /* \"#utility.yul\":2792:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup2\n        /* \"#utility.yul\":2817:2837   */\n      calldataload\n        /* \"#utility.yul\":2808:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2879   */\n      tag_446\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2846:2879   */\n      tag_357\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2746:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3365   */\n    tag_39:\n        /* \"#utility.yul\":2959:2965   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":3016:3018   */\n      0x40\n        /* \"#utility.yul\":3004:3013   */\n      dup4\n        /* \"#utility.yul\":2995:3002   */\n      dup6\n        /* \"#utility.yul\":2991:3014   */\n      sub\n        /* \"#utility.yul\":2987:3019   */\n      slt\n        /* \"#utility.yul\":2984:3103   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3022:3101   */\n      tag_449\n      tag_351\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2984:3103   */\n    tag_448:\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3167:3220   */\n      tag_450\n        /* \"#utility.yul\":3212:3219   */\n      dup6\n        /* \"#utility.yul\":3203:3209   */\n      dup3\n        /* \"#utility.yul\":3192:3201   */\n      dup7\n        /* \"#utility.yul\":3188:3210   */\n      add\n        /* \"#utility.yul\":3167:3220   */\n      tag_356\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3157:3220   */\n      swap3\n      pop\n        /* \"#utility.yul\":3113:3230   */\n      pop\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"#utility.yul\":3295:3348   */\n      tag_451\n        /* \"#utility.yul\":3340:3347   */\n      dup6\n        /* \"#utility.yul\":3331:3337   */\n      dup3\n        /* \"#utility.yul\":3320:3329   */\n      dup7\n        /* \"#utility.yul\":3316:3338   */\n      add\n        /* \"#utility.yul\":3295:3348   */\n      tag_358\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3285:3348   */\n      swap2\n      pop\n        /* \"#utility.yul\":3240:3358   */\n      pop\n        /* \"#utility.yul\":2891:3365   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3461   */\n    tag_359:\n        /* \"#utility.yul\":3405:3412   */\n      0x00\n        /* \"#utility.yul\":3448:3453   */\n      dup2\n        /* \"#utility.yul\":3441:3454   */\n      iszero\n        /* \"#utility.yul\":3434:3455   */\n      iszero\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3576   */\n    tag_360:\n        /* \"#utility.yul\":3548:3569   */\n      tag_454\n        /* \"#utility.yul\":3563:3568   */\n      dup2\n        /* \"#utility.yul\":3548:3569   */\n      tag_359\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3543:3546   */\n      dup3\n        /* \"#utility.yul\":3536:3570   */\n      mstore\n        /* \"#utility.yul\":3467:3576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3792   */\n    tag_42:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3785   */\n      tag_456\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3720:3785   */\n      tag_360\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3582:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3916   */\n    tag_361:\n        /* \"#utility.yul\":3885:3909   */\n      tag_458\n        /* \"#utility.yul\":3903:3908   */\n      dup2\n        /* \"#utility.yul\":3885:3909   */\n      tag_354\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3880:3883   */\n      dup3\n        /* \"#utility.yul\":3873:3910   */\n      mstore\n        /* \"#utility.yul\":3798:3916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4144   */\n    tag_49:\n        /* \"#utility.yul\":4015:4019   */\n      0x00\n        /* \"#utility.yul\":4053:4055   */\n      0x20\n        /* \"#utility.yul\":4042:4051   */\n      dup3\n        /* \"#utility.yul\":4038:4056   */\n      add\n        /* \"#utility.yul\":4030:4056   */\n      swap1\n      pop\n        /* \"#utility.yul\":4066:4137   */\n      tag_460\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4123:4132   */\n      dup4\n        /* \"#utility.yul\":4119:4136   */\n      add\n        /* \"#utility.yul\":4110:4116   */\n      dup5\n        /* \"#utility.yul\":4066:4137   */\n      tag_361\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3922:4144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4769   */\n    tag_52:\n        /* \"#utility.yul\":4227:4233   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup1\n        /* \"#utility.yul\":4243:4249   */\n      0x00\n        /* \"#utility.yul\":4292:4294   */\n      0x60\n        /* \"#utility.yul\":4280:4289   */\n      dup5\n        /* \"#utility.yul\":4271:4278   */\n      dup7\n        /* \"#utility.yul\":4267:4290   */\n      sub\n        /* \"#utility.yul\":4263:4295   */\n      slt\n        /* \"#utility.yul\":4260:4379   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":4298:4377   */\n      tag_463\n      tag_351\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4260:4379   */\n    tag_462:\n        /* \"#utility.yul\":4418:4419   */\n      0x00\n        /* \"#utility.yul\":4443:4496   */\n      tag_464\n        /* \"#utility.yul\":4488:4495   */\n      dup7\n        /* \"#utility.yul\":4479:4485   */\n      dup3\n        /* \"#utility.yul\":4468:4477   */\n      dup8\n        /* \"#utility.yul\":4464:4486   */\n      add\n        /* \"#utility.yul\":4443:4496   */\n      tag_356\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4433:4496   */\n      swap4\n      pop\n        /* \"#utility.yul\":4389:4506   */\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x20\n        /* \"#utility.yul\":4571:4624   */\n      tag_465\n        /* \"#utility.yul\":4616:4623   */\n      dup7\n        /* \"#utility.yul\":4607:4613   */\n      dup3\n        /* \"#utility.yul\":4596:4605   */\n      dup8\n        /* \"#utility.yul\":4592:4614   */\n      add\n        /* \"#utility.yul\":4571:4624   */\n      tag_356\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4561:4624   */\n      swap3\n      pop\n        /* \"#utility.yul\":4516:4634   */\n      pop\n        /* \"#utility.yul\":4673:4675   */\n      0x40\n        /* \"#utility.yul\":4699:4752   */\n      tag_466\n        /* \"#utility.yul\":4744:4751   */\n      dup7\n        /* \"#utility.yul\":4735:4741   */\n      dup3\n        /* \"#utility.yul\":4724:4733   */\n      dup8\n        /* \"#utility.yul\":4720:4742   */\n      add\n        /* \"#utility.yul\":4699:4752   */\n      tag_358\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4689:4752   */\n      swap2\n      pop\n        /* \"#utility.yul\":4644:4762   */\n      pop\n        /* \"#utility.yul\":4150:4769   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4775:4861   */\n    tag_362:\n        /* \"#utility.yul\":4810:4817   */\n      0x00\n        /* \"#utility.yul\":4850:4854   */\n      0xff\n        /* \"#utility.yul\":4843:4848   */\n      dup3\n        /* \"#utility.yul\":4839:4855   */\n      and\n        /* \"#utility.yul\":4828:4855   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4867:4979   */\n    tag_363:\n        /* \"#utility.yul\":4950:4972   */\n      tag_469\n        /* \"#utility.yul\":4966:4971   */\n      dup2\n        /* \"#utility.yul\":4950:4972   */\n      tag_362\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4945:4948   */\n      dup3\n        /* \"#utility.yul\":4938:4973   */\n      mstore\n        /* \"#utility.yul\":4867:4979   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4985:5199   */\n    tag_58:\n        /* \"#utility.yul\":5074:5078   */\n      0x00\n        /* \"#utility.yul\":5112:5114   */\n      0x20\n        /* \"#utility.yul\":5101:5110   */\n      dup3\n        /* \"#utility.yul\":5097:5115   */\n      add\n        /* \"#utility.yul\":5089:5115   */\n      swap1\n      pop\n        /* \"#utility.yul\":5125:5192   */\n      tag_471\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5178:5187   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5165:5171   */\n      dup5\n        /* \"#utility.yul\":5125:5192   */\n      tag_363\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4985:5199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5534   */\n    tag_69:\n        /* \"#utility.yul\":5264:5270   */\n      0x00\n        /* \"#utility.yul\":5313:5315   */\n      0x20\n        /* \"#utility.yul\":5301:5310   */\n      dup3\n        /* \"#utility.yul\":5292:5299   */\n      dup5\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_474\n      tag_351\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5281:5400   */\n    tag_473:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_475\n        /* \"#utility.yul\":5509:5516   */\n      dup5\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup6\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_356\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5454:5517   */\n      swap2\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5205:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_99:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_478\n      tag_351\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5633:5752   */\n    tag_477:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_479\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_356\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_480\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_356\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6349   */\n    tag_104:\n        /* \"#utility.yul\":6079:6085   */\n      0x00\n        /* \"#utility.yul\":6128:6130   */\n      0x20\n        /* \"#utility.yul\":6116:6125   */\n      dup3\n        /* \"#utility.yul\":6107:6114   */\n      dup5\n        /* \"#utility.yul\":6103:6126   */\n      sub\n        /* \"#utility.yul\":6099:6131   */\n      slt\n        /* \"#utility.yul\":6096:6215   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":6134:6213   */\n      tag_483\n      tag_351\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6096:6215   */\n    tag_482:\n        /* \"#utility.yul\":6254:6255   */\n      0x00\n        /* \"#utility.yul\":6279:6332   */\n      tag_484\n        /* \"#utility.yul\":6324:6331   */\n      dup5\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup6\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_358\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6225:6342   */\n      pop\n        /* \"#utility.yul\":6020:6349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_364:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_114:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_487:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_489\n      tag_364\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6771:6855   */\n    tag_488:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7031   */\n    tag_365:\n        /* \"#utility.yul\":7007:7023   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7003:7004   */\n      0x00\n        /* \"#utility.yul\":6995:7001   */\n      dup3\n        /* \"#utility.yul\":6991:7005   */\n      add\n        /* \"#utility.yul\":6984:7024   */\n      mstore\n        /* \"#utility.yul\":6867:7031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7037:7403   */\n    tag_366:\n        /* \"#utility.yul\":7179:7182   */\n      0x00\n        /* \"#utility.yul\":7200:7267   */\n      tag_492\n        /* \"#utility.yul\":7264:7266   */\n      0x0e\n        /* \"#utility.yul\":7259:7262   */\n      dup4\n        /* \"#utility.yul\":7200:7267   */\n      tag_346\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7193:7267   */\n      swap2\n      pop\n        /* \"#utility.yul\":7276:7369   */\n      tag_493\n        /* \"#utility.yul\":7365:7368   */\n      dup3\n        /* \"#utility.yul\":7276:7369   */\n      tag_365\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7394:7396   */\n      0x20\n        /* \"#utility.yul\":7389:7392   */\n      dup3\n        /* \"#utility.yul\":7385:7397   */\n      add\n        /* \"#utility.yul\":7378:7397   */\n      swap1\n      pop\n        /* \"#utility.yul\":7037:7403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7828   */\n    tag_135:\n        /* \"#utility.yul\":7575:7579   */\n      0x00\n        /* \"#utility.yul\":7613:7615   */\n      0x20\n        /* \"#utility.yul\":7602:7611   */\n      dup3\n        /* \"#utility.yul\":7598:7616   */\n      add\n        /* \"#utility.yul\":7590:7616   */\n      swap1\n      pop\n        /* \"#utility.yul\":7662:7671   */\n      dup2\n        /* \"#utility.yul\":7656:7660   */\n      dup2\n        /* \"#utility.yul\":7652:7672   */\n      sub\n        /* \"#utility.yul\":7648:7649   */\n      0x00\n        /* \"#utility.yul\":7637:7646   */\n      dup4\n        /* \"#utility.yul\":7633:7650   */\n      add\n        /* \"#utility.yul\":7626:7673   */\n      mstore\n        /* \"#utility.yul\":7690:7821   */\n      tag_495\n        /* \"#utility.yul\":7816:7820   */\n      dup2\n        /* \"#utility.yul\":7690:7821   */\n      tag_366\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7682:7821   */\n      swap1\n      pop\n        /* \"#utility.yul\":7409:7828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7834:7977   */\n    tag_367:\n        /* \"#utility.yul\":7891:7896   */\n      0x00\n        /* \"#utility.yul\":7922:7928   */\n      dup2\n        /* \"#utility.yul\":7916:7929   */\n      mload\n        /* \"#utility.yul\":7907:7929   */\n      swap1\n      pop\n        /* \"#utility.yul\":7938:7971   */\n      tag_497\n        /* \"#utility.yul\":7965:7970   */\n      dup2\n        /* \"#utility.yul\":7938:7971   */\n      tag_357\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7834:7977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7983:8334   */\n    tag_141:\n        /* \"#utility.yul\":8053:8059   */\n      0x00\n        /* \"#utility.yul\":8102:8104   */\n      0x20\n        /* \"#utility.yul\":8090:8099   */\n      dup3\n        /* \"#utility.yul\":8081:8088   */\n      dup5\n        /* \"#utility.yul\":8077:8100   */\n      sub\n        /* \"#utility.yul\":8073:8105   */\n      slt\n        /* \"#utility.yul\":8070:8189   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":8108:8187   */\n      tag_500\n      tag_351\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8070:8189   */\n    tag_499:\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8253:8317   */\n      tag_501\n        /* \"#utility.yul\":8309:8316   */\n      dup5\n        /* \"#utility.yul\":8300:8306   */\n      dup3\n        /* \"#utility.yul\":8289:8298   */\n      dup6\n        /* \"#utility.yul\":8285:8307   */\n      add\n        /* \"#utility.yul\":8253:8317   */\n      tag_367\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8243:8317   */\n      swap2\n      pop\n        /* \"#utility.yul\":8199:8327   */\n      pop\n        /* \"#utility.yul\":7983:8334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8340:8511   */\n    tag_368:\n        /* \"#utility.yul\":8480:8503   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":8476:8477   */\n      0x00\n        /* \"#utility.yul\":8468:8474   */\n      dup3\n        /* \"#utility.yul\":8464:8478   */\n      add\n        /* \"#utility.yul\":8457:8504   */\n      mstore\n        /* \"#utility.yul\":8340:8511   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8517:8883   */\n    tag_369:\n        /* \"#utility.yul\":8659:8662   */\n      0x00\n        /* \"#utility.yul\":8680:8747   */\n      tag_504\n        /* \"#utility.yul\":8744:8746   */\n      0x15\n        /* \"#utility.yul\":8739:8742   */\n      dup4\n        /* \"#utility.yul\":8680:8747   */\n      tag_346\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8673:8747   */\n      swap2\n      pop\n        /* \"#utility.yul\":8756:8849   */\n      tag_505\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8756:8849   */\n      tag_368\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8874:8876   */\n      0x20\n        /* \"#utility.yul\":8869:8872   */\n      dup3\n        /* \"#utility.yul\":8865:8877   */\n      add\n        /* \"#utility.yul\":8858:8877   */\n      swap1\n      pop\n        /* \"#utility.yul\":8517:8883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8889:9308   */\n    tag_144:\n        /* \"#utility.yul\":9055:9059   */\n      0x00\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9082:9091   */\n      dup3\n        /* \"#utility.yul\":9078:9096   */\n      add\n        /* \"#utility.yul\":9070:9096   */\n      swap1\n      pop\n        /* \"#utility.yul\":9142:9151   */\n      dup2\n        /* \"#utility.yul\":9136:9140   */\n      dup2\n        /* \"#utility.yul\":9132:9152   */\n      sub\n        /* \"#utility.yul\":9128:9129   */\n      0x00\n        /* \"#utility.yul\":9117:9126   */\n      dup4\n        /* \"#utility.yul\":9113:9130   */\n      add\n        /* \"#utility.yul\":9106:9153   */\n      mstore\n        /* \"#utility.yul\":9170:9301   */\n      tag_507\n        /* \"#utility.yul\":9296:9300   */\n      dup2\n        /* \"#utility.yul\":9170:9301   */\n      tag_369\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9162:9301   */\n      swap1\n      pop\n        /* \"#utility.yul\":8889:9308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9314:9481   */\n    tag_370:\n        /* \"#utility.yul\":9454:9473   */\n      0x4e6f7420456e6f75676820537570706c79000000000000000000000000000000\n        /* \"#utility.yul\":9450:9451   */\n      0x00\n        /* \"#utility.yul\":9442:9448   */\n      dup3\n        /* \"#utility.yul\":9438:9452   */\n      add\n        /* \"#utility.yul\":9431:9474   */\n      mstore\n        /* \"#utility.yul\":9314:9481   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9487:9853   */\n    tag_371:\n        /* \"#utility.yul\":9629:9632   */\n      0x00\n        /* \"#utility.yul\":9650:9717   */\n      tag_510\n        /* \"#utility.yul\":9714:9716   */\n      0x11\n        /* \"#utility.yul\":9709:9712   */\n      dup4\n        /* \"#utility.yul\":9650:9717   */\n      tag_346\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9643:9717   */\n      swap2\n      pop\n        /* \"#utility.yul\":9726:9819   */\n      tag_511\n        /* \"#utility.yul\":9815:9818   */\n      dup3\n        /* \"#utility.yul\":9726:9819   */\n      tag_370\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9844:9846   */\n      0x20\n        /* \"#utility.yul\":9839:9842   */\n      dup3\n        /* \"#utility.yul\":9835:9847   */\n      add\n        /* \"#utility.yul\":9828:9847   */\n      swap1\n      pop\n        /* \"#utility.yul\":9487:9853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9859:10278   */\n    tag_147:\n        /* \"#utility.yul\":10025:10029   */\n      0x00\n        /* \"#utility.yul\":10063:10065   */\n      0x20\n        /* \"#utility.yul\":10052:10061   */\n      dup3\n        /* \"#utility.yul\":10048:10066   */\n      add\n        /* \"#utility.yul\":10040:10066   */\n      swap1\n      pop\n        /* \"#utility.yul\":10112:10121   */\n      dup2\n        /* \"#utility.yul\":10106:10110   */\n      dup2\n        /* \"#utility.yul\":10102:10122   */\n      sub\n        /* \"#utility.yul\":10098:10099   */\n      0x00\n        /* \"#utility.yul\":10087:10096   */\n      dup4\n        /* \"#utility.yul\":10083:10100   */\n      add\n        /* \"#utility.yul\":10076:10123   */\n      mstore\n        /* \"#utility.yul\":10140:10271   */\n      tag_513\n        /* \"#utility.yul\":10266:10270   */\n      dup2\n        /* \"#utility.yul\":10140:10271   */\n      tag_371\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10132:10271   */\n      swap1\n      pop\n        /* \"#utility.yul\":9859:10278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10284:10616   */\n    tag_151:\n        /* \"#utility.yul\":10405:10409   */\n      0x00\n        /* \"#utility.yul\":10443:10445   */\n      0x40\n        /* \"#utility.yul\":10432:10441   */\n      dup3\n        /* \"#utility.yul\":10428:10446   */\n      add\n        /* \"#utility.yul\":10420:10446   */\n      swap1\n      pop\n        /* \"#utility.yul\":10456:10527   */\n      tag_515\n        /* \"#utility.yul\":10524:10525   */\n      0x00\n        /* \"#utility.yul\":10513:10522   */\n      dup4\n        /* \"#utility.yul\":10509:10526   */\n      add\n        /* \"#utility.yul\":10500:10506   */\n      dup6\n        /* \"#utility.yul\":10456:10527   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10537:10609   */\n      tag_516\n        /* \"#utility.yul\":10605:10607   */\n      0x20\n        /* \"#utility.yul\":10594:10603   */\n      dup4\n        /* \"#utility.yul\":10590:10608   */\n      add\n        /* \"#utility.yul\":10581:10587   */\n      dup5\n        /* \"#utility.yul\":10537:10609   */\n      tag_344\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10284:10616   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10738   */\n    tag_372:\n        /* \"#utility.yul\":10692:10713   */\n      tag_518\n        /* \"#utility.yul\":10707:10712   */\n      dup2\n        /* \"#utility.yul\":10692:10713   */\n      tag_359\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10685:10690   */\n      dup2\n        /* \"#utility.yul\":10682:10714   */\n      eq\n        /* \"#utility.yul\":10672:10732   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10728:10729   */\n      0x00\n        /* \"#utility.yul\":10725:10726   */\n      dup1\n        /* \"#utility.yul\":10718:10730   */\n      revert\n        /* \"#utility.yul\":10672:10732   */\n    tag_519:\n        /* \"#utility.yul\":10622:10738   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10744:10881   */\n    tag_373:\n        /* \"#utility.yul\":10798:10803   */\n      0x00\n        /* \"#utility.yul\":10829:10835   */\n      dup2\n        /* \"#utility.yul\":10823:10836   */\n      mload\n        /* \"#utility.yul\":10814:10836   */\n      swap1\n      pop\n        /* \"#utility.yul\":10845:10875   */\n      tag_521\n        /* \"#utility.yul\":10869:10874   */\n      dup2\n        /* \"#utility.yul\":10845:10875   */\n      tag_372\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10744:10881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10887:11232   */\n    tag_155:\n        /* \"#utility.yul\":10954:10960   */\n      0x00\n        /* \"#utility.yul\":11003:11005   */\n      0x20\n        /* \"#utility.yul\":10991:11000   */\n      dup3\n        /* \"#utility.yul\":10982:10989   */\n      dup5\n        /* \"#utility.yul\":10978:11001   */\n      sub\n        /* \"#utility.yul\":10974:11006   */\n      slt\n        /* \"#utility.yul\":10971:11090   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":11009:11088   */\n      tag_524\n      tag_351\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10971:11090   */\n    tag_523:\n        /* \"#utility.yul\":11129:11130   */\n      0x00\n        /* \"#utility.yul\":11154:11215   */\n      tag_525\n        /* \"#utility.yul\":11207:11214   */\n      dup5\n        /* \"#utility.yul\":11198:11204   */\n      dup3\n        /* \"#utility.yul\":11187:11196   */\n      dup6\n        /* \"#utility.yul\":11183:11205   */\n      add\n        /* \"#utility.yul\":11154:11215   */\n      tag_373\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11144:11215   */\n      swap2\n      pop\n        /* \"#utility.yul\":11100:11225   */\n      pop\n        /* \"#utility.yul\":10887:11232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11238:11420   */\n    tag_374:\n        /* \"#utility.yul\":11378:11412   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11366:11372   */\n      dup3\n        /* \"#utility.yul\":11362:11376   */\n      add\n        /* \"#utility.yul\":11355:11413   */\n      mstore\n        /* \"#utility.yul\":11238:11420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11426:11792   */\n    tag_375:\n        /* \"#utility.yul\":11568:11571   */\n      0x00\n        /* \"#utility.yul\":11589:11656   */\n      tag_528\n        /* \"#utility.yul\":11653:11655   */\n      0x20\n        /* \"#utility.yul\":11648:11651   */\n      dup4\n        /* \"#utility.yul\":11589:11656   */\n      tag_346\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11582:11656   */\n      swap2\n      pop\n        /* \"#utility.yul\":11665:11758   */\n      tag_529\n        /* \"#utility.yul\":11754:11757   */\n      dup3\n        /* \"#utility.yul\":11665:11758   */\n      tag_374\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11783:11785   */\n      0x20\n        /* \"#utility.yul\":11778:11781   */\n      dup3\n        /* \"#utility.yul\":11774:11786   */\n      add\n        /* \"#utility.yul\":11767:11786   */\n      swap1\n      pop\n        /* \"#utility.yul\":11426:11792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11798:12217   */\n    tag_179:\n        /* \"#utility.yul\":11964:11968   */\n      0x00\n        /* \"#utility.yul\":12002:12004   */\n      0x20\n        /* \"#utility.yul\":11991:12000   */\n      dup3\n        /* \"#utility.yul\":11987:12005   */\n      add\n        /* \"#utility.yul\":11979:12005   */\n      swap1\n      pop\n        /* \"#utility.yul\":12051:12060   */\n      dup2\n        /* \"#utility.yul\":12045:12049   */\n      dup2\n        /* \"#utility.yul\":12041:12061   */\n      sub\n        /* \"#utility.yul\":12037:12038   */\n      0x00\n        /* \"#utility.yul\":12026:12035   */\n      dup4\n        /* \"#utility.yul\":12022:12039   */\n      add\n        /* \"#utility.yul\":12015:12062   */\n      mstore\n        /* \"#utility.yul\":12079:12210   */\n      tag_531\n        /* \"#utility.yul\":12205:12209   */\n      dup2\n        /* \"#utility.yul\":12079:12210   */\n      tag_375\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12071:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":11798:12217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12223:12403   */\n    tag_182:\n        /* \"#utility.yul\":12271:12348   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12268:12269   */\n      0x00\n        /* \"#utility.yul\":12261:12349   */\n      mstore\n        /* \"#utility.yul\":12368:12372   */\n      0x41\n        /* \"#utility.yul\":12365:12366   */\n      0x04\n        /* \"#utility.yul\":12358:12373   */\n      mstore\n        /* \"#utility.yul\":12392:12396   */\n      0x24\n        /* \"#utility.yul\":12389:12390   */\n      0x00\n        /* \"#utility.yul\":12382:12397   */\n      revert\n        /* \"#utility.yul\":12409:12494   */\n    tag_376:\n        /* \"#utility.yul\":12454:12461   */\n      0x00\n        /* \"#utility.yul\":12483:12488   */\n      dup2\n        /* \"#utility.yul\":12472:12488   */\n      swap1\n      pop\n        /* \"#utility.yul\":12409:12494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12500:12560   */\n    tag_377:\n        /* \"#utility.yul\":12528:12531   */\n      0x00\n        /* \"#utility.yul\":12549:12554   */\n      dup2\n        /* \"#utility.yul\":12542:12554   */\n      swap1\n      pop\n        /* \"#utility.yul\":12500:12560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12566:12720   */\n    tag_378:\n        /* \"#utility.yul\":12622:12631   */\n      0x00\n        /* \"#utility.yul\":12655:12714   */\n      tag_536\n        /* \"#utility.yul\":12671:12713   */\n      tag_537\n        /* \"#utility.yul\":12680:12712   */\n      tag_538\n        /* \"#utility.yul\":12706:12711   */\n      dup5\n        /* \"#utility.yul\":12680:12712   */\n      tag_376\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12671:12713   */\n      tag_377\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12655:12714   */\n      tag_362\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12642:12714   */\n      swap1\n      pop\n        /* \"#utility.yul\":12566:12720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12726:12869   */\n    tag_379:\n        /* \"#utility.yul\":12819:12862   */\n      tag_540\n        /* \"#utility.yul\":12856:12861   */\n      dup2\n        /* \"#utility.yul\":12819:12862   */\n      tag_378\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12814:12817   */\n      dup3\n        /* \"#utility.yul\":12807:12863   */\n      mstore\n        /* \"#utility.yul\":12726:12869   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12875:12973   */\n    tag_380:\n        /* \"#utility.yul\":12926:12932   */\n      0x00\n        /* \"#utility.yul\":12960:12965   */\n      dup2\n        /* \"#utility.yul\":12954:12966   */\n      mload\n        /* \"#utility.yul\":12944:12966   */\n      swap1\n      pop\n        /* \"#utility.yul\":12875:12973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12979:13147   */\n    tag_381:\n        /* \"#utility.yul\":13062:13073   */\n      0x00\n        /* \"#utility.yul\":13096:13102   */\n      dup3\n        /* \"#utility.yul\":13091:13094   */\n      dup3\n        /* \"#utility.yul\":13084:13103   */\n      mstore\n        /* \"#utility.yul\":13136:13140   */\n      0x20\n        /* \"#utility.yul\":13131:13134   */\n      dup3\n        /* \"#utility.yul\":13127:13141   */\n      add\n        /* \"#utility.yul\":13112:13141   */\n      swap1\n      pop\n        /* \"#utility.yul\":12979:13147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13153:13526   */\n    tag_382:\n        /* \"#utility.yul\":13239:13242   */\n      0x00\n        /* \"#utility.yul\":13267:13305   */\n      tag_544\n        /* \"#utility.yul\":13299:13304   */\n      dup3\n        /* \"#utility.yul\":13267:13305   */\n      tag_380\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13321:13391   */\n      tag_545\n        /* \"#utility.yul\":13384:13390   */\n      dup2\n        /* \"#utility.yul\":13379:13382   */\n      dup6\n        /* \"#utility.yul\":13321:13391   */\n      tag_381\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13314:13391   */\n      swap4\n      pop\n        /* \"#utility.yul\":13400:13465   */\n      tag_546\n        /* \"#utility.yul\":13458:13464   */\n      dup2\n        /* \"#utility.yul\":13453:13456   */\n      dup6\n        /* \"#utility.yul\":13446:13450   */\n      0x20\n        /* \"#utility.yul\":13439:13444   */\n      dup7\n        /* \"#utility.yul\":13435:13451   */\n      add\n        /* \"#utility.yul\":13400:13465   */\n      tag_347\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13490:13519   */\n      tag_547\n        /* \"#utility.yul\":13512:13518   */\n      dup2\n        /* \"#utility.yul\":13490:13519   */\n      tag_348\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13485:13488   */\n      dup5\n        /* \"#utility.yul\":13481:13520   */\n      add\n        /* \"#utility.yul\":13474:13520   */\n      swap2\n      pop\n        /* \"#utility.yul\":13243:13526   */\n      pop\n        /* \"#utility.yul\":13153:13526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13532:14295   */\n    tag_185:\n        /* \"#utility.yul\":13761:13765   */\n      0x00\n        /* \"#utility.yul\":13799:13802   */\n      0xa0\n        /* \"#utility.yul\":13788:13797   */\n      dup3\n        /* \"#utility.yul\":13784:13803   */\n      add\n        /* \"#utility.yul\":13776:13803   */\n      swap1\n      pop\n        /* \"#utility.yul\":13813:13884   */\n      tag_549\n        /* \"#utility.yul\":13881:13882   */\n      0x00\n        /* \"#utility.yul\":13870:13879   */\n      dup4\n        /* \"#utility.yul\":13866:13883   */\n      add\n        /* \"#utility.yul\":13857:13863   */\n      dup9\n        /* \"#utility.yul\":13813:13884   */\n      tag_361\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13894:13960   */\n      tag_550\n        /* \"#utility.yul\":13956:13958   */\n      0x20\n        /* \"#utility.yul\":13945:13954   */\n      dup4\n        /* \"#utility.yul\":13941:13959   */\n      add\n        /* \"#utility.yul\":13932:13938   */\n      dup8\n        /* \"#utility.yul\":13894:13960   */\n      tag_360\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13970:14048   */\n      tag_551\n        /* \"#utility.yul\":14044:14046   */\n      0x40\n        /* \"#utility.yul\":14033:14042   */\n      dup4\n        /* \"#utility.yul\":14029:14047   */\n      add\n        /* \"#utility.yul\":14020:14026   */\n      dup7\n        /* \"#utility.yul\":13970:14048   */\n      tag_379\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14058:14136   */\n      tag_552\n        /* \"#utility.yul\":14132:14134   */\n      0x60\n        /* \"#utility.yul\":14121:14130   */\n      dup4\n        /* \"#utility.yul\":14117:14135   */\n      add\n        /* \"#utility.yul\":14108:14114   */\n      dup6\n        /* \"#utility.yul\":14058:14136   */\n      tag_379\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14184:14193   */\n      dup2\n        /* \"#utility.yul\":14178:14182   */\n      dup2\n        /* \"#utility.yul\":14174:14194   */\n      sub\n        /* \"#utility.yul\":14168:14171   */\n      0x80\n        /* \"#utility.yul\":14157:14166   */\n      dup4\n        /* \"#utility.yul\":14153:14172   */\n      add\n        /* \"#utility.yul\":14146:14195   */\n      mstore\n        /* \"#utility.yul\":14212:14288   */\n      tag_553\n        /* \"#utility.yul\":14283:14287   */\n      dup2\n        /* \"#utility.yul\":14274:14280   */\n      dup5\n        /* \"#utility.yul\":14212:14288   */\n      tag_382\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14204:14288   */\n      swap1\n      pop\n        /* \"#utility.yul\":13532:14295   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14301:14448   */\n    tag_383:\n        /* \"#utility.yul\":14402:14413   */\n      0x00\n        /* \"#utility.yul\":14439:14442   */\n      dup2\n        /* \"#utility.yul\":14424:14442   */\n      swap1\n      pop\n        /* \"#utility.yul\":14301:14448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14454:14840   */\n    tag_384:\n        /* \"#utility.yul\":14558:14561   */\n      0x00\n        /* \"#utility.yul\":14586:14624   */\n      tag_556\n        /* \"#utility.yul\":14618:14623   */\n      dup3\n        /* \"#utility.yul\":14586:14624   */\n      tag_380\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14640:14728   */\n      tag_557\n        /* \"#utility.yul\":14721:14727   */\n      dup2\n        /* \"#utility.yul\":14716:14719   */\n      dup6\n        /* \"#utility.yul\":14640:14728   */\n      tag_383\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14633:14728   */\n      swap4\n      pop\n        /* \"#utility.yul\":14737:14802   */\n      tag_558\n        /* \"#utility.yul\":14795:14801   */\n      dup2\n        /* \"#utility.yul\":14790:14793   */\n      dup6\n        /* \"#utility.yul\":14783:14787   */\n      0x20\n        /* \"#utility.yul\":14776:14781   */\n      dup7\n        /* \"#utility.yul\":14772:14788   */\n      add\n        /* \"#utility.yul\":14737:14802   */\n      tag_347\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14827:14833   */\n      dup1\n        /* \"#utility.yul\":14822:14825   */\n      dup5\n        /* \"#utility.yul\":14818:14834   */\n      add\n        /* \"#utility.yul\":14811:14834   */\n      swap2\n      pop\n        /* \"#utility.yul\":14562:14840   */\n      pop\n        /* \"#utility.yul\":14454:14840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14846:15117   */\n    tag_187:\n        /* \"#utility.yul\":14976:14979   */\n      0x00\n        /* \"#utility.yul\":14998:15091   */\n      tag_560\n        /* \"#utility.yul\":15087:15090   */\n      dup3\n        /* \"#utility.yul\":15078:15084   */\n      dup5\n        /* \"#utility.yul\":14998:15091   */\n      tag_384\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14991:15091   */\n      swap2\n      pop\n        /* \"#utility.yul\":15108:15111   */\n      dup2\n        /* \"#utility.yul\":15101:15111   */\n      swap1\n      pop\n        /* \"#utility.yul\":14846:15117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15123:15287   */\n    tag_385:\n        /* \"#utility.yul\":15263:15279   */\n      0x4661696c656420746f204d696e74000000000000000000000000000000000000\n        /* \"#utility.yul\":15259:15260   */\n      0x00\n        /* \"#utility.yul\":15251:15257   */\n      dup3\n        /* \"#utility.yul\":15247:15261   */\n      add\n        /* \"#utility.yul\":15240:15280   */\n      mstore\n        /* \"#utility.yul\":15123:15287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15293:15659   */\n    tag_386:\n        /* \"#utility.yul\":15435:15438   */\n      0x00\n        /* \"#utility.yul\":15456:15523   */\n      tag_563\n        /* \"#utility.yul\":15520:15522   */\n      0x0e\n        /* \"#utility.yul\":15515:15518   */\n      dup4\n        /* \"#utility.yul\":15456:15523   */\n      tag_346\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":15449:15523   */\n      swap2\n      pop\n        /* \"#utility.yul\":15532:15625   */\n      tag_564\n        /* \"#utility.yul\":15621:15624   */\n      dup3\n        /* \"#utility.yul\":15532:15625   */\n      tag_385\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15650:15652   */\n      0x20\n        /* \"#utility.yul\":15645:15648   */\n      dup3\n        /* \"#utility.yul\":15641:15653   */\n      add\n        /* \"#utility.yul\":15634:15653   */\n      swap1\n      pop\n        /* \"#utility.yul\":15293:15659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15665:16084   */\n    tag_193:\n        /* \"#utility.yul\":15831:15835   */\n      0x00\n        /* \"#utility.yul\":15869:15871   */\n      0x20\n        /* \"#utility.yul\":15858:15867   */\n      dup3\n        /* \"#utility.yul\":15854:15872   */\n      add\n        /* \"#utility.yul\":15846:15872   */\n      swap1\n      pop\n        /* \"#utility.yul\":15918:15927   */\n      dup2\n        /* \"#utility.yul\":15912:15916   */\n      dup2\n        /* \"#utility.yul\":15908:15928   */\n      sub\n        /* \"#utility.yul\":15904:15905   */\n      0x00\n        /* \"#utility.yul\":15893:15902   */\n      dup4\n        /* \"#utility.yul\":15889:15906   */\n      add\n        /* \"#utility.yul\":15882:15929   */\n      mstore\n        /* \"#utility.yul\":15946:16077   */\n      tag_566\n        /* \"#utility.yul\":16072:16076   */\n      dup2\n        /* \"#utility.yul\":15946:16077   */\n      tag_386\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15938:16077   */\n      swap1\n      pop\n        /* \"#utility.yul\":15665:16084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16090:16270   */\n    tag_387:\n        /* \"#utility.yul\":16138:16215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16135:16136   */\n      0x00\n        /* \"#utility.yul\":16128:16216   */\n      mstore\n        /* \"#utility.yul\":16235:16239   */\n      0x11\n        /* \"#utility.yul\":16232:16233   */\n      0x04\n        /* \"#utility.yul\":16225:16240   */\n      mstore\n        /* \"#utility.yul\":16259:16263   */\n      0x24\n        /* \"#utility.yul\":16256:16257   */\n      0x00\n        /* \"#utility.yul\":16249:16264   */\n      revert\n        /* \"#utility.yul\":16276:16467   */\n    tag_198:\n        /* \"#utility.yul\":16316:16319   */\n      0x00\n        /* \"#utility.yul\":16335:16355   */\n      tag_569\n        /* \"#utility.yul\":16353:16354   */\n      dup3\n        /* \"#utility.yul\":16335:16355   */\n      tag_343\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16330:16355   */\n      swap2\n      pop\n        /* \"#utility.yul\":16369:16389   */\n      tag_570\n        /* \"#utility.yul\":16387:16388   */\n      dup4\n        /* \"#utility.yul\":16369:16389   */\n      tag_343\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16364:16389   */\n      swap3\n      pop\n        /* \"#utility.yul\":16412:16413   */\n      dup3\n        /* \"#utility.yul\":16409:16410   */\n      dup3\n        /* \"#utility.yul\":16405:16414   */\n      add\n        /* \"#utility.yul\":16398:16414   */\n      swap1\n      pop\n        /* \"#utility.yul\":16433:16436   */\n      dup1\n        /* \"#utility.yul\":16430:16431   */\n      dup3\n        /* \"#utility.yul\":16427:16437   */\n      gt\n        /* \"#utility.yul\":16424:16460   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":16440:16458   */\n      tag_572\n      tag_387\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16424:16460   */\n    tag_571:\n        /* \"#utility.yul\":16276:16467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16473:16643   */\n    tag_388:\n        /* \"#utility.yul\":16613:16635   */\n      0x4578636565647320746f74616c20737570706c79000000000000000000000000\n        /* \"#utility.yul\":16609:16610   */\n      0x00\n        /* \"#utility.yul\":16601:16607   */\n      dup3\n        /* \"#utility.yul\":16597:16611   */\n      add\n        /* \"#utility.yul\":16590:16636   */\n      mstore\n        /* \"#utility.yul\":16473:16643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16649:17015   */\n    tag_389:\n        /* \"#utility.yul\":16791:16794   */\n      0x00\n        /* \"#utility.yul\":16812:16879   */\n      tag_575\n        /* \"#utility.yul\":16876:16878   */\n      0x14\n        /* \"#utility.yul\":16871:16874   */\n      dup4\n        /* \"#utility.yul\":16812:16879   */\n      tag_346\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16805:16879   */\n      swap2\n      pop\n        /* \"#utility.yul\":16888:16981   */\n      tag_576\n        /* \"#utility.yul\":16977:16980   */\n      dup3\n        /* \"#utility.yul\":16888:16981   */\n      tag_388\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17006:17008   */\n      0x20\n        /* \"#utility.yul\":17001:17004   */\n      dup3\n        /* \"#utility.yul\":16997:17009   */\n      add\n        /* \"#utility.yul\":16990:17009   */\n      swap1\n      pop\n        /* \"#utility.yul\":16649:17015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17021:17440   */\n    tag_201:\n        /* \"#utility.yul\":17187:17191   */\n      0x00\n        /* \"#utility.yul\":17225:17227   */\n      0x20\n        /* \"#utility.yul\":17214:17223   */\n      dup3\n        /* \"#utility.yul\":17210:17228   */\n      add\n        /* \"#utility.yul\":17202:17228   */\n      swap1\n      pop\n        /* \"#utility.yul\":17274:17283   */\n      dup2\n        /* \"#utility.yul\":17268:17272   */\n      dup2\n        /* \"#utility.yul\":17264:17284   */\n      sub\n        /* \"#utility.yul\":17260:17261   */\n      0x00\n        /* \"#utility.yul\":17249:17258   */\n      dup4\n        /* \"#utility.yul\":17245:17262   */\n      add\n        /* \"#utility.yul\":17238:17285   */\n      mstore\n        /* \"#utility.yul\":17302:17433   */\n      tag_578\n        /* \"#utility.yul\":17428:17432   */\n      dup2\n        /* \"#utility.yul\":17302:17433   */\n      tag_389\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17294:17433   */\n      swap1\n      pop\n        /* \"#utility.yul\":17021:17440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17446:17627   */\n    tag_390:\n        /* \"#utility.yul\":17586:17619   */\n      0x45786365656473206d696e74206c696d69742070657220696e766573746f7200\n        /* \"#utility.yul\":17582:17583   */\n      0x00\n        /* \"#utility.yul\":17574:17580   */\n      dup3\n        /* \"#utility.yul\":17570:17584   */\n      add\n        /* \"#utility.yul\":17563:17620   */\n      mstore\n        /* \"#utility.yul\":17446:17627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17633:17999   */\n    tag_391:\n        /* \"#utility.yul\":17775:17778   */\n      0x00\n        /* \"#utility.yul\":17796:17863   */\n      tag_581\n        /* \"#utility.yul\":17860:17862   */\n      0x1f\n        /* \"#utility.yul\":17855:17858   */\n      dup4\n        /* \"#utility.yul\":17796:17863   */\n      tag_346\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17789:17863   */\n      swap2\n      pop\n        /* \"#utility.yul\":17872:17965   */\n      tag_582\n        /* \"#utility.yul\":17961:17964   */\n      dup3\n        /* \"#utility.yul\":17872:17965   */\n      tag_390\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17990:17992   */\n      0x20\n        /* \"#utility.yul\":17985:17988   */\n      dup3\n        /* \"#utility.yul\":17981:17993   */\n      add\n        /* \"#utility.yul\":17974:17993   */\n      swap1\n      pop\n        /* \"#utility.yul\":17633:17999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18005:18424   */\n    tag_205:\n        /* \"#utility.yul\":18171:18175   */\n      0x00\n        /* \"#utility.yul\":18209:18211   */\n      0x20\n        /* \"#utility.yul\":18198:18207   */\n      dup3\n        /* \"#utility.yul\":18194:18212   */\n      add\n        /* \"#utility.yul\":18186:18212   */\n      swap1\n      pop\n        /* \"#utility.yul\":18258:18267   */\n      dup2\n        /* \"#utility.yul\":18252:18256   */\n      dup2\n        /* \"#utility.yul\":18248:18268   */\n      sub\n        /* \"#utility.yul\":18244:18245   */\n      0x00\n        /* \"#utility.yul\":18233:18242   */\n      dup4\n        /* \"#utility.yul\":18229:18246   */\n      add\n        /* \"#utility.yul\":18222:18269   */\n      mstore\n        /* \"#utility.yul\":18286:18417   */\n      tag_584\n        /* \"#utility.yul\":18412:18416   */\n      dup2\n        /* \"#utility.yul\":18286:18417   */\n      tag_391\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18278:18417   */\n      swap1\n      pop\n        /* \"#utility.yul\":18005:18424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18430:18652   */\n    tag_392:\n        /* \"#utility.yul\":18570:18604   */\n      0x45786365656473206d696e74206c696d697420666f722074686520696e766573\n        /* \"#utility.yul\":18566:18567   */\n      0x00\n        /* \"#utility.yul\":18558:18564   */\n      dup3\n        /* \"#utility.yul\":18554:18568   */\n      add\n        /* \"#utility.yul\":18547:18605   */\n      mstore\n        /* \"#utility.yul\":18639:18644   */\n      0x746f720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18634:18636   */\n      0x20\n        /* \"#utility.yul\":18626:18632   */\n      dup3\n        /* \"#utility.yul\":18622:18637   */\n      add\n        /* \"#utility.yul\":18615:18645   */\n      mstore\n        /* \"#utility.yul\":18430:18652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18658:19024   */\n    tag_393:\n        /* \"#utility.yul\":18800:18803   */\n      0x00\n        /* \"#utility.yul\":18821:18888   */\n      tag_587\n        /* \"#utility.yul\":18885:18887   */\n      0x23\n        /* \"#utility.yul\":18880:18883   */\n      dup4\n        /* \"#utility.yul\":18821:18888   */\n      tag_346\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18814:18888   */\n      swap2\n      pop\n        /* \"#utility.yul\":18897:18990   */\n      tag_588\n        /* \"#utility.yul\":18986:18989   */\n      dup3\n        /* \"#utility.yul\":18897:18990   */\n      tag_392\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":19015:19017   */\n      0x40\n        /* \"#utility.yul\":19010:19013   */\n      dup3\n        /* \"#utility.yul\":19006:19018   */\n      add\n        /* \"#utility.yul\":18999:19018   */\n      swap1\n      pop\n        /* \"#utility.yul\":18658:19024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19030:19449   */\n    tag_209:\n        /* \"#utility.yul\":19196:19200   */\n      0x00\n        /* \"#utility.yul\":19234:19236   */\n      0x20\n        /* \"#utility.yul\":19223:19232   */\n      dup3\n        /* \"#utility.yul\":19219:19237   */\n      add\n        /* \"#utility.yul\":19211:19237   */\n      swap1\n      pop\n        /* \"#utility.yul\":19283:19292   */\n      dup2\n        /* \"#utility.yul\":19277:19281   */\n      dup2\n        /* \"#utility.yul\":19273:19293   */\n      sub\n        /* \"#utility.yul\":19269:19270   */\n      0x00\n        /* \"#utility.yul\":19258:19267   */\n      dup4\n        /* \"#utility.yul\":19254:19271   */\n      add\n        /* \"#utility.yul\":19247:19294   */\n      mstore\n        /* \"#utility.yul\":19311:19442   */\n      tag_590\n        /* \"#utility.yul\":19437:19441   */\n      dup2\n        /* \"#utility.yul\":19311:19442   */\n      tag_393\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19303:19442   */\n      swap1\n      pop\n        /* \"#utility.yul\":19030:19449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19455:19787   */\n    tag_211:\n        /* \"#utility.yul\":19576:19580   */\n      0x00\n        /* \"#utility.yul\":19614:19616   */\n      0x40\n        /* \"#utility.yul\":19603:19612   */\n      dup3\n        /* \"#utility.yul\":19599:19617   */\n      add\n        /* \"#utility.yul\":19591:19617   */\n      swap1\n      pop\n        /* \"#utility.yul\":19627:19698   */\n      tag_592\n        /* \"#utility.yul\":19695:19696   */\n      0x00\n        /* \"#utility.yul\":19684:19693   */\n      dup4\n        /* \"#utility.yul\":19680:19697   */\n      add\n        /* \"#utility.yul\":19671:19677   */\n      dup6\n        /* \"#utility.yul\":19627:19698   */\n      tag_361\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19708:19780   */\n      tag_593\n        /* \"#utility.yul\":19776:19778   */\n      0x20\n        /* \"#utility.yul\":19765:19774   */\n      dup4\n        /* \"#utility.yul\":19761:19779   */\n      add\n        /* \"#utility.yul\":19752:19758   */\n      dup5\n        /* \"#utility.yul\":19708:19780   */\n      tag_361\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19455:19787   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19793:20029   */\n    tag_394:\n        /* \"#utility.yul\":19933:19967   */\n      0x596f75206d75737420617070726f76652074686520636f6e747261637420746f\n        /* \"#utility.yul\":19929:19930   */\n      0x00\n        /* \"#utility.yul\":19921:19927   */\n      dup3\n        /* \"#utility.yul\":19917:19931   */\n      add\n        /* \"#utility.yul\":19910:19968   */\n      mstore\n        /* \"#utility.yul\":20002:20021   */\n      0x2061636365737320796f75722055534454000000000000000000000000000000\n        /* \"#utility.yul\":19997:19999   */\n      0x20\n        /* \"#utility.yul\":19989:19995   */\n      dup3\n        /* \"#utility.yul\":19985:20000   */\n      add\n        /* \"#utility.yul\":19978:20022   */\n      mstore\n        /* \"#utility.yul\":19793:20029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20035:20401   */\n    tag_395:\n        /* \"#utility.yul\":20177:20180   */\n      0x00\n        /* \"#utility.yul\":20198:20265   */\n      tag_596\n        /* \"#utility.yul\":20262:20264   */\n      0x31\n        /* \"#utility.yul\":20257:20260   */\n      dup4\n        /* \"#utility.yul\":20198:20265   */\n      tag_346\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20191:20265   */\n      swap2\n      pop\n        /* \"#utility.yul\":20274:20367   */\n      tag_597\n        /* \"#utility.yul\":20363:20366   */\n      dup3\n        /* \"#utility.yul\":20274:20367   */\n      tag_394\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20392:20394   */\n      0x40\n        /* \"#utility.yul\":20387:20390   */\n      dup3\n        /* \"#utility.yul\":20383:20395   */\n      add\n        /* \"#utility.yul\":20376:20395   */\n      swap1\n      pop\n        /* \"#utility.yul\":20035:20401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20407:20826   */\n    tag_217:\n        /* \"#utility.yul\":20573:20577   */\n      0x00\n        /* \"#utility.yul\":20611:20613   */\n      0x20\n        /* \"#utility.yul\":20600:20609   */\n      dup3\n        /* \"#utility.yul\":20596:20614   */\n      add\n        /* \"#utility.yul\":20588:20614   */\n      swap1\n      pop\n        /* \"#utility.yul\":20660:20669   */\n      dup2\n        /* \"#utility.yul\":20654:20658   */\n      dup2\n        /* \"#utility.yul\":20650:20670   */\n      sub\n        /* \"#utility.yul\":20646:20647   */\n      0x00\n        /* \"#utility.yul\":20635:20644   */\n      dup4\n        /* \"#utility.yul\":20631:20648   */\n      add\n        /* \"#utility.yul\":20624:20671   */\n      mstore\n        /* \"#utility.yul\":20688:20819   */\n      tag_599\n        /* \"#utility.yul\":20814:20818   */\n      dup2\n        /* \"#utility.yul\":20688:20819   */\n      tag_395\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":20680:20819   */\n      swap1\n      pop\n        /* \"#utility.yul\":20407:20826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20832:21274   */\n    tag_240:\n        /* \"#utility.yul\":20981:20985   */\n      0x00\n        /* \"#utility.yul\":21019:21021   */\n      0x60\n        /* \"#utility.yul\":21008:21017   */\n      dup3\n        /* \"#utility.yul\":21004:21022   */\n      add\n        /* \"#utility.yul\":20996:21022   */\n      swap1\n      pop\n        /* \"#utility.yul\":21032:21103   */\n      tag_601\n        /* \"#utility.yul\":21100:21101   */\n      0x00\n        /* \"#utility.yul\":21089:21098   */\n      dup4\n        /* \"#utility.yul\":21085:21102   */\n      add\n        /* \"#utility.yul\":21076:21082   */\n      dup7\n        /* \"#utility.yul\":21032:21103   */\n      tag_361\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":21113:21185   */\n      tag_602\n        /* \"#utility.yul\":21181:21183   */\n      0x20\n        /* \"#utility.yul\":21170:21179   */\n      dup4\n        /* \"#utility.yul\":21166:21184   */\n      add\n        /* \"#utility.yul\":21157:21163   */\n      dup6\n        /* \"#utility.yul\":21113:21185   */\n      tag_344\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":21195:21267   */\n      tag_603\n        /* \"#utility.yul\":21263:21265   */\n      0x40\n        /* \"#utility.yul\":21252:21261   */\n      dup4\n        /* \"#utility.yul\":21248:21266   */\n      add\n        /* \"#utility.yul\":21239:21245   */\n      dup5\n        /* \"#utility.yul\":21195:21267   */\n      tag_344\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20832:21274   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21280:21371   */\n    tag_396:\n        /* \"#utility.yul\":21316:21323   */\n      0x00\n        /* \"#utility.yul\":21356:21364   */\n      0xffffff\n        /* \"#utility.yul\":21349:21354   */\n      dup3\n        /* \"#utility.yul\":21345:21365   */\n      and\n        /* \"#utility.yul\":21334:21365   */\n      swap1\n      pop\n        /* \"#utility.yul\":21280:21371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21377:21492   */\n    tag_397:\n        /* \"#utility.yul\":21462:21485   */\n      tag_606\n        /* \"#utility.yul\":21479:21484   */\n      dup2\n        /* \"#utility.yul\":21462:21485   */\n      tag_396\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":21457:21460   */\n      dup3\n        /* \"#utility.yul\":21450:21486   */\n      mstore\n        /* \"#utility.yul\":21377:21492   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21498:21936   */\n    tag_251:\n        /* \"#utility.yul\":21645:21649   */\n      0x00\n        /* \"#utility.yul\":21683:21685   */\n      0x60\n        /* \"#utility.yul\":21672:21681   */\n      dup3\n        /* \"#utility.yul\":21668:21686   */\n      add\n        /* \"#utility.yul\":21660:21686   */\n      swap1\n      pop\n        /* \"#utility.yul\":21696:21767   */\n      tag_608\n        /* \"#utility.yul\":21764:21765   */\n      0x00\n        /* \"#utility.yul\":21753:21762   */\n      dup4\n        /* \"#utility.yul\":21749:21766   */\n      add\n        /* \"#utility.yul\":21740:21746   */\n      dup7\n        /* \"#utility.yul\":21696:21767   */\n      tag_361\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21777:21849   */\n      tag_609\n        /* \"#utility.yul\":21845:21847   */\n      0x20\n        /* \"#utility.yul\":21834:21843   */\n      dup4\n        /* \"#utility.yul\":21830:21848   */\n      add\n        /* \"#utility.yul\":21821:21827   */\n      dup6\n        /* \"#utility.yul\":21777:21849   */\n      tag_361\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21859:21929   */\n      tag_610\n        /* \"#utility.yul\":21925:21927   */\n      0x40\n        /* \"#utility.yul\":21914:21923   */\n      dup4\n        /* \"#utility.yul\":21910:21928   */\n      add\n        /* \"#utility.yul\":21901:21907   */\n      dup5\n        /* \"#utility.yul\":21859:21929   */\n      tag_397\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":21498:21936   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21942:22114   */\n    tag_398:\n        /* \"#utility.yul\":22082:22106   */\n      0x4661696c656420746f2066696e6420466163746f727900000000000000000000\n        /* \"#utility.yul\":22078:22079   */\n      0x00\n        /* \"#utility.yul\":22070:22076   */\n      dup3\n        /* \"#utility.yul\":22066:22080   */\n      add\n        /* \"#utility.yul\":22059:22107   */\n      mstore\n        /* \"#utility.yul\":21942:22114   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22120:22486   */\n    tag_399:\n        /* \"#utility.yul\":22262:22265   */\n      0x00\n        /* \"#utility.yul\":22283:22350   */\n      tag_613\n        /* \"#utility.yul\":22347:22349   */\n      0x16\n        /* \"#utility.yul\":22342:22345   */\n      dup4\n        /* \"#utility.yul\":22283:22350   */\n      tag_346\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":22276:22350   */\n      swap2\n      pop\n        /* \"#utility.yul\":22359:22452   */\n      tag_614\n        /* \"#utility.yul\":22448:22451   */\n      dup3\n        /* \"#utility.yul\":22359:22452   */\n      tag_398\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":22477:22479   */\n      0x20\n        /* \"#utility.yul\":22472:22475   */\n      dup3\n        /* \"#utility.yul\":22468:22480   */\n      add\n        /* \"#utility.yul\":22461:22480   */\n      swap1\n      pop\n        /* \"#utility.yul\":22120:22486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22492:22911   */\n    tag_258:\n        /* \"#utility.yul\":22658:22662   */\n      0x00\n        /* \"#utility.yul\":22696:22698   */\n      0x20\n        /* \"#utility.yul\":22685:22694   */\n      dup3\n        /* \"#utility.yul\":22681:22699   */\n      add\n        /* \"#utility.yul\":22673:22699   */\n      swap1\n      pop\n        /* \"#utility.yul\":22745:22754   */\n      dup2\n        /* \"#utility.yul\":22739:22743   */\n      dup2\n        /* \"#utility.yul\":22735:22755   */\n      sub\n        /* \"#utility.yul\":22731:22732   */\n      0x00\n        /* \"#utility.yul\":22720:22729   */\n      dup4\n        /* \"#utility.yul\":22716:22733   */\n      add\n        /* \"#utility.yul\":22709:22756   */\n      mstore\n        /* \"#utility.yul\":22773:22904   */\n      tag_616\n        /* \"#utility.yul\":22899:22903   */\n      dup2\n        /* \"#utility.yul\":22773:22904   */\n      tag_399\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":22765:22904   */\n      swap1\n      pop\n        /* \"#utility.yul\":22492:22911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22917:23007   */\n    tag_400:\n        /* \"#utility.yul\":22967:22974   */\n      0x00\n        /* \"#utility.yul\":22996:23001   */\n      dup2\n        /* \"#utility.yul\":22985:23001   */\n      swap1\n      pop\n        /* \"#utility.yul\":22917:23007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23013:23179   */\n    tag_401:\n        /* \"#utility.yul\":23075:23084   */\n      0x00\n        /* \"#utility.yul\":23108:23173   */\n      tag_619\n        /* \"#utility.yul\":23125:23172   */\n      tag_620\n        /* \"#utility.yul\":23134:23171   */\n      tag_621\n        /* \"#utility.yul\":23165:23170   */\n      dup5\n        /* \"#utility.yul\":23134:23171   */\n      tag_400\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":23125:23172   */\n      tag_377\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":23108:23173   */\n      tag_396\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":23095:23173   */\n      swap1\n      pop\n        /* \"#utility.yul\":23013:23179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23185:23340   */\n    tag_402:\n        /* \"#utility.yul\":23284:23333   */\n      tag_623\n        /* \"#utility.yul\":23327:23332   */\n      dup2\n        /* \"#utility.yul\":23284:23333   */\n      tag_401\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":23279:23282   */\n      dup3\n        /* \"#utility.yul\":23272:23334   */\n      mstore\n        /* \"#utility.yul\":23185:23340   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23346:23592   */\n    tag_262:\n        /* \"#utility.yul\":23451:23455   */\n      0x00\n        /* \"#utility.yul\":23489:23491   */\n      0x20\n        /* \"#utility.yul\":23478:23487   */\n      dup3\n        /* \"#utility.yul\":23474:23492   */\n      add\n        /* \"#utility.yul\":23466:23492   */\n      swap1\n      pop\n        /* \"#utility.yul\":23502:23585   */\n      tag_625\n        /* \"#utility.yul\":23582:23583   */\n      0x00\n        /* \"#utility.yul\":23571:23580   */\n      dup4\n        /* \"#utility.yul\":23567:23584   */\n      add\n        /* \"#utility.yul\":23558:23564   */\n      dup5\n        /* \"#utility.yul\":23502:23585   */\n      tag_402\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":23346:23592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23598:23773   */\n    tag_403:\n        /* \"#utility.yul\":23738:23765   */\n      0x4661696c656420746f20506f6f6c20696e697469616c697a6500000000000000\n        /* \"#utility.yul\":23734:23735   */\n      0x00\n        /* \"#utility.yul\":23726:23732   */\n      dup3\n        /* \"#utility.yul\":23722:23736   */\n      add\n        /* \"#utility.yul\":23715:23766   */\n      mstore\n        /* \"#utility.yul\":23598:23773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23779:24145   */\n    tag_404:\n        /* \"#utility.yul\":23921:23924   */\n      0x00\n        /* \"#utility.yul\":23942:24009   */\n      tag_628\n        /* \"#utility.yul\":24006:24008   */\n      0x19\n        /* \"#utility.yul\":24001:24004   */\n      dup4\n        /* \"#utility.yul\":23942:24009   */\n      tag_346\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":23935:24009   */\n      swap2\n      pop\n        /* \"#utility.yul\":24018:24111   */\n      tag_629\n        /* \"#utility.yul\":24107:24110   */\n      dup3\n        /* \"#utility.yul\":24018:24111   */\n      tag_403\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":24136:24138   */\n      0x20\n        /* \"#utility.yul\":24131:24134   */\n      dup3\n        /* \"#utility.yul\":24127:24139   */\n      add\n        /* \"#utility.yul\":24120:24139   */\n      swap1\n      pop\n        /* \"#utility.yul\":23779:24145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24151:24570   */\n    tag_269:\n        /* \"#utility.yul\":24317:24321   */\n      0x00\n        /* \"#utility.yul\":24355:24357   */\n      0x20\n        /* \"#utility.yul\":24344:24353   */\n      dup3\n        /* \"#utility.yul\":24340:24358   */\n      add\n        /* \"#utility.yul\":24332:24358   */\n      swap1\n      pop\n        /* \"#utility.yul\":24404:24413   */\n      dup2\n        /* \"#utility.yul\":24398:24402   */\n      dup2\n        /* \"#utility.yul\":24394:24414   */\n      sub\n        /* \"#utility.yul\":24390:24391   */\n      0x00\n        /* \"#utility.yul\":24379:24388   */\n      dup4\n        /* \"#utility.yul\":24375:24392   */\n      add\n        /* \"#utility.yul\":24368:24415   */\n      mstore\n        /* \"#utility.yul\":24432:24563   */\n      tag_631\n        /* \"#utility.yul\":24558:24562   */\n      dup2\n        /* \"#utility.yul\":24432:24563   */\n      tag_404\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":24424:24563   */\n      swap1\n      pop\n        /* \"#utility.yul\":24151:24570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24576:24684   */\n    tag_405:\n        /* \"#utility.yul\":24653:24677   */\n      tag_633\n        /* \"#utility.yul\":24671:24676   */\n      dup2\n        /* \"#utility.yul\":24653:24677   */\n      tag_354\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":24648:24651   */\n      dup3\n        /* \"#utility.yul\":24641:24678   */\n      mstore\n        /* \"#utility.yul\":24576:24684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24690:24795   */\n    tag_406:\n        /* \"#utility.yul\":24765:24788   */\n      tag_635\n        /* \"#utility.yul\":24782:24787   */\n      dup2\n        /* \"#utility.yul\":24765:24788   */\n      tag_396\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":24760:24763   */\n      dup3\n        /* \"#utility.yul\":24753:24789   */\n      mstore\n        /* \"#utility.yul\":24690:24795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24801:24891   */\n    tag_407:\n        /* \"#utility.yul\":24836:24843   */\n      0x00\n        /* \"#utility.yul\":24879:24884   */\n      dup2\n        /* \"#utility.yul\":24876:24877   */\n      0x02\n        /* \"#utility.yul\":24865:24885   */\n      signextend\n        /* \"#utility.yul\":24854:24885   */\n      swap1\n      pop\n        /* \"#utility.yul\":24801:24891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24897:24999   */\n    tag_408:\n        /* \"#utility.yul\":24970:24992   */\n      tag_638\n        /* \"#utility.yul\":24986:24991   */\n      dup2\n        /* \"#utility.yul\":24970:24992   */\n      tag_407\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":24965:24968   */\n      dup3\n        /* \"#utility.yul\":24958:24993   */\n      mstore\n        /* \"#utility.yul\":24897:24999   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25005:25113   */\n    tag_409:\n        /* \"#utility.yul\":25082:25106   */\n      tag_640\n        /* \"#utility.yul\":25100:25105   */\n      dup2\n        /* \"#utility.yul\":25082:25106   */\n      tag_343\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":25077:25080   */\n      dup3\n        /* \"#utility.yul\":25070:25107   */\n      mstore\n        /* \"#utility.yul\":25005:25113   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25183:26955   */\n    tag_410:\n        /* \"#utility.yul\":25336:25342   */\n      0x0120\n        /* \"#utility.yul\":25331:25334   */\n      dup3\n        /* \"#utility.yul\":25327:25343   */\n      add\n        /* \"#utility.yul\":25427:25431   */\n      0x00\n        /* \"#utility.yul\":25420:25425   */\n      dup3\n        /* \"#utility.yul\":25416:25432   */\n      add\n        /* \"#utility.yul\":25410:25433   */\n      mload\n        /* \"#utility.yul\":25446:25509   */\n      tag_642\n        /* \"#utility.yul\":25503:25507   */\n      0x00\n        /* \"#utility.yul\":25498:25501   */\n      dup6\n        /* \"#utility.yul\":25494:25508   */\n      add\n        /* \"#utility.yul\":25480:25492   */\n      dup3\n        /* \"#utility.yul\":25446:25509   */\n      tag_405\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":25353:25519   */\n      pop\n        /* \"#utility.yul\":25603:25607   */\n      0x20\n        /* \"#utility.yul\":25596:25601   */\n      dup3\n        /* \"#utility.yul\":25592:25608   */\n      add\n        /* \"#utility.yul\":25586:25609   */\n      mload\n        /* \"#utility.yul\":25622:25685   */\n      tag_643\n        /* \"#utility.yul\":25679:25683   */\n      0x20\n        /* \"#utility.yul\":25674:25677   */\n      dup6\n        /* \"#utility.yul\":25670:25684   */\n      add\n        /* \"#utility.yul\":25656:25668   */\n      dup3\n        /* \"#utility.yul\":25622:25685   */\n      tag_405\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":25529:25695   */\n      pop\n        /* \"#utility.yul\":25776:25780   */\n      0x40\n        /* \"#utility.yul\":25769:25774   */\n      dup3\n        /* \"#utility.yul\":25765:25781   */\n      add\n        /* \"#utility.yul\":25759:25782   */\n      mload\n        /* \"#utility.yul\":25795:25856   */\n      tag_644\n        /* \"#utility.yul\":25850:25854   */\n      0x40\n        /* \"#utility.yul\":25845:25848   */\n      dup6\n        /* \"#utility.yul\":25841:25855   */\n      add\n        /* \"#utility.yul\":25827:25839   */\n      dup3\n        /* \"#utility.yul\":25795:25856   */\n      tag_406\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":25705:25866   */\n      pop\n        /* \"#utility.yul\":25953:25957   */\n      0x60\n        /* \"#utility.yul\":25946:25951   */\n      dup3\n        /* \"#utility.yul\":25942:25958   */\n      add\n        /* \"#utility.yul\":25936:25959   */\n      mload\n        /* \"#utility.yul\":25972:26031   */\n      tag_645\n        /* \"#utility.yul\":26025:26029   */\n      0x60\n        /* \"#utility.yul\":26020:26023   */\n      dup6\n        /* \"#utility.yul\":26016:26030   */\n      add\n        /* \"#utility.yul\":26002:26014   */\n      dup3\n        /* \"#utility.yul\":25972:26031   */\n      tag_408\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":25876:26041   */\n      pop\n        /* \"#utility.yul\":26128:26132   */\n      0x80\n        /* \"#utility.yul\":26121:26126   */\n      dup3\n        /* \"#utility.yul\":26117:26133   */\n      add\n        /* \"#utility.yul\":26111:26134   */\n      mload\n        /* \"#utility.yul\":26147:26206   */\n      tag_646\n        /* \"#utility.yul\":26200:26204   */\n      0x80\n        /* \"#utility.yul\":26195:26198   */\n      dup6\n        /* \"#utility.yul\":26191:26205   */\n      add\n        /* \"#utility.yul\":26177:26189   */\n      dup3\n        /* \"#utility.yul\":26147:26206   */\n      tag_408\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":26051:26216   */\n      pop\n        /* \"#utility.yul\":26308:26312   */\n      0xa0\n        /* \"#utility.yul\":26301:26306   */\n      dup3\n        /* \"#utility.yul\":26297:26313   */\n      add\n        /* \"#utility.yul\":26291:26314   */\n      mload\n        /* \"#utility.yul\":26327:26390   */\n      tag_647\n        /* \"#utility.yul\":26384:26388   */\n      0xa0\n        /* \"#utility.yul\":26379:26382   */\n      dup6\n        /* \"#utility.yul\":26375:26389   */\n      add\n        /* \"#utility.yul\":26361:26373   */\n      dup3\n        /* \"#utility.yul\":26327:26390   */\n      tag_409\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":26226:26400   */\n      pop\n        /* \"#utility.yul\":26492:26496   */\n      0xc0\n        /* \"#utility.yul\":26485:26490   */\n      dup3\n        /* \"#utility.yul\":26481:26497   */\n      add\n        /* \"#utility.yul\":26475:26498   */\n      mload\n        /* \"#utility.yul\":26511:26574   */\n      tag_648\n        /* \"#utility.yul\":26568:26572   */\n      0xc0\n        /* \"#utility.yul\":26563:26566   */\n      dup6\n        /* \"#utility.yul\":26559:26573   */\n      add\n        /* \"#utility.yul\":26545:26557   */\n      dup3\n        /* \"#utility.yul\":26511:26574   */\n      tag_409\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":26410:26584   */\n      pop\n        /* \"#utility.yul\":26672:26676   */\n      0xe0\n        /* \"#utility.yul\":26665:26670   */\n      dup3\n        /* \"#utility.yul\":26661:26677   */\n      add\n        /* \"#utility.yul\":26655:26678   */\n      mload\n        /* \"#utility.yul\":26691:26754   */\n      tag_649\n        /* \"#utility.yul\":26748:26752   */\n      0xe0\n        /* \"#utility.yul\":26743:26746   */\n      dup6\n        /* \"#utility.yul\":26739:26753   */\n      add\n        /* \"#utility.yul\":26725:26737   */\n      dup3\n        /* \"#utility.yul\":26691:26754   */\n      tag_409\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":26594:26764   */\n      pop\n        /* \"#utility.yul\":26852:26858   */\n      0x0100\n        /* \"#utility.yul\":26845:26850   */\n      dup3\n        /* \"#utility.yul\":26841:26859   */\n      add\n        /* \"#utility.yul\":26835:26860   */\n      mload\n        /* \"#utility.yul\":26873:26938   */\n      tag_650\n        /* \"#utility.yul\":26930:26936   */\n      0x0100\n        /* \"#utility.yul\":26925:26928   */\n      dup6\n        /* \"#utility.yul\":26921:26937   */\n      add\n        /* \"#utility.yul\":26907:26919   */\n      dup3\n        /* \"#utility.yul\":26873:26938   */\n      tag_409\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":26774:26948   */\n      pop\n        /* \"#utility.yul\":25305:26955   */\n      pop\n        /* \"#utility.yul\":25183:26955   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26961:27296   */\n    tag_273:\n        /* \"#utility.yul\":27110:27114   */\n      0x00\n        /* \"#utility.yul\":27148:27151   */\n      0x0120\n        /* \"#utility.yul\":27137:27146   */\n      dup3\n        /* \"#utility.yul\":27133:27152   */\n      add\n        /* \"#utility.yul\":27125:27152   */\n      swap1\n      pop\n        /* \"#utility.yul\":27162:27289   */\n      tag_652\n        /* \"#utility.yul\":27286:27287   */\n      0x00\n        /* \"#utility.yul\":27275:27284   */\n      dup4\n        /* \"#utility.yul\":27271:27288   */\n      add\n        /* \"#utility.yul\":27262:27268   */\n      dup5\n        /* \"#utility.yul\":27162:27289   */\n      tag_410\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26961:27296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27302:27744   */\n    tag_290:\n        /* \"#utility.yul\":27451:27455   */\n      0x00\n        /* \"#utility.yul\":27489:27491   */\n      0x60\n        /* \"#utility.yul\":27478:27487   */\n      dup3\n        /* \"#utility.yul\":27474:27492   */\n      add\n        /* \"#utility.yul\":27466:27492   */\n      swap1\n      pop\n        /* \"#utility.yul\":27502:27573   */\n      tag_654\n        /* \"#utility.yul\":27570:27571   */\n      0x00\n        /* \"#utility.yul\":27559:27568   */\n      dup4\n        /* \"#utility.yul\":27555:27572   */\n      add\n        /* \"#utility.yul\":27546:27552   */\n      dup7\n        /* \"#utility.yul\":27502:27573   */\n      tag_361\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":27583:27655   */\n      tag_655\n        /* \"#utility.yul\":27651:27653   */\n      0x20\n        /* \"#utility.yul\":27640:27649   */\n      dup4\n        /* \"#utility.yul\":27636:27654   */\n      add\n        /* \"#utility.yul\":27627:27633   */\n      dup6\n        /* \"#utility.yul\":27583:27655   */\n      tag_361\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":27665:27737   */\n      tag_656\n        /* \"#utility.yul\":27733:27735   */\n      0x40\n        /* \"#utility.yul\":27722:27731   */\n      dup4\n        /* \"#utility.yul\":27718:27736   */\n      add\n        /* \"#utility.yul\":27709:27715   */\n      dup5\n        /* \"#utility.yul\":27665:27737   */\n      tag_344\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":27302:27744   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c2358b6fd3cf22d51e92175cc2637cd2fe48a6795ac106f28445a30051600b4a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1655": {
									"entryPoint": null,
									"id": 1655,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 726,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 531,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 864,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8117:10",
										"nodeType": "YulBlock",
										"src": "0:8117:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "939:413:10",
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:10",
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nativeSrc": "987:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nativeSrc": "987:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nativeSrc": "956:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:10",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nativeSrc": "952:32:10",
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nativeSrc": "949:119:10",
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nativeSrc": "1078:128:10",
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nativeSrc": "1093:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nativeSrc": "1164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nativeSrc": "1132:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:10",
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nativeSrc": "1231:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nativeSrc": "1303:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nativeSrc": "1271:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:10",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:10",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:10",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:10",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											},
											{
												"body": {
													"nativeSrc": "1417:40:10",
													"nodeType": "YulBlock",
													"src": "1417:40:10",
													"statements": [
														{
															"nativeSrc": "1428:22:10",
															"nodeType": "YulAssignment",
															"src": "1428:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:10"
																},
																"nativeSrc": "1438:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:10",
														"nodeType": "YulTypedName",
														"src": "1400:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:10",
														"nodeType": "YulTypedName",
														"src": "1410:6:10",
														"type": ""
													}
												],
												"src": "1358:99:10"
											},
											{
												"body": {
													"nativeSrc": "1491:152:10",
													"nodeType": "YulBlock",
													"src": "1491:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:10"
																},
																"nativeSrc": "1501:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:10"
															},
															"nativeSrc": "1501:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:10"
																},
																"nativeSrc": "1598:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:10"
															},
															"nativeSrc": "1598:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:10"
																},
																"nativeSrc": "1622:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:10"
															},
															"nativeSrc": "1622:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:10"
											},
											{
												"body": {
													"nativeSrc": "1677:152:10",
													"nodeType": "YulBlock",
													"src": "1677:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:10"
																},
																"nativeSrc": "1687:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:10"
															},
															"nativeSrc": "1687:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:10"
																},
																"nativeSrc": "1784:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:10"
															},
															"nativeSrc": "1784:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																},
																"nativeSrc": "1808:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:10"
															},
															"nativeSrc": "1808:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:10"
											},
											{
												"body": {
													"nativeSrc": "1886:269:10",
													"nodeType": "YulBlock",
													"src": "1886:269:10",
													"statements": [
														{
															"nativeSrc": "1896:22:10",
															"nodeType": "YulAssignment",
															"src": "1896:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:10"
																},
																"nativeSrc": "1906:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:10"
																}
															]
														},
														{
															"nativeSrc": "1927:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:10"
																},
																"nativeSrc": "1953:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:10",
																"nodeType": "YulBlock",
																"src": "2004:51:10",
																"statements": [
																	{
																		"nativeSrc": "2018:27:10",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:10"
																			},
																			"nativeSrc": "2028:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:10"
																},
																"nativeSrc": "1977:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:10"
															},
															"nativeSrc": "1974:81:10",
															"nodeType": "YulIf",
															"src": "1974:81:10"
														},
														{
															"body": {
																"nativeSrc": "2107:42:10",
																"nodeType": "YulBlock",
																"src": "2107:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:10"
																			},
																			"nativeSrc": "2121:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:10"
																		},
																		"nativeSrc": "2121:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:10"
																		},
																		"nativeSrc": "2091:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:10"
																},
																"nativeSrc": "2068:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:10"
															},
															"nativeSrc": "2065:84:10",
															"nodeType": "YulIf",
															"src": "2065:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:10",
														"nodeType": "YulTypedName",
														"src": "1870:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:10",
														"nodeType": "YulTypedName",
														"src": "1879:6:10",
														"type": ""
													}
												],
												"src": "1835:320:10"
											},
											{
												"body": {
													"nativeSrc": "2215:87:10",
													"nodeType": "YulBlock",
													"src": "2215:87:10",
													"statements": [
														{
															"nativeSrc": "2225:11:10",
															"nodeType": "YulAssignment",
															"src": "2225:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:10",
																"nodeType": "YulIdentifier",
																"src": "2233:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:10"
																},
																"nativeSrc": "2246:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:10"
															},
															"nativeSrc": "2246:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:10"
														},
														{
															"nativeSrc": "2269:26:10",
															"nodeType": "YulAssignment",
															"src": "2269:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:10"
																},
																"nativeSrc": "2277:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:10",
														"nodeType": "YulTypedName",
														"src": "2202:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:10",
														"nodeType": "YulTypedName",
														"src": "2210:4:10",
														"type": ""
													}
												],
												"src": "2161:141:10"
											},
											{
												"body": {
													"nativeSrc": "2352:49:10",
													"nodeType": "YulBlock",
													"src": "2352:49:10",
													"statements": [
														{
															"nativeSrc": "2362:33:10",
															"nodeType": "YulAssignment",
															"src": "2362:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:10"
																		},
																		"nativeSrc": "2376:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:10"
																},
																"nativeSrc": "2372:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:10",
														"nodeType": "YulTypedName",
														"src": "2335:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2308:93:10"
											},
											{
												"body": {
													"nativeSrc": "2460:54:10",
													"nodeType": "YulBlock",
													"src": "2460:54:10",
													"statements": [
														{
															"nativeSrc": "2470:37:10",
															"nodeType": "YulAssignment",
															"src": "2470:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:10"
																},
																"nativeSrc": "2491:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:10",
														"nodeType": "YulTypedName",
														"src": "2435:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:10",
														"nodeType": "YulTypedName",
														"src": "2441:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:10",
														"nodeType": "YulTypedName",
														"src": "2451:8:10",
														"type": ""
													}
												],
												"src": "2407:107:10"
											},
											{
												"body": {
													"nativeSrc": "2596:317:10",
													"nodeType": "YulBlock",
													"src": "2596:317:10",
													"statements": [
														{
															"nativeSrc": "2606:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:10"
																},
																"nativeSrc": "2623:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:10",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:10",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:10"
																},
																"nativeSrc": "2662:97:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:10",
															"nodeType": "YulAssignment",
															"src": "2768:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:10"
																},
																"nativeSrc": "2780:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:10"
																}
															]
														},
														{
															"nativeSrc": "2828:30:10",
															"nodeType": "YulAssignment",
															"src": "2828:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:10"
																		},
																		"nativeSrc": "2848:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:10"
																},
																"nativeSrc": "2837:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:10"
																}
															]
														},
														{
															"nativeSrc": "2867:40:10",
															"nodeType": "YulAssignment",
															"src": "2867:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:10"
																		},
																		"nativeSrc": "2887:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:10"
																},
																"nativeSrc": "2877:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:10",
														"nodeType": "YulTypedName",
														"src": "2557:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:10",
														"nodeType": "YulTypedName",
														"src": "2564:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:10",
														"nodeType": "YulTypedName",
														"src": "2576:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:10",
														"nodeType": "YulTypedName",
														"src": "2589:6:10",
														"type": ""
													}
												],
												"src": "2520:393:10"
											},
											{
												"body": {
													"nativeSrc": "2964:32:10",
													"nodeType": "YulBlock",
													"src": "2964:32:10",
													"statements": [
														{
															"nativeSrc": "2974:16:10",
															"nodeType": "YulAssignment",
															"src": "2974:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:10",
																"nodeType": "YulIdentifier",
																"src": "2985:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:10",
														"nodeType": "YulTypedName",
														"src": "2946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:10",
														"nodeType": "YulTypedName",
														"src": "2956:7:10",
														"type": ""
													}
												],
												"src": "2919:77:10"
											},
											{
												"body": {
													"nativeSrc": "3034:28:10",
													"nodeType": "YulBlock",
													"src": "3034:28:10",
													"statements": [
														{
															"nativeSrc": "3044:12:10",
															"nodeType": "YulAssignment",
															"src": "3044:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:10",
																"nodeType": "YulIdentifier",
																"src": "3051:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:10",
														"nodeType": "YulTypedName",
														"src": "3020:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:10",
														"nodeType": "YulTypedName",
														"src": "3030:3:10",
														"type": ""
													}
												],
												"src": "3002:60:10"
											},
											{
												"body": {
													"nativeSrc": "3128:82:10",
													"nodeType": "YulBlock",
													"src": "3128:82:10",
													"statements": [
														{
															"nativeSrc": "3138:66:10",
															"nodeType": "YulAssignment",
															"src": "3138:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:10"
																				},
																				"nativeSrc": "3178:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:10"
																		},
																		"nativeSrc": "3169:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:10"
																},
																"nativeSrc": "3151:53:10",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:10",
														"nodeType": "YulTypedName",
														"src": "3108:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:10",
														"nodeType": "YulTypedName",
														"src": "3118:9:10",
														"type": ""
													}
												],
												"src": "3068:142:10"
											},
											{
												"body": {
													"nativeSrc": "3263:28:10",
													"nodeType": "YulBlock",
													"src": "3263:28:10",
													"statements": [
														{
															"nativeSrc": "3273:12:10",
															"nodeType": "YulAssignment",
															"src": "3273:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:10",
																"nodeType": "YulIdentifier",
																"src": "3280:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:10",
														"nodeType": "YulTypedName",
														"src": "3249:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:10",
														"nodeType": "YulTypedName",
														"src": "3259:3:10",
														"type": ""
													}
												],
												"src": "3216:75:10"
											},
											{
												"body": {
													"nativeSrc": "3373:193:10",
													"nodeType": "YulBlock",
													"src": "3373:193:10",
													"statements": [
														{
															"nativeSrc": "3383:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:10"
																},
																"nativeSrc": "3407:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:10",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:10"
																				},
																				"nativeSrc": "3496:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:10"
																				},
																				"nativeSrc": "3517:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:10"
																		},
																		"nativeSrc": "3468:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:10"
																},
																"nativeSrc": "3455:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:10"
															},
															"nativeSrc": "3455:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:10",
														"nodeType": "YulTypedName",
														"src": "3350:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:10",
														"nodeType": "YulTypedName",
														"src": "3356:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:10",
														"nodeType": "YulTypedName",
														"src": "3364:7:10",
														"type": ""
													}
												],
												"src": "3297:269:10"
											},
											{
												"body": {
													"nativeSrc": "3621:24:10",
													"nodeType": "YulBlock",
													"src": "3621:24:10",
													"statements": [
														{
															"nativeSrc": "3631:8:10",
															"nodeType": "YulAssignment",
															"src": "3631:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:10",
																"nodeType": "YulLiteral",
																"src": "3638:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:10",
														"nodeType": "YulTypedName",
														"src": "3617:3:10",
														"type": ""
													}
												],
												"src": "3572:73:10"
											},
											{
												"body": {
													"nativeSrc": "3704:136:10",
													"nodeType": "YulBlock",
													"src": "3704:136:10",
													"statements": [
														{
															"nativeSrc": "3714:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:10"
																},
																"nativeSrc": "3728:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:10"
																},
																"nativeSrc": "3769:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:10"
															},
															"nativeSrc": "3769:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:10",
														"nodeType": "YulTypedName",
														"src": "3690:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:10",
														"nodeType": "YulTypedName",
														"src": "3696:6:10",
														"type": ""
													}
												],
												"src": "3651:189:10"
											},
											{
												"body": {
													"nativeSrc": "3896:136:10",
													"nodeType": "YulBlock",
													"src": "3896:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:10",
																"nodeType": "YulBlock",
																"src": "3963:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:10"
																			},
																			"nativeSrc": "3977:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:10"
																		},
																		"nativeSrc": "3977:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:10"
																},
																"nativeSrc": "3913:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:10"
															},
															"nativeSrc": "3906:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:10",
																"nodeType": "YulBlock",
																"src": "3928:26:10",
																"statements": [
																	{
																		"nativeSrc": "3930:22:10",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:10"
																			},
																			"nativeSrc": "3939:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:10",
																"nodeType": "YulBlock",
																"src": "3910:2:10",
																"statements": []
															},
															"src": "3906:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:10",
														"nodeType": "YulTypedName",
														"src": "3884:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:10",
														"nodeType": "YulTypedName",
														"src": "3891:3:10",
														"type": ""
													}
												],
												"src": "3846:186:10"
											},
											{
												"body": {
													"nativeSrc": "4117:464:10",
													"nodeType": "YulBlock",
													"src": "4117:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:10",
																"nodeType": "YulBlock",
																"src": "4143:431:10",
																"statements": [
																	{
																		"nativeSrc": "4157:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:10"
																			},
																			"nativeSrc": "4173:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:10",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:10"
																					},
																					"nativeSrc": "4257:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:10"
																			},
																			"nativeSrc": "4243:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:10",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:10",
																			"nodeType": "YulBlock",
																			"src": "4444:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:10"
																			},
																			"nativeSrc": "4425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:10"
																		},
																		"nativeSrc": "4422:49:10",
																		"nodeType": "YulIf",
																		"src": "4422:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:10"
																							},
																							"nativeSrc": "4540:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:10"
																					},
																					"nativeSrc": "4526:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:10"
																			},
																			"nativeSrc": "4484:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:10"
																		},
																		"nativeSrc": "4484:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:10"
																},
																"nativeSrc": "4131:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:10"
															},
															"nativeSrc": "4128:446:10",
															"nodeType": "YulIf",
															"src": "4128:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:10",
														"nodeType": "YulTypedName",
														"src": "4093:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:10",
														"nodeType": "YulTypedName",
														"src": "4100:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:10",
														"nodeType": "YulTypedName",
														"src": "4105:10:10",
														"type": ""
													}
												],
												"src": "4038:543:10"
											},
											{
												"body": {
													"nativeSrc": "4650:54:10",
													"nodeType": "YulBlock",
													"src": "4650:54:10",
													"statements": [
														{
															"nativeSrc": "4660:37:10",
															"nodeType": "YulAssignment",
															"src": "4660:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:10"
																},
																"nativeSrc": "4681:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:10",
														"nodeType": "YulTypedName",
														"src": "4625:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:10",
														"nodeType": "YulTypedName",
														"src": "4631:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:10",
														"nodeType": "YulTypedName",
														"src": "4641:8:10",
														"type": ""
													}
												],
												"src": "4587:117:10"
											},
											{
												"body": {
													"nativeSrc": "4761:118:10",
													"nodeType": "YulBlock",
													"src": "4761:118:10",
													"statements": [
														{
															"nativeSrc": "4771:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:10"
																				},
																				"nativeSrc": "4816:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:10"
																				},
																				"nativeSrc": "4831:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:10"
																		},
																		"nativeSrc": "4787:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:10"
																},
																"nativeSrc": "4783:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:10",
															"nodeType": "YulAssignment",
															"src": "4848:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:10"
																},
																"nativeSrc": "4858:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:10",
														"nodeType": "YulTypedName",
														"src": "4738:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:10",
														"nodeType": "YulTypedName",
														"src": "4744:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:10",
														"nodeType": "YulTypedName",
														"src": "4754:6:10",
														"type": ""
													}
												],
												"src": "4710:169:10"
											},
											{
												"body": {
													"nativeSrc": "4965:214:10",
													"nodeType": "YulBlock",
													"src": "4965:214:10",
													"statements": [
														{
															"nativeSrc": "5098:37:10",
															"nodeType": "YulAssignment",
															"src": "5098:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:10"
																},
																"nativeSrc": "5106:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:10"
																}
															]
														},
														{
															"nativeSrc": "5144:29:10",
															"nodeType": "YulAssignment",
															"src": "5144:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:10"
																		},
																		"nativeSrc": "5161:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:10"
																},
																"nativeSrc": "5152:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:10",
														"nodeType": "YulTypedName",
														"src": "4946:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:10",
														"nodeType": "YulTypedName",
														"src": "4952:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:10",
														"nodeType": "YulTypedName",
														"src": "4960:4:10",
														"type": ""
													}
												],
												"src": "4884:295:10"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:10",
													"nodeType": "YulBlock",
													"src": "5276:1303:10",
													"statements": [
														{
															"nativeSrc": "5287:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:10"
																},
																"nativeSrc": "5301:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:10",
																"nodeType": "YulBlock",
																"src": "5423:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:10"
																			},
																			"nativeSrc": "5425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:10"
																		},
																		"nativeSrc": "5425:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:10"
																},
																"nativeSrc": "5392:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:10"
															},
															"nativeSrc": "5389:56:10",
															"nodeType": "YulIf",
															"src": "5389:56:10"
														},
														{
															"nativeSrc": "5455:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:10"
																		},
																		"nativeSrc": "5495:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:10"
																},
																"nativeSrc": "5469:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:10"
																},
																"nativeSrc": "5554:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:10"
															},
															"nativeSrc": "5554:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:10"
														},
														{
															"nativeSrc": "5631:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:10",
																"nodeType": "YulLiteral",
																"src": "5648:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:10",
															"nodeType": "YulAssignment",
															"src": "5659:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:10",
																"nodeType": "YulLiteral",
																"src": "5672:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:10",
																		"nodeType": "YulBlock",
																		"src": "5723:611:10",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:10",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:10"
																							},
																							"nativeSrc": "5764:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:10"
																					},
																					"nativeSrc": "5752:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:10",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:10"
																					},
																					"nativeSrc": "5802:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:10",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:10",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:10",
																					"nodeType": "YulBlock",
																					"src": "5920:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:10"
																												},
																												"nativeSrc": "5959:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:10"
																										},
																										"nativeSrc": "5953:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:10"
																								},
																								"nativeSrc": "5938:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:10"
																							},
																							"nativeSrc": "5938:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:10"
																						},
																						{
																							"nativeSrc": "5997:24:10",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:10",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:10"
																								},
																								"nativeSrc": "6007:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:10",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:10",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:10"
																								},
																								"nativeSrc": "6051:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:10"
																					},
																					"nativeSrc": "5883:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:10"
																				},
																				"nativeSrc": "5875:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:10",
																					"nodeType": "YulBlock",
																					"src": "5898:21:10",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:10",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:10",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:10"
																								},
																								"nativeSrc": "5905:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:10",
																					"nodeType": "YulBlock",
																					"src": "5879:3:10",
																					"statements": []
																				},
																				"src": "5875:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:10",
																					"nodeType": "YulBlock",
																					"src": "6119:156:10",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:10"
																										},
																										"nativeSrc": "6160:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:10"
																								},
																								"nativeSrc": "6154:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:10",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:10",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:10"
																												},
																												"nativeSrc": "6242:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:10"
																										},
																										"nativeSrc": "6212:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:10"
																								},
																								"nativeSrc": "6197:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:10"
																							},
																							"nativeSrc": "6197:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:10"
																					},
																					"nativeSrc": "6099:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:10"
																				},
																				"nativeSrc": "6096:179:10",
																				"nodeType": "YulIf",
																				"src": "6096:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:10"
																									},
																									"nativeSrc": "6305:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:10"
																							},
																							"nativeSrc": "6301:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:10"
																					},
																					"nativeSrc": "6288:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:10"
																				},
																				"nativeSrc": "6288:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:10"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:10",
																	"nodeType": "YulCase",
																	"src": "5716:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:10",
																		"nodeType": "YulBlock",
																		"src": "6351:222:10",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:10",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:10",
																					"nodeType": "YulBlock",
																					"src": "6402:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:10"
																										},
																										"nativeSrc": "6435:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:10"
																								},
																								"nativeSrc": "6429:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:10"
																				},
																				"nativeSrc": "6392:77:10",
																				"nodeType": "YulIf",
																				"src": "6392:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:10"
																							},
																							"nativeSrc": "6495:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:10"
																					},
																					"nativeSrc": "6482:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:10"
																				},
																				"nativeSrc": "6482:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:10",
																	"nodeType": "YulCase",
																	"src": "6343:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:10"
																},
																"nativeSrc": "5693:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:10"
															},
															"nativeSrc": "5686:887:10",
															"nodeType": "YulSwitch",
															"src": "5686:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:10",
														"nodeType": "YulTypedName",
														"src": "5265:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:10",
														"nodeType": "YulTypedName",
														"src": "5271:3:10",
														"type": ""
													}
												],
												"src": "5184:1395:10"
											},
											{
												"body": {
													"nativeSrc": "6650:53:10",
													"nodeType": "YulBlock",
													"src": "6650:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:10"
																		},
																		"nativeSrc": "6672:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:10"
																},
																"nativeSrc": "6660:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:10"
															},
															"nativeSrc": "6660:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:10",
														"nodeType": "YulTypedName",
														"src": "6638:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:10",
														"nodeType": "YulTypedName",
														"src": "6645:3:10",
														"type": ""
													}
												],
												"src": "6585:118:10"
											},
											{
												"body": {
													"nativeSrc": "6807:124:10",
													"nodeType": "YulBlock",
													"src": "6807:124:10",
													"statements": [
														{
															"nativeSrc": "6817:26:10",
															"nodeType": "YulAssignment",
															"src": "6817:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:10"
																},
																"nativeSrc": "6825:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:10"
																		},
																		"nativeSrc": "6906:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:10"
																},
																"nativeSrc": "6853:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:10"
															},
															"nativeSrc": "6853:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:10",
														"nodeType": "YulTypedName",
														"src": "6779:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:10",
														"nodeType": "YulTypedName",
														"src": "6791:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:10",
														"nodeType": "YulTypedName",
														"src": "6802:4:10",
														"type": ""
													}
												],
												"src": "6709:222:10"
											},
											{
												"body": {
													"nativeSrc": "6965:152:10",
													"nodeType": "YulBlock",
													"src": "6965:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6982:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6985:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6985:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:10"
																},
																"nativeSrc": "6975:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6975:88:10"
															},
															"nativeSrc": "6975:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6975:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7079:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7079:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7082:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7082:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7072:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:10"
																},
																"nativeSrc": "7072:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:10"
															},
															"nativeSrc": "7072:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7072:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7103:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7106:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7096:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:10"
																},
																"nativeSrc": "7096:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7096:15:10"
															},
															"nativeSrc": "7096:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7096:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6937:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:180:10"
											},
											{
												"body": {
													"nativeSrc": "7167:147:10",
													"nodeType": "YulBlock",
													"src": "7167:147:10",
													"statements": [
														{
															"nativeSrc": "7177:25:10",
															"nodeType": "YulAssignment",
															"src": "7177:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7200:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7200:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7182:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7182:17:10"
																},
																"nativeSrc": "7182:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7182:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7177:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7177:1:10"
																}
															]
														},
														{
															"nativeSrc": "7211:25:10",
															"nodeType": "YulAssignment",
															"src": "7211:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7234:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7234:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7216:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7216:17:10"
																},
																"nativeSrc": "7216:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7216:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7211:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7211:1:10"
																}
															]
														},
														{
															"nativeSrc": "7245:16:10",
															"nodeType": "YulAssignment",
															"src": "7245:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7256:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7256:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7259:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7259:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7252:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7252:3:10"
																},
																"nativeSrc": "7252:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7252:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7245:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7285:22:10",
																"nodeType": "YulBlock",
																"src": "7285:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7287:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7287:16:10"
																			},
																			"nativeSrc": "7287:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7287:18:10"
																		},
																		"nativeSrc": "7287:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7287:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7277:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7280:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7280:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7274:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7274:2:10"
																},
																"nativeSrc": "7274:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7274:10:10"
															},
															"nativeSrc": "7271:36:10",
															"nodeType": "YulIf",
															"src": "7271:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7123:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7154:1:10",
														"nodeType": "YulTypedName",
														"src": "7154:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7157:1:10",
														"nodeType": "YulTypedName",
														"src": "7157:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7163:3:10",
														"nodeType": "YulTypedName",
														"src": "7163:3:10",
														"type": ""
													}
												],
												"src": "7123:191:10"
											},
											{
												"body": {
													"nativeSrc": "7385:53:10",
													"nodeType": "YulBlock",
													"src": "7385:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7402:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7402:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7425:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7425:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7407:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7407:17:10"
																		},
																		"nativeSrc": "7407:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:10"
																},
																"nativeSrc": "7395:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7395:37:10"
															},
															"nativeSrc": "7395:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7395:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7320:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7373:5:10",
														"nodeType": "YulTypedName",
														"src": "7373:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7380:3:10",
														"nodeType": "YulTypedName",
														"src": "7380:3:10",
														"type": ""
													}
												],
												"src": "7320:118:10"
											},
											{
												"body": {
													"nativeSrc": "7598:288:10",
													"nodeType": "YulBlock",
													"src": "7598:288:10",
													"statements": [
														{
															"nativeSrc": "7608:26:10",
															"nodeType": "YulAssignment",
															"src": "7608:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7620:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7631:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7616:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:10"
																},
																"nativeSrc": "7616:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7616:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7608:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7688:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7701:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7712:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7712:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7697:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:10"
																		},
																		"nativeSrc": "7697:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7697:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7644:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7644:43:10"
																},
																"nativeSrc": "7644:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7644:71:10"
															},
															"nativeSrc": "7644:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7644:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7769:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7793:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:10"
																		},
																		"nativeSrc": "7778:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7725:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7725:43:10"
																},
																"nativeSrc": "7725:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7725:72:10"
															},
															"nativeSrc": "7725:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7725:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7851:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7851:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7864:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7864:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7875:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7875:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7860:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7860:3:10"
																		},
																		"nativeSrc": "7860:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7860:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7807:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7807:43:10"
																},
																"nativeSrc": "7807:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7807:72:10"
															},
															"nativeSrc": "7807:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7807:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7444:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7554:9:10",
														"nodeType": "YulTypedName",
														"src": "7554:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7566:6:10",
														"nodeType": "YulTypedName",
														"src": "7566:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7574:6:10",
														"nodeType": "YulTypedName",
														"src": "7574:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7582:6:10",
														"nodeType": "YulTypedName",
														"src": "7582:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7593:4:10",
														"nodeType": "YulTypedName",
														"src": "7593:4:10",
														"type": ""
													}
												],
												"src": "7444:442:10"
											},
											{
												"body": {
													"nativeSrc": "7990:124:10",
													"nodeType": "YulBlock",
													"src": "7990:124:10",
													"statements": [
														{
															"nativeSrc": "8000:26:10",
															"nodeType": "YulAssignment",
															"src": "8000:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8012:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8012:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8023:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8023:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8008:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8008:3:10"
																},
																"nativeSrc": "8008:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8008:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8000:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8000:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8080:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8080:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8093:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8093:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8104:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8104:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8089:3:10"
																		},
																		"nativeSrc": "8089:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8089:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8036:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8036:43:10"
																},
																"nativeSrc": "8036:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8036:71:10"
															},
															"nativeSrc": "8036:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8036:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7892:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7962:9:10",
														"nodeType": "YulTypedName",
														"src": "7962:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7974:6:10",
														"nodeType": "YulTypedName",
														"src": "7974:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7985:4:10",
														"nodeType": "YulTypedName",
														"src": "7985:4:10",
														"type": ""
													}
												],
												"src": "7892:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162003771380380620037718339818101604052810190620000369190620005e9565b816040518060400160405280600981526020017f4e5a4620546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e5a4600000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000892565b508060049081620000c6919062000892565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000133919062000987565b60405180910390fd5b6200014d816200021360201b60201c565b508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1669d3c21bcecceda1000000620002d660201b60201c565b505062000a70565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000349575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000340919062000987565b60405180910390fd5b6200035c5f83836200036060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003b4578060025f828254620003a79190620009cf565b9250508190555062000485565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000440578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004379392919062000a1a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004ce578060025f828254039250508190555062000518565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000577919062000a55565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005b38262000588565b9050919050565b620005c581620005a7565b8114620005d0575f80fd5b50565b5f81519050620005e381620005ba565b92915050565b5f806040838503121562000602576200060162000584565b5b5f6200061185828601620005d3565b92505060206200062485828601620005d3565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620006aa57607f821691505b602082108103620006c057620006bf62000665565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006e7565b620007308683620006e7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200077a620007746200076e8462000748565b62000751565b62000748565b9050919050565b5f819050919050565b62000795836200075a565b620007ad620007a48262000781565b848454620006f3565b825550505050565b5f90565b620007c3620007b5565b620007d08184846200078a565b505050565b5b81811015620007f757620007eb5f82620007b9565b600181019050620007d6565b5050565b601f82111562000846576200081081620006c6565b6200081b84620006d8565b810160208510156200082b578190505b620008436200083a85620006d8565b830182620007d5565b50505b505050565b5f82821c905092915050565b5f620008685f19846008026200084b565b1980831691505092915050565b5f62000882838362000857565b9150826002028217905092915050565b6200089d826200062e565b67ffffffffffffffff811115620008b957620008b862000638565b5b620008c5825462000692565b620008d2828285620007fb565b5f60209050601f83116001811462000908575f8415620008f3578287015190505b620008ff858262000875565b8655506200096e565b601f1984166200091886620006c6565b5f5b8281101562000941578489015182556001820191506020850194506020810190506200091a565b868310156200096157848901516200095d601f89168262000857565b8355505b6001600288020188555050505b505050505050565b6200098181620005a7565b82525050565b5f6020820190506200099c5f83018462000976565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620009db8262000748565b9150620009e88362000748565b925082820190508082111562000a035762000a02620009a2565b5b92915050565b62000a148162000748565b82525050565b5f60608201905062000a2f5f83018662000976565b62000a3e602083018562000a09565b62000a4d604083018462000a09565b949350505050565b5f60208201905062000a6a5f83018462000a09565b92915050565b612cf38062000a7e5f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063a9059cbb1161007a578063a9059cbb1461036d578063d1b8df221461039d578063dd62ed3e146103b9578063e5a7eb75146103e9578063f2fde38b14610405578063ff920c74146104215761014b565b8063715018a6146102bb5780637241dfa0146102c5578063771282f6146102f55780638da5cb5b14610313578063902d55a51461033157806395d89b411461034f5761014b565b806323b872dd1161011357806323b872dd146101f7578063313ce56714610227578063329927a7146102455780633ccfd60b146102635780634fe724391461026d57806370a082311461028b5761014b565b8063039600d21461014f57806306fdde031461016d578063095ea7b31461018b57806318160ddd146101bb578063185870f9146101d9575b5f80fd5b61015761043f565b6040516101649190611fd0565b60405180910390f35b61017561044d565b6040516101829190612073565b60405180910390f35b6101a560048036038101906101a0919061211b565b6104dd565b6040516101b29190612173565b60405180910390f35b6101c36104ff565b6040516101d09190611fd0565b60405180910390f35b6101e1610508565b6040516101ee919061219b565b60405180910390f35b610211600480360381019061020c91906121b4565b61052d565b60405161021e9190612173565b60405180910390f35b61022f61055b565b60405161023c919061221f565b60405180910390f35b61024d610563565b60405161025a9190611fd0565b60405180910390f35b61026b610572565b005b610275610825565b6040516102829190611fd0565b60405180910390f35b6102a560048036038101906102a09190612238565b610833565b6040516102b29190611fd0565b60405180910390f35b6102c3610878565b005b6102df60048036038101906102da9190612238565b61088b565b6040516102ec9190611fd0565b60405180910390f35b6102fd6108a0565b60405161030a9190611fd0565b60405180910390f35b61031b6108a6565b604051610328919061219b565b60405180910390f35b6103396108ce565b6040516103469190611fd0565b60405180910390f35b6103576108dd565b6040516103649190612073565b60405180910390f35b6103876004803603810190610382919061211b565b61096d565b6040516103949190612173565b60405180910390f35b6103b760048036038101906103b2919061211b565b61098f565b005b6103d360048036038101906103ce9190612263565b610bee565b6040516103e09190611fd0565b60405180910390f35b61040360048036038101906103fe91906122a1565b610c70565b005b61041f600480360381019061041a9190612238565b610fa5565b005b610429611029565b604051610436919061219b565b60405180910390f35b69043c33c193756480000081565b60606003805461045c906122f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610488906122f9565b80156104d35780601f106104aa576101008083540402835291602001916104d3565b820191905f5260205f20905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b5f806104e761104e565b90506104f4818585611055565b600191505092915050565b5f600254905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8061053761104e565b9050610544858285611067565b61054f8585856110f9565b60019150509392505050565b5f6012905090565b6a0771d2fa45345aa900000081565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890612373565b60405180910390fd5b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161065c919061219b565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906123a5565b90505f81116106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d69061241a565b60405180910390fd5b6a084595161401484a0000006007541161072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590612482565b60405180910390fd5b610764730227628f3f023bb0b980b67d528571c95c6dac1c3073f7addb930777e11b83a5e7494421ec4c589d03176101f46111e9565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016107e19291906124a0565b6020604051808303815f875af11580156107fd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082191906124f1565b5050565b69d3c21bcecceda100000081565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108806116ba565b6108895f611741565b565b6009602052805f5260405f205f915090505481565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a084595161401484a00000081565b6060600480546108ec906122f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610918906122f9565b80156109635780601f1061093a57610100808354040283529160200191610963565b820191905f5260205f20905b81548152906001019060200180831161094657829003601f168201915b5050505050905090565b5f8061097761104e565b90506109848185856110f9565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590612373565b60405180910390fd5b5f8111610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790612566565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16335f805f8067ffffffffffffffff811115610a9657610a95612584565b5b6040519080825280601f01601f191660200182016040528015610ac85781602001600182028036833780820191505090505b50604051602401610add959493929190612645565b6040516020818303038152906040527fdd5a12d8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b6791906126d7565b5f604051808303815f865af19150503d805f8114610ba0576040519150601f19603f3d011682016040523d82523d5f602084013e610ba5565b606091505b5050905080610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090612737565b60405180910390fd5b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b806a084595161401484a00000081610c866104ff565b610c909190612782565b1115610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc8906127ff565b60405180910390fd5b69043c33c1937564800000821115610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590612867565b60405180910390fd5b69043c33c19375648000008260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d729190612782565b1115610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa906128f5565b60405180910390fd5b8160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610e10929190612913565b602060405180830381865afa158015610e2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4f91906123a5565b1015610e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e87906129aa565b60405180910390fd5b610ede33308460085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611804909392919063ffffffff16565b610ee83383611886565b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f349190612782565b925050819055508160075f828254610f4c9190612782565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8936d06b61ad023525017d83cb2cec9d7a688f71eb45e3ed02a9ba311c17b51b83604051610f999190611fd0565b60405180910390a25050565b610fad6116ba565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611014919061219b565b60405180910390fd5b61102681611741565b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b6110628383836001611905565b505050565b5f6110728484610bee565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110f357818110156110e4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110db939291906129c8565b60405180910390fd5b6110f284848484035f611905565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611169575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611160919061219b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111d9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111d0919061219b565b60405180910390fd5b6111e4838383611ad4565b505050565b5f808573ffffffffffffffffffffffffffffffffffffffff1685858560405160240161121793929190612a1a565b6040516020818303038152906040527fa1671295000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516112a191906126d7565b5f604051808303815f865af19150503d805f81146112da576040519150601f19603f3d011682016040523d82523d5f602084013e6112df565b606091505b509150915081611324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131b90612a99565b60405180910390fd5b5f61132e82611ced565b90508073ffffffffffffffffffffffffffffffffffffffff166207a12060405160240161135b9190612af0565b6040516020818303038152906040527f9a26bd81000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516113e591906126d7565b5f604051808303815f865af19150503d805f811461141e576040519150601f19603f3d011682016040523d82523d5f602084013e611423565b606091505b50508093505082611469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146090612b53565b60405180910390fd5b611471611f3e565b86815f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816040019062ffffff16908162ffffff16815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764c816060019060020b908160020b81525050620d89b4816080019060020b908160020b815250506969e10de76676d08000008160a00181815250506969e10de76676d08000008160c00181815250505f8160e00181815250505f816101000181815250508173ffffffffffffffffffffffffffffffffffffffff16816040516024016115a29190612c6e565b6040516020818303038152906040527faa88a96c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161162c91906126d7565b5f604051808303815f865af19150503d805f8114611665576040519150601f19603f3d011682016040523d82523d5f602084013e61166a565b606091505b505080945050836116b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a790612737565b60405180910390fd5b5050505050505050565b6116c261104e565b73ffffffffffffffffffffffffffffffffffffffff166116e06108a6565b73ffffffffffffffffffffffffffffffffffffffff161461173f5761170361104e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611736919061219b565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611880848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161183993929190612c88565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cfa565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118f6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118ed919061219b565b60405180910390fd5b6119015f8383611ad4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611975575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161196c919061219b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119e5575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119dc919061219b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ace578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ac59190611fd0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b24578060025f828254611b189190612782565b92505081905550611bf2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611bad578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ba4939291906129c8565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c39578060025f8282540392505081905550611c83565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ce09190611fd0565b60405180910390a3505050565b5f60148201519050919050565b5f611d24828473ffffffffffffffffffffffffffffffffffffffff16611d8f90919063ffffffff16565b90505f815114158015611d48575080806020019051810190611d4691906124f1565b155b15611d8a57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d81919061219b565b60405180910390fd5b505050565b6060611d9c83835f611da4565b905092915050565b606081471015611deb57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611de2919061219b565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051611e1391906126d7565b5f6040518083038185875af1925050503d805f8114611e4d576040519150601f19603f3d011682016040523d82523d5f602084013e611e52565b606091505b5091509150611e62868383611e6d565b925050509392505050565b606082611e8257611e7d82611efa565b611ef2565b5f8251148015611ea857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611eea57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611ee1919061219b565b60405180910390fd5b819050611ef3565b5b9392505050565b5f81511115611f0c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061012001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f62ffffff1681526020015f60020b81526020015f60020b81526020015f81526020015f81526020015f81526020015f81525090565b5f819050919050565b611fca81611fb8565b82525050565b5f602082019050611fe35f830184611fc1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612020578082015181840152602081019050612005565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61204582611fe9565b61204f8185611ff3565b935061205f818560208601612003565b6120688161202b565b840191505092915050565b5f6020820190508181035f83015261208b818461203b565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120c082612097565b9050919050565b6120d0816120b6565b81146120da575f80fd5b50565b5f813590506120eb816120c7565b92915050565b6120fa81611fb8565b8114612104575f80fd5b50565b5f81359050612115816120f1565b92915050565b5f806040838503121561213157612130612093565b5b5f61213e858286016120dd565b925050602061214f85828601612107565b9150509250929050565b5f8115159050919050565b61216d81612159565b82525050565b5f6020820190506121865f830184612164565b92915050565b612195816120b6565b82525050565b5f6020820190506121ae5f83018461218c565b92915050565b5f805f606084860312156121cb576121ca612093565b5b5f6121d8868287016120dd565b93505060206121e9868287016120dd565b92505060406121fa86828701612107565b9150509250925092565b5f60ff82169050919050565b61221981612204565b82525050565b5f6020820190506122325f830184612210565b92915050565b5f6020828403121561224d5761224c612093565b5b5f61225a848285016120dd565b91505092915050565b5f806040838503121561227957612278612093565b5b5f612286858286016120dd565b9250506020612297858286016120dd565b9150509250929050565b5f602082840312156122b6576122b5612093565b5b5f6122c384828501612107565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061231057607f821691505b602082108103612323576123226122cc565b5b50919050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61235d600e83611ff3565b915061236882612329565b602082019050919050565b5f6020820190508181035f83015261238a81612351565b9050919050565b5f8151905061239f816120f1565b92915050565b5f602082840312156123ba576123b9612093565b5b5f6123c784828501612391565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f612404601583611ff3565b915061240f826123d0565b602082019050919050565b5f6020820190508181035f830152612431816123f8565b9050919050565b7f4e6f7420456e6f75676820537570706c790000000000000000000000000000005f82015250565b5f61246c601183611ff3565b915061247782612438565b602082019050919050565b5f6020820190508181035f83015261249981612460565b9050919050565b5f6040820190506124b35f83018561218c565b6124c06020830184611fc1565b9392505050565b6124d081612159565b81146124da575f80fd5b50565b5f815190506124eb816124c7565b92915050565b5f6020828403121561250657612505612093565b5b5f612513848285016124dd565b91505092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f612550602083611ff3565b915061255b8261251c565b602082019050919050565b5f6020820190508181035f83015261257d81612544565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050919050565b5f819050919050565b5f6125dd6125d86125d3846125b1565b6125ba565b612204565b9050919050565b6125ed816125c3565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f612617826125f3565b61262181856125fd565b9350612631818560208601612003565b61263a8161202b565b840191505092915050565b5f60a0820190506126585f83018861218c565b6126656020830187612164565b61267260408301866125e4565b61267f60608301856125e4565b8181036080830152612691818461260d565b90509695505050505050565b5f81905092915050565b5f6126b1826125f3565b6126bb818561269d565b93506126cb818560208601612003565b80840191505092915050565b5f6126e282846126a7565b915081905092915050565b7f4661696c656420746f204d696e740000000000000000000000000000000000005f82015250565b5f612721600e83611ff3565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61278c82611fb8565b915061279783611fb8565b92508282019050808211156127af576127ae612755565b5b92915050565b7f4578636565647320746f74616c20737570706c790000000000000000000000005f82015250565b5f6127e9601483611ff3565b91506127f4826127b5565b602082019050919050565b5f6020820190508181035f830152612816816127dd565b9050919050565b7f45786365656473206d696e74206c696d69742070657220696e766573746f72005f82015250565b5f612851601f83611ff3565b915061285c8261281d565b602082019050919050565b5f6020820190508181035f83015261287e81612845565b9050919050565b7f45786365656473206d696e74206c696d697420666f722074686520696e7665735f8201527f746f720000000000000000000000000000000000000000000000000000000000602082015250565b5f6128df602383611ff3565b91506128ea82612885565b604082019050919050565b5f6020820190508181035f83015261290c816128d3565b9050919050565b5f6040820190506129265f83018561218c565b612933602083018461218c565b9392505050565b7f596f75206d75737420617070726f76652074686520636f6e747261637420746f5f8201527f2061636365737320796f75722055534454000000000000000000000000000000602082015250565b5f612994603183611ff3565b915061299f8261293a565b604082019050919050565b5f6020820190508181035f8301526129c181612988565b9050919050565b5f6060820190506129db5f83018661218c565b6129e86020830185611fc1565b6129f56040830184611fc1565b949350505050565b5f62ffffff82169050919050565b612a14816129fd565b82525050565b5f606082019050612a2d5f83018661218c565b612a3a602083018561218c565b612a476040830184612a0b565b949350505050565b7f4661696c656420746f2066696e6420466163746f7279000000000000000000005f82015250565b5f612a83601683611ff3565b9150612a8e82612a4f565b602082019050919050565b5f6020820190508181035f830152612ab081612a77565b9050919050565b5f819050919050565b5f612ada612ad5612ad084612ab7565b6125ba565b6129fd565b9050919050565b612aea81612ac0565b82525050565b5f602082019050612b035f830184612ae1565b92915050565b7f4661696c656420746f20506f6f6c20696e697469616c697a65000000000000005f82015250565b5f612b3d601983611ff3565b9150612b4882612b09565b602082019050919050565b5f6020820190508181035f830152612b6a81612b31565b9050919050565b612b7a816120b6565b82525050565b612b89816129fd565b82525050565b5f8160020b9050919050565b612ba481612b8f565b82525050565b612bb381611fb8565b82525050565b61012082015f820151612bce5f850182612b71565b506020820151612be16020850182612b71565b506040820151612bf46040850182612b80565b506060820151612c076060850182612b9b565b506080820151612c1a6080850182612b9b565b5060a0820151612c2d60a0850182612baa565b5060c0820151612c4060c0850182612baa565b5060e0820151612c5360e0850182612baa565b50610100820151612c68610100850182612baa565b50505050565b5f61012082019050612c825f830184612bb9565b92915050565b5f606082019050612c9b5f83018661218c565b612ca8602083018561218c565b612cb56040830184611fc1565b94935050505056fea2646970667358221220c2358b6fd3cf22d51e92175cc2637cd2fe48a6795ac106f28445a30051600b4a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3771 CODESIZE SUB DUP1 PUSH3 0x3771 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x5E9 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E5A4620546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E5A460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x892 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x892 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x213 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x20B PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x2D6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xA70 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x349 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x340 SWAP2 SWAP1 PUSH3 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x35C PUSH0 DUP4 DUP4 PUSH3 0x360 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3A7 SWAP2 SWAP1 PUSH3 0x9CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x485 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x440 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x437 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4CE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x518 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x577 SWAP2 SWAP1 PUSH3 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5B3 DUP3 PUSH3 0x588 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C5 DUP2 PUSH3 0x5A7 JUMP JUMPDEST DUP2 EQ PUSH3 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5E3 DUP2 PUSH3 0x5BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x602 JUMPI PUSH3 0x601 PUSH3 0x584 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x611 DUP6 DUP3 DUP7 ADD PUSH3 0x5D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x624 DUP6 DUP3 DUP7 ADD PUSH3 0x5D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6C0 JUMPI PUSH3 0x6BF PUSH3 0x665 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x724 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6E7 JUMP JUMPDEST PUSH3 0x730 DUP7 DUP4 PUSH3 0x6E7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x77A PUSH3 0x774 PUSH3 0x76E DUP5 PUSH3 0x748 JUMP JUMPDEST PUSH3 0x751 JUMP JUMPDEST PUSH3 0x748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x795 DUP4 PUSH3 0x75A JUMP JUMPDEST PUSH3 0x7AD PUSH3 0x7A4 DUP3 PUSH3 0x781 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6F3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x7C3 PUSH3 0x7B5 JUMP JUMPDEST PUSH3 0x7D0 DUP2 DUP5 DUP5 PUSH3 0x78A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7F7 JUMPI PUSH3 0x7EB PUSH0 DUP3 PUSH3 0x7B9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x846 JUMPI PUSH3 0x810 DUP2 PUSH3 0x6C6 JUMP JUMPDEST PUSH3 0x81B DUP5 PUSH3 0x6D8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x82B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x843 PUSH3 0x83A DUP6 PUSH3 0x6D8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x868 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x84B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x882 DUP4 DUP4 PUSH3 0x857 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x89D DUP3 PUSH3 0x62E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8B9 JUMPI PUSH3 0x8B8 PUSH3 0x638 JUMP JUMPDEST JUMPDEST PUSH3 0x8C5 DUP3 SLOAD PUSH3 0x692 JUMP JUMPDEST PUSH3 0x8D2 DUP3 DUP3 DUP6 PUSH3 0x7FB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x908 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8F3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8FF DUP6 DUP3 PUSH3 0x875 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x96E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x918 DUP7 PUSH3 0x6C6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x941 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x91A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x961 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x95D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x857 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x981 DUP2 PUSH3 0x5A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x99C PUSH0 DUP4 ADD DUP5 PUSH3 0x976 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x9DB DUP3 PUSH3 0x748 JUMP JUMPDEST SWAP2 POP PUSH3 0x9E8 DUP4 PUSH3 0x748 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA03 JUMPI PUSH3 0xA02 PUSH3 0x9A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA14 DUP2 PUSH3 0x748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA2F PUSH0 DUP4 ADD DUP7 PUSH3 0x976 JUMP JUMPDEST PUSH3 0xA3E PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA09 JUMP JUMPDEST PUSH3 0xA4D PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA09 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA6A PUSH0 DUP4 ADD DUP5 PUSH3 0xA09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CF3 DUP1 PUSH3 0xA7E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD1B8DF22 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE5A7EB75 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xFF920C74 EQ PUSH2 0x421 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x7241DFA0 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x771282F6 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x329927A7 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x4FE72439 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28B JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x39600D2 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x185870F9 EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x878 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x22A1 JUMP JUMPDEST PUSH2 0xC70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x429 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0x43C33C1937564800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x488 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E7 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F4 DUP2 DUP6 DUP6 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x537 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP6 DUP3 DUP6 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x54F DUP6 DUP6 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x771D2FA45345AA9000000 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x84595161401484A000000 PUSH1 0x7 SLOAD GT PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 PUSH20 0x227628F3F023BB0B980B67D528571C95C6DAC1C ADDRESS PUSH20 0xF7ADDB930777E11B83A5E7494421EC4C589D0317 PUSH2 0x1F4 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP3 SWAP2 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x880 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x889 PUSH0 PUSH2 0x1741 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8EC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x918 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x963 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x963 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x946 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x977 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x984 DUP2 DUP6 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH0 DUP1 PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0x2584 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAC8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xDD5A12D800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH11 0x84595161401484A000000 DUP2 PUSH2 0xC86 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x43C33C1937564800000 DUP3 GT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP1 PUSH2 0x2867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x43C33C1937564800000 DUP3 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST GT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP1 PUSH2 0x28F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE10 SWAP3 SWAP2 SWAP1 PUSH2 0x2913 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST LT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE87 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDE CALLER ADDRESS DUP5 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1804 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEE8 CALLER DUP4 PUSH2 0x1886 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8936D06B61AD023525017D83CB2CEC9D7A688F71EB45E3ED02A9BA311C17B51B DUP4 PUSH1 0x40 MLOAD PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFAD PUSH2 0x16BA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1026 DUP2 PUSH2 0x1741 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1062 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1905 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1169 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E4 DUP4 DUP4 DUP4 PUSH2 0x1AD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xA167129500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x132E DUP3 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x7A120 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x2AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x9A26BD8100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP4 POP POP DUP3 PUSH2 0x1469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1460 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1471 PUSH2 0x1F3E JUMP JUMPDEST DUP7 DUP2 PUSH0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x40 ADD SWAP1 PUSH3 0xFFFFFF AND SWAP1 DUP2 PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2764C DUP2 PUSH1 0x60 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH3 0xD89B4 DUP2 PUSH1 0x80 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 PUSH2 0x100 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xAA88A96C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1665 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x166A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP5 POP POP DUP4 PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A7 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16C2 PUSH2 0x104E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E0 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x173F JUMPI PUSH2 0x1703 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1880 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1839 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CFA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18ED SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1901 PUSH0 DUP4 DUP4 PUSH2 0x1AD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1975 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DC SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1ACE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AC5 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B24 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C83 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 DUP3 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D24 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D48 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D46 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D8A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D9C DUP4 DUP4 PUSH0 PUSH2 0x1DA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1DEB JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE2 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1E4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E62 DUP7 DUP4 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E82 JUMPI PUSH2 0x1E7D DUP3 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x1EF2 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1EA8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EEA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE1 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1F0C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2005 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x204F DUP2 DUP6 PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP PUSH2 0x205F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x2068 DUP2 PUSH2 0x202B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x208B DUP2 DUP5 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D0 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EB DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20FA DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2115 DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213E DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x214F DUP6 DUP3 DUP7 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216D DUP2 PUSH2 0x2159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2186 PUSH0 DUP4 ADD DUP5 PUSH2 0x2164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21AE PUSH0 DUP4 ADD DUP5 PUSH2 0x218C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21CB JUMPI PUSH2 0x21CA PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D8 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E9 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21FA DUP7 DUP3 DUP8 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x2204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2232 PUSH0 DUP4 ADD DUP5 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225A DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2286 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2297 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B6 JUMPI PUSH2 0x22B5 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C3 DUP5 DUP3 DUP6 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2310 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2323 JUMPI PUSH2 0x2322 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x235D PUSH1 0xE DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2368 DUP3 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238A DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x239F DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C7 DUP5 DUP3 DUP6 ADD PUSH2 0x2391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2404 PUSH1 0x15 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x240F DUP3 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F75676820537570706C79000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x246C PUSH1 0x11 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2477 DUP3 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2499 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B3 PUSH0 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x24C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x24D0 DUP2 PUSH2 0x2159 JUMP JUMPDEST DUP2 EQ PUSH2 0x24DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24EB DUP2 PUSH2 0x24C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2513 DUP5 DUP3 DUP6 ADD PUSH2 0x24DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2550 PUSH1 0x20 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x255B DUP3 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x257D DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25DD PUSH2 0x25D8 PUSH2 0x25D3 DUP5 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25ED DUP2 PUSH2 0x25C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2617 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x2621 DUP2 DUP6 PUSH2 0x25FD JUMP JUMPDEST SWAP4 POP PUSH2 0x2631 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x263A DUP2 PUSH2 0x202B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2658 PUSH0 DUP4 ADD DUP9 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2665 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x2672 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x267F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x25E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2691 DUP2 DUP5 PUSH2 0x260D JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B1 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x26BB DUP2 DUP6 PUSH2 0x269D JUMP JUMPDEST SWAP4 POP PUSH2 0x26CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 DUP3 DUP5 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F204D696E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0xE DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x278C DUP3 PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2797 DUP4 PUSH2 0x1FB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27AF JUMPI PUSH2 0x27AE PUSH2 0x2755 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320746F74616C20737570706C79000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E9 PUSH1 0x14 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F4 DUP3 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2816 DUP2 PUSH2 0x27DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D696E74206C696D69742070657220696E766573746F7200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2851 PUSH1 0x1F DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x285C DUP3 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x287E DUP2 PUSH2 0x2845 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D696E74206C696D697420666F722074686520696E766573 PUSH0 DUP3 ADD MSTORE PUSH32 0x746F720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DF PUSH1 0x23 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EA DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x290C DUP2 PUSH2 0x28D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2926 PUSH0 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2933 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x218C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F75206D75737420617070726F76652074686520636F6E747261637420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061636365737320796F75722055534454000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2994 PUSH1 0x31 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x299F DUP3 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29C1 DUP2 PUSH2 0x2988 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29DB PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x29E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x29F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A14 DUP2 PUSH2 0x29FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A2D PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2A3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2A47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A0B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2066696E6420466163746F727900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A83 PUSH1 0x16 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A8E DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB0 DUP2 PUSH2 0x2A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2ADA PUSH2 0x2AD5 PUSH2 0x2AD0 DUP5 PUSH2 0x2AB7 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEA DUP2 PUSH2 0x2AC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B03 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F20506F6F6C20696E697469616C697A6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x19 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7A DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B89 DUP2 PUSH2 0x29FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA4 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB3 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2BCE PUSH0 DUP6 ADD DUP3 PUSH2 0x2B71 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2BE1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2B71 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2BF4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2B80 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2C07 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2B9B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2C1A PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2B9B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2C2D PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2C40 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2C53 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2C68 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2CB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP12 PUSH16 0xD3CF22D51E92175CC2637CD2FE48A679 GAS 0xC1 MOD CALLCODE DUP5 GASLIMIT LOG3 STOP MLOAD PUSH1 0xB BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "291:5123:9:-:0;;;1657:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1767:16;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1817:16:9::2;1799:15;;:34;;;;;;;;;;;;;;;;;;1857:12;1843:11;;:26;;;;;;;;;;;;;;;;;;1879:40;1885:15;;;;;;;;;;;744:20;1879:5;;;:40;;:::i;:::-;1657:269:::0;;291:5123;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:191;7163:3;7182:20;7200:1;7182:20;:::i;:::-;7177:25;;7216:20;7234:1;7216:20;:::i;:::-;7211:25;;7259:1;7256;7252:9;7245:16;;7280:3;7277:1;7274:10;7271:36;;;7287:18;;:::i;:::-;7271:36;7123:191;;;;:::o;7320:118::-;7407:24;7425:5;7407:24;:::i;:::-;7402:3;7395:37;7320:118;;:::o;7444:442::-;7593:4;7631:2;7620:9;7616:18;7608:26;;7644:71;7712:1;7701:9;7697:17;7688:6;7644:71;:::i;:::-;7725:72;7793:2;7782:9;7778:18;7769:6;7725:72;:::i;:::-;7807;7875:2;7864:9;7860:18;7851:6;7807:72;:::i;:::-;7444:442;;;;;;:::o;7892:222::-;7985:4;8023:2;8012:9;8008:18;8000:26;;8036:71;8104:1;8093:9;8089:17;8080:6;8036:71;:::i;:::-;7892:222;;;;:::o;291:5123:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEVELOPER_SUPPLY_1561": {
									"entryPoint": 2085,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INVESTOR_SUPPLY_1569": {
									"entryPoint": 1379,
									"id": 1569,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINT_LIMIT_PER_INVESTOR_1577": {
									"entryPoint": 1087,
									"id": 1577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_1553": {
									"entryPoint": 2254,
									"id": 1553,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDTAddress_1583": {
									"entryPoint": 4137,
									"id": 1583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 4181,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 6405,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1179": {
									"entryPoint": 7418,
									"id": 1179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5818,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 6278,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1494": {
									"entryPoint": 4174,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1481": {
									"entryPoint": 7930,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 4199,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5953,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4345,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6868,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3054,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1245,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2099,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyBack_1983": {
									"entryPoint": 2447,
									"id": 1983,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bytesToAddress_1942": {
									"entryPoint": 7405,
									"id": 1942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentSupply_1581": {
									"entryPoint": 2208,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1371,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@developerWallet_1579": {
									"entryPoint": 1288,
									"id": 1579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1349": {
									"entryPoint": 7588,
									"id": 1349,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1303": {
									"entryPoint": 7567,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintInvestor_1736": {
									"entryPoint": 3184,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintedTokens_1587": {
									"entryPoint": 2187,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1101,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2214,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolInit_1933": {
									"entryPoint": 4585,
									"id": 1933,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2168,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1016": {
									"entryPoint": 6148,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2269,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1279,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1325,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4005,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2413,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1441": {
									"entryPoint": 7789,
									"id": 1441,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1786": {
									"entryPoint": 1394,
									"id": 1786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int24_to_t_int24": {
									"entryPoint": 11163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack": {
									"entryPoint": 9700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_500000_by_1_to_t_uint24_fromStack": {
									"entryPoint": 10977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_MintParams_$1545_memory_ptr_to_t_struct$_MintParams_$1545_memory_ptr_fromStack": {
									"entryPoint": 11193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 11136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 10763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 11178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 10778,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11400,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool_t_rational_0_by_1_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_bool_t_uint8_t_uint8_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9797,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10696,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_500000_by_1__to_t_uint24__fromStack_reversed": {
									"entryPoint": 10992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MintParams_$1545_memory_ptr__to_t_struct$_MintParams_$1545_memory_ptr__fromStack_reversed": {
									"entryPoint": 11374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 11151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 9649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_500000_by_1": {
									"entryPoint": 10935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint8": {
									"entryPoint": 9667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_500000_by_1_to_t_uint24": {
									"entryPoint": 10944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589": {
									"entryPoint": 10269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 9500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8": {
									"entryPoint": 10373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c": {
									"entryPoint": 10165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8": {
									"entryPoint": 10831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7": {
									"entryPoint": 10554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 9001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:27747:10",
										"nodeType": "YulBlock",
										"src": "0:27747:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "501:40:10",
													"nodeType": "YulBlock",
													"src": "501:40:10",
													"statements": [
														{
															"nativeSrc": "512:22:10",
															"nodeType": "YulAssignment",
															"src": "512:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:10"
																},
																"nativeSrc": "522:12:10",
																"nodeType": "YulFunctionCall",
																"src": "522:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:10",
														"nodeType": "YulTypedName",
														"src": "484:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:10",
														"nodeType": "YulTypedName",
														"src": "494:6:10",
														"type": ""
													}
												],
												"src": "442:99:10"
											},
											{
												"body": {
													"nativeSrc": "643:73:10",
													"nodeType": "YulBlock",
													"src": "643:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:10"
																},
																"nativeSrc": "653:19:10",
																"nodeType": "YulFunctionCall",
																"src": "653:19:10"
															},
															"nativeSrc": "653:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:10"
														},
														{
															"nativeSrc": "681:29:10",
															"nodeType": "YulAssignment",
															"src": "681:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:10",
																		"nodeType": "YulLiteral",
																		"src": "705:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:10"
																},
																"nativeSrc": "696:14:10",
																"nodeType": "YulFunctionCall",
																"src": "696:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:10",
														"nodeType": "YulTypedName",
														"src": "615:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:10",
														"nodeType": "YulTypedName",
														"src": "620:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:10",
														"nodeType": "YulTypedName",
														"src": "631:11:10",
														"type": ""
													}
												],
												"src": "547:169:10"
											},
											{
												"body": {
													"nativeSrc": "784:184:10",
													"nodeType": "YulBlock",
													"src": "784:184:10",
													"statements": [
														{
															"nativeSrc": "794:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "803:1:10",
																"nodeType": "YulLiteral",
																"src": "803:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "798:1:10",
																	"nodeType": "YulTypedName",
																	"src": "798:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "863:63:10",
																"nodeType": "YulBlock",
																"src": "863:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "888:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "893:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "884:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:10"
																					},
																					"nativeSrc": "884:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "907:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "912:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "903:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:10"
																							},
																							"nativeSrc": "903:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "897:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:10"
																					},
																					"nativeSrc": "897:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "877:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:10"
																			},
																			"nativeSrc": "877:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:10"
																		},
																		"nativeSrc": "877:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "824:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "821:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:10"
																},
																"nativeSrc": "821:13:10",
																"nodeType": "YulFunctionCall",
																"src": "821:13:10"
															},
															"nativeSrc": "813:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "835:19:10",
																"nodeType": "YulBlock",
																"src": "835:19:10",
																"statements": [
																	{
																		"nativeSrc": "837:15:10",
																		"nodeType": "YulAssignment",
																		"src": "837:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "846:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:2:10",
																					"nodeType": "YulLiteral",
																					"src": "849:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "842:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:10"
																			},
																			"nativeSrc": "842:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "837:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "817:3:10",
																"nodeType": "YulBlock",
																"src": "817:3:10",
																"statements": []
															},
															"src": "813:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "946:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:10"
																		},
																		"nativeSrc": "942:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:1:10",
																		"nodeType": "YulLiteral",
																		"src": "960:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:10"
																},
																"nativeSrc": "935:27:10",
																"nodeType": "YulFunctionCall",
																"src": "935:27:10"
															},
															"nativeSrc": "935:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "935:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:10",
														"nodeType": "YulTypedName",
														"src": "766:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:10",
														"nodeType": "YulTypedName",
														"src": "771:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:10",
														"nodeType": "YulTypedName",
														"src": "776:6:10",
														"type": ""
													}
												],
												"src": "722:246:10"
											},
											{
												"body": {
													"nativeSrc": "1022:54:10",
													"nodeType": "YulBlock",
													"src": "1022:54:10",
													"statements": [
														{
															"nativeSrc": "1032:38:10",
															"nodeType": "YulAssignment",
															"src": "1032:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1050:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1057:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:10"
																		},
																		"nativeSrc": "1046:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1066:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1062:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:10"
																		},
																		"nativeSrc": "1062:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:10"
																},
																"nativeSrc": "1042:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1042:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "974:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:10",
														"nodeType": "YulTypedName",
														"src": "1005:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1015:6:10",
														"nodeType": "YulTypedName",
														"src": "1015:6:10",
														"type": ""
													}
												],
												"src": "974:102:10"
											},
											{
												"body": {
													"nativeSrc": "1174:285:10",
													"nodeType": "YulBlock",
													"src": "1174:285:10",
													"statements": [
														{
															"nativeSrc": "1184:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1231:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1198:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:10"
																},
																"nativeSrc": "1198:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1198:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1246:78:10",
															"nodeType": "YulAssignment",
															"src": "1246:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1312:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1317:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1253:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:10"
																},
																"nativeSrc": "1253:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1246:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1372:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1379:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:10"
																		},
																		"nativeSrc": "1368:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1386:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1391:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1333:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:10"
																},
																"nativeSrc": "1333:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1333:65:10"
															},
															"nativeSrc": "1333:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:10"
														},
														{
															"nativeSrc": "1407:46:10",
															"nodeType": "YulAssignment",
															"src": "1407:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1445:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1423:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:10"
																		},
																		"nativeSrc": "1423:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:10"
																},
																"nativeSrc": "1414:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1414:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1407:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1082:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1155:5:10",
														"nodeType": "YulTypedName",
														"src": "1155:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1162:3:10",
														"nodeType": "YulTypedName",
														"src": "1162:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1170:3:10",
														"nodeType": "YulTypedName",
														"src": "1170:3:10",
														"type": ""
													}
												],
												"src": "1082:377:10"
											},
											{
												"body": {
													"nativeSrc": "1583:195:10",
													"nodeType": "YulBlock",
													"src": "1583:195:10",
													"statements": [
														{
															"nativeSrc": "1593:26:10",
															"nodeType": "YulAssignment",
															"src": "1593:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:10"
																},
																"nativeSrc": "1601:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:10"
																		},
																		"nativeSrc": "1636:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1659:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:10"
																		},
																		"nativeSrc": "1655:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:10"
																},
																"nativeSrc": "1629:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1629:47:10"
															},
															"nativeSrc": "1629:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:10"
														},
														{
															"nativeSrc": "1685:86:10",
															"nodeType": "YulAssignment",
															"src": "1685:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1757:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1766:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1693:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:10"
																},
																"nativeSrc": "1693:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1693:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1685:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1465:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1555:9:10",
														"nodeType": "YulTypedName",
														"src": "1555:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1567:6:10",
														"nodeType": "YulTypedName",
														"src": "1567:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1578:4:10",
														"nodeType": "YulTypedName",
														"src": "1578:4:10",
														"type": ""
													}
												],
												"src": "1465:313:10"
											},
											{
												"body": {
													"nativeSrc": "1824:35:10",
													"nodeType": "YulBlock",
													"src": "1824:35:10",
													"statements": [
														{
															"nativeSrc": "1834:19:10",
															"nodeType": "YulAssignment",
															"src": "1834:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1844:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:10"
																},
																"nativeSrc": "1844:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1844:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1834:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1784:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1817:6:10",
														"nodeType": "YulTypedName",
														"src": "1817:6:10",
														"type": ""
													}
												],
												"src": "1784:75:10"
											},
											{
												"body": {
													"nativeSrc": "1954:28:10",
													"nodeType": "YulBlock",
													"src": "1954:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:10"
																},
																"nativeSrc": "1964:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1964:12:10"
															},
															"nativeSrc": "1964:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1865:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:10"
											},
											{
												"body": {
													"nativeSrc": "2077:28:10",
													"nodeType": "YulBlock",
													"src": "2077:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:10"
																},
																"nativeSrc": "2087:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2087:12:10"
															},
															"nativeSrc": "2087:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1988:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:10"
											},
											{
												"body": {
													"nativeSrc": "2156:81:10",
													"nodeType": "YulBlock",
													"src": "2156:81:10",
													"statements": [
														{
															"nativeSrc": "2166:65:10",
															"nodeType": "YulAssignment",
															"src": "2166:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2181:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2181:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2188:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:10"
																},
																"nativeSrc": "2177:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2177:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2166:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2111:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2138:5:10",
														"nodeType": "YulTypedName",
														"src": "2138:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2148:7:10",
														"nodeType": "YulTypedName",
														"src": "2148:7:10",
														"type": ""
													}
												],
												"src": "2111:126:10"
											},
											{
												"body": {
													"nativeSrc": "2288:51:10",
													"nodeType": "YulBlock",
													"src": "2288:51:10",
													"statements": [
														{
															"nativeSrc": "2298:35:10",
															"nodeType": "YulAssignment",
															"src": "2298:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2327:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2309:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2309:17:10"
																},
																"nativeSrc": "2309:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2309:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2298:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2298:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2243:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2270:5:10",
														"nodeType": "YulTypedName",
														"src": "2270:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2280:7:10",
														"nodeType": "YulTypedName",
														"src": "2280:7:10",
														"type": ""
													}
												],
												"src": "2243:96:10"
											},
											{
												"body": {
													"nativeSrc": "2388:79:10",
													"nodeType": "YulBlock",
													"src": "2388:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2445:16:10",
																"nodeType": "YulBlock",
																"src": "2445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2454:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2447:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:10"
																			},
																			"nativeSrc": "2447:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:10"
																		},
																		"nativeSrc": "2447:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2436:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2418:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:10"
																				},
																				"nativeSrc": "2418:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2408:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:10"
																		},
																		"nativeSrc": "2408:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:10"
																},
																"nativeSrc": "2401:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2401:43:10"
															},
															"nativeSrc": "2398:63:10",
															"nodeType": "YulIf",
															"src": "2398:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2345:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2381:5:10",
														"nodeType": "YulTypedName",
														"src": "2381:5:10",
														"type": ""
													}
												],
												"src": "2345:122:10"
											},
											{
												"body": {
													"nativeSrc": "2525:87:10",
													"nodeType": "YulBlock",
													"src": "2525:87:10",
													"statements": [
														{
															"nativeSrc": "2535:29:10",
															"nodeType": "YulAssignment",
															"src": "2535:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2557:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2544:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:10"
																},
																"nativeSrc": "2544:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2544:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2535:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2535:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2600:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2600:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2573:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2573:26:10"
																},
																"nativeSrc": "2573:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2573:33:10"
															},
															"nativeSrc": "2573:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2573:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2473:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2503:6:10",
														"nodeType": "YulTypedName",
														"src": "2503:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2511:3:10",
														"nodeType": "YulTypedName",
														"src": "2511:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2519:5:10",
														"nodeType": "YulTypedName",
														"src": "2519:5:10",
														"type": ""
													}
												],
												"src": "2473:139:10"
											},
											{
												"body": {
													"nativeSrc": "2661:79:10",
													"nodeType": "YulBlock",
													"src": "2661:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2718:16:10",
																"nodeType": "YulBlock",
																"src": "2718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2727:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2720:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:10"
																			},
																			"nativeSrc": "2720:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:10"
																		},
																		"nativeSrc": "2720:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2684:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2684:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2709:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2691:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2691:17:10"
																				},
																				"nativeSrc": "2691:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2681:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2681:2:10"
																		},
																		"nativeSrc": "2681:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2674:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:10"
																},
																"nativeSrc": "2674:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2674:43:10"
															},
															"nativeSrc": "2671:63:10",
															"nodeType": "YulIf",
															"src": "2671:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2618:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:10",
														"nodeType": "YulTypedName",
														"src": "2654:5:10",
														"type": ""
													}
												],
												"src": "2618:122:10"
											},
											{
												"body": {
													"nativeSrc": "2798:87:10",
													"nodeType": "YulBlock",
													"src": "2798:87:10",
													"statements": [
														{
															"nativeSrc": "2808:29:10",
															"nodeType": "YulAssignment",
															"src": "2808:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2830:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2817:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2817:12:10"
																},
																"nativeSrc": "2817:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2817:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2808:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2873:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2846:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2846:26:10"
																},
																"nativeSrc": "2846:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2846:33:10"
															},
															"nativeSrc": "2846:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2846:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2746:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2776:6:10",
														"nodeType": "YulTypedName",
														"src": "2776:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2784:3:10",
														"nodeType": "YulTypedName",
														"src": "2784:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2792:5:10",
														"nodeType": "YulTypedName",
														"src": "2792:5:10",
														"type": ""
													}
												],
												"src": "2746:139:10"
											},
											{
												"body": {
													"nativeSrc": "2974:391:10",
													"nodeType": "YulBlock",
													"src": "2974:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3020:83:10",
																"nodeType": "YulBlock",
																"src": "3020:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3022:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3022:77:10"
																			},
																			"nativeSrc": "3022:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3022:79:10"
																		},
																		"nativeSrc": "3022:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2995:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2995:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:10"
																		},
																		"nativeSrc": "2991:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3016:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3016:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2987:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:10"
																},
																"nativeSrc": "2987:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2987:32:10"
															},
															"nativeSrc": "2984:119:10",
															"nodeType": "YulIf",
															"src": "2984:119:10"
														},
														{
															"nativeSrc": "3113:117:10",
															"nodeType": "YulBlock",
															"src": "3113:117:10",
															"statements": [
																{
																	"nativeSrc": "3128:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3128:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3142:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3142:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3132:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3132:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3157:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3157:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3192:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3192:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3203:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3203:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3188:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3188:3:10"
																				},
																				"nativeSrc": "3188:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3188:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3212:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3212:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3167:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3167:20:10"
																		},
																		"nativeSrc": "3167:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3157:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3157:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3240:118:10",
															"nodeType": "YulBlock",
															"src": "3240:118:10",
															"statements": [
																{
																	"nativeSrc": "3255:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3255:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3269:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3259:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3259:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3285:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3285:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3320:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3320:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3331:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3331:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3316:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3316:3:10"
																				},
																				"nativeSrc": "3316:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3316:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3295:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3295:20:10"
																		},
																		"nativeSrc": "3295:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3285:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3285:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2891:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2936:9:10",
														"nodeType": "YulTypedName",
														"src": "2936:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2947:7:10",
														"nodeType": "YulTypedName",
														"src": "2947:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2959:6:10",
														"nodeType": "YulTypedName",
														"src": "2959:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2967:6:10",
														"nodeType": "YulTypedName",
														"src": "2967:6:10",
														"type": ""
													}
												],
												"src": "2891:474:10"
											},
											{
												"body": {
													"nativeSrc": "3413:48:10",
													"nodeType": "YulBlock",
													"src": "3413:48:10",
													"statements": [
														{
															"nativeSrc": "3423:32:10",
															"nodeType": "YulAssignment",
															"src": "3423:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3448:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3448:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3441:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3441:6:10"
																		},
																		"nativeSrc": "3441:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3434:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:10"
																},
																"nativeSrc": "3434:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3434:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3423:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3423:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3371:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3395:5:10",
														"nodeType": "YulTypedName",
														"src": "3395:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3405:7:10",
														"nodeType": "YulTypedName",
														"src": "3405:7:10",
														"type": ""
													}
												],
												"src": "3371:90:10"
											},
											{
												"body": {
													"nativeSrc": "3526:50:10",
													"nodeType": "YulBlock",
													"src": "3526:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3563:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3563:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3548:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3548:14:10"
																		},
																		"nativeSrc": "3548:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:10"
																},
																"nativeSrc": "3536:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3536:34:10"
															},
															"nativeSrc": "3536:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3536:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3467:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3514:5:10",
														"nodeType": "YulTypedName",
														"src": "3514:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3521:3:10",
														"nodeType": "YulTypedName",
														"src": "3521:3:10",
														"type": ""
													}
												],
												"src": "3467:109:10"
											},
											{
												"body": {
													"nativeSrc": "3674:118:10",
													"nodeType": "YulBlock",
													"src": "3674:118:10",
													"statements": [
														{
															"nativeSrc": "3684:26:10",
															"nodeType": "YulAssignment",
															"src": "3684:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:10"
																},
																"nativeSrc": "3692:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nativeSrc": "3767:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3720:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3720:37:10"
																},
																"nativeSrc": "3720:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3720:65:10"
															},
															"nativeSrc": "3720:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3720:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3582:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:10",
														"nodeType": "YulTypedName",
														"src": "3646:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:10",
														"nodeType": "YulTypedName",
														"src": "3658:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:10",
														"nodeType": "YulTypedName",
														"src": "3669:4:10",
														"type": ""
													}
												],
												"src": "3582:210:10"
											},
											{
												"body": {
													"nativeSrc": "3863:53:10",
													"nodeType": "YulBlock",
													"src": "3863:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3880:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3880:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3903:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3903:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3885:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3885:17:10"
																		},
																		"nativeSrc": "3885:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3885:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3873:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:10"
																},
																"nativeSrc": "3873:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3873:37:10"
															},
															"nativeSrc": "3873:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3873:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3798:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3851:5:10",
														"nodeType": "YulTypedName",
														"src": "3851:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3858:3:10",
														"nodeType": "YulTypedName",
														"src": "3858:3:10",
														"type": ""
													}
												],
												"src": "3798:118:10"
											},
											{
												"body": {
													"nativeSrc": "4020:124:10",
													"nodeType": "YulBlock",
													"src": "4020:124:10",
													"statements": [
														{
															"nativeSrc": "4030:26:10",
															"nodeType": "YulAssignment",
															"src": "4030:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4042:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4042:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4053:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4053:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4038:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:10"
																},
																"nativeSrc": "4038:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4038:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4030:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4030:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4110:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4123:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4134:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4134:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4119:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:10"
																		},
																		"nativeSrc": "4119:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4066:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4066:43:10"
																},
																"nativeSrc": "4066:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4066:71:10"
															},
															"nativeSrc": "4066:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4066:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3922:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3992:9:10",
														"nodeType": "YulTypedName",
														"src": "3992:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4004:6:10",
														"nodeType": "YulTypedName",
														"src": "4004:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4015:4:10",
														"nodeType": "YulTypedName",
														"src": "4015:4:10",
														"type": ""
													}
												],
												"src": "3922:222:10"
											},
											{
												"body": {
													"nativeSrc": "4250:519:10",
													"nodeType": "YulBlock",
													"src": "4250:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4296:83:10",
																"nodeType": "YulBlock",
																"src": "4296:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4298:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4298:77:10"
																			},
																			"nativeSrc": "4298:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4298:79:10"
																		},
																		"nativeSrc": "4298:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4298:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4271:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4271:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4280:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4267:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:10"
																		},
																		"nativeSrc": "4267:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4292:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4292:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4263:3:10"
																},
																"nativeSrc": "4263:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4263:32:10"
															},
															"nativeSrc": "4260:119:10",
															"nodeType": "YulIf",
															"src": "4260:119:10"
														},
														{
															"nativeSrc": "4389:117:10",
															"nodeType": "YulBlock",
															"src": "4389:117:10",
															"statements": [
																{
																	"nativeSrc": "4404:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4404:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4418:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4418:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4408:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4408:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4433:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4433:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4468:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4468:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4479:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4479:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4464:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4464:3:10"
																				},
																				"nativeSrc": "4464:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4464:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4488:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4488:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4443:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4443:20:10"
																		},
																		"nativeSrc": "4443:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4443:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4433:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4433:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4516:118:10",
															"nodeType": "YulBlock",
															"src": "4516:118:10",
															"statements": [
																{
																	"nativeSrc": "4531:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4531:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4545:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4545:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4535:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4535:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4561:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4561:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4596:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4596:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4607:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4592:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4592:3:10"
																				},
																				"nativeSrc": "4592:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4616:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4571:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4571:20:10"
																		},
																		"nativeSrc": "4571:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4561:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4561:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4644:118:10",
															"nodeType": "YulBlock",
															"src": "4644:118:10",
															"statements": [
																{
																	"nativeSrc": "4659:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4659:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4673:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4673:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4663:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4663:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4689:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4689:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4724:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4724:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4735:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4735:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4720:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4720:3:10"
																				},
																				"nativeSrc": "4720:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4720:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4744:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4744:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4699:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4699:20:10"
																		},
																		"nativeSrc": "4699:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4699:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4689:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4689:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4150:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4204:9:10",
														"nodeType": "YulTypedName",
														"src": "4204:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4215:7:10",
														"nodeType": "YulTypedName",
														"src": "4215:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4227:6:10",
														"nodeType": "YulTypedName",
														"src": "4227:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4235:6:10",
														"nodeType": "YulTypedName",
														"src": "4235:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4243:6:10",
														"nodeType": "YulTypedName",
														"src": "4243:6:10",
														"type": ""
													}
												],
												"src": "4150:619:10"
											},
											{
												"body": {
													"nativeSrc": "4818:43:10",
													"nodeType": "YulBlock",
													"src": "4818:43:10",
													"statements": [
														{
															"nativeSrc": "4828:27:10",
															"nodeType": "YulAssignment",
															"src": "4828:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4843:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4843:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4850:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4850:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4839:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:10"
																},
																"nativeSrc": "4839:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4839:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4828:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4828:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4775:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4800:5:10",
														"nodeType": "YulTypedName",
														"src": "4800:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4810:7:10",
														"nodeType": "YulTypedName",
														"src": "4810:7:10",
														"type": ""
													}
												],
												"src": "4775:86:10"
											},
											{
												"body": {
													"nativeSrc": "4928:51:10",
													"nodeType": "YulBlock",
													"src": "4928:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4945:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4945:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4966:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4966:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4950:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4950:15:10"
																		},
																		"nativeSrc": "4950:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4938:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:10"
																},
																"nativeSrc": "4938:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4938:35:10"
															},
															"nativeSrc": "4938:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4938:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4867:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4916:5:10",
														"nodeType": "YulTypedName",
														"src": "4916:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4923:3:10",
														"nodeType": "YulTypedName",
														"src": "4923:3:10",
														"type": ""
													}
												],
												"src": "4867:112:10"
											},
											{
												"body": {
													"nativeSrc": "5079:120:10",
													"nodeType": "YulBlock",
													"src": "5079:120:10",
													"statements": [
														{
															"nativeSrc": "5089:26:10",
															"nodeType": "YulAssignment",
															"src": "5089:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5101:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5101:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5112:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5112:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5097:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5097:3:10"
																},
																"nativeSrc": "5097:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5097:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5089:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5089:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5165:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5165:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5189:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5189:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:10"
																		},
																		"nativeSrc": "5174:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5125:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5125:39:10"
																},
																"nativeSrc": "5125:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5125:67:10"
															},
															"nativeSrc": "5125:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5125:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4985:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5051:9:10",
														"nodeType": "YulTypedName",
														"src": "5051:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5063:6:10",
														"nodeType": "YulTypedName",
														"src": "5063:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5074:4:10",
														"nodeType": "YulTypedName",
														"src": "5074:4:10",
														"type": ""
													}
												],
												"src": "4985:214:10"
											},
											{
												"body": {
													"nativeSrc": "5271:263:10",
													"nodeType": "YulBlock",
													"src": "5271:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5317:83:10",
																"nodeType": "YulBlock",
																"src": "5317:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5319:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:10"
																			},
																			"nativeSrc": "5319:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:10"
																		},
																		"nativeSrc": "5319:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5292:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:10"
																		},
																		"nativeSrc": "5288:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:10"
																},
																"nativeSrc": "5284:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5284:32:10"
															},
															"nativeSrc": "5281:119:10",
															"nodeType": "YulIf",
															"src": "5281:119:10"
														},
														{
															"nativeSrc": "5410:117:10",
															"nodeType": "YulBlock",
															"src": "5410:117:10",
															"statements": [
																{
																	"nativeSrc": "5425:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5439:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5429:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5454:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5454:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5489:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5500:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5485:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:10"
																				},
																				"nativeSrc": "5485:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5509:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5464:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:10"
																		},
																		"nativeSrc": "5464:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5454:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5205:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5241:9:10",
														"nodeType": "YulTypedName",
														"src": "5241:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5252:7:10",
														"nodeType": "YulTypedName",
														"src": "5252:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5264:6:10",
														"nodeType": "YulTypedName",
														"src": "5264:6:10",
														"type": ""
													}
												],
												"src": "5205:329:10"
											},
											{
												"body": {
													"nativeSrc": "5623:391:10",
													"nodeType": "YulBlock",
													"src": "5623:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:10",
																"nodeType": "YulBlock",
																"src": "5669:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:10"
																			},
																			"nativeSrc": "5671:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:10"
																		},
																		"nativeSrc": "5671:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:10"
																		},
																		"nativeSrc": "5640:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:10"
																},
																"nativeSrc": "5636:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:10"
															},
															"nativeSrc": "5633:119:10",
															"nodeType": "YulIf",
															"src": "5633:119:10"
														},
														{
															"nativeSrc": "5762:117:10",
															"nodeType": "YulBlock",
															"src": "5762:117:10",
															"statements": [
																{
																	"nativeSrc": "5777:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:10"
																				},
																				"nativeSrc": "5837:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:10"
																		},
																		"nativeSrc": "5816:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:10",
															"nodeType": "YulBlock",
															"src": "5889:118:10",
															"statements": [
																{
																	"nativeSrc": "5904:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:10"
																				},
																				"nativeSrc": "5965:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:10"
																		},
																		"nativeSrc": "5944:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:10",
														"nodeType": "YulTypedName",
														"src": "5585:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:10",
														"nodeType": "YulTypedName",
														"src": "5596:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:10",
														"nodeType": "YulTypedName",
														"src": "5608:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:10",
														"nodeType": "YulTypedName",
														"src": "5616:6:10",
														"type": ""
													}
												],
												"src": "5540:474:10"
											},
											{
												"body": {
													"nativeSrc": "6086:263:10",
													"nodeType": "YulBlock",
													"src": "6086:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6132:83:10",
																"nodeType": "YulBlock",
																"src": "6132:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6134:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6134:77:10"
																			},
																			"nativeSrc": "6134:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6134:79:10"
																		},
																		"nativeSrc": "6134:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6134:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6107:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6107:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6116:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6116:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6103:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6103:3:10"
																		},
																		"nativeSrc": "6103:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6103:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6128:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6099:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6099:3:10"
																},
																"nativeSrc": "6099:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6099:32:10"
															},
															"nativeSrc": "6096:119:10",
															"nodeType": "YulIf",
															"src": "6096:119:10"
														},
														{
															"nativeSrc": "6225:117:10",
															"nodeType": "YulBlock",
															"src": "6225:117:10",
															"statements": [
																{
																	"nativeSrc": "6240:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6240:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6254:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6244:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6244:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:10"
																				},
																				"nativeSrc": "6300:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6279:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:10"
																		},
																		"nativeSrc": "6279:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6269:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6020:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6056:9:10",
														"nodeType": "YulTypedName",
														"src": "6056:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6067:7:10",
														"nodeType": "YulTypedName",
														"src": "6067:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6079:6:10",
														"nodeType": "YulTypedName",
														"src": "6079:6:10",
														"type": ""
													}
												],
												"src": "6020:329:10"
											},
											{
												"body": {
													"nativeSrc": "6383:152:10",
													"nodeType": "YulBlock",
													"src": "6383:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6400:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:10"
																},
																"nativeSrc": "6393:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6393:88:10"
															},
															"nativeSrc": "6393:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6497:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6500:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:10"
																},
																"nativeSrc": "6490:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6490:15:10"
															},
															"nativeSrc": "6490:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6521:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6514:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:10"
																},
																"nativeSrc": "6514:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6514:15:10"
															},
															"nativeSrc": "6514:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6355:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:10"
											},
											{
												"body": {
													"nativeSrc": "6592:269:10",
													"nodeType": "YulBlock",
													"src": "6592:269:10",
													"statements": [
														{
															"nativeSrc": "6602:22:10",
															"nodeType": "YulAssignment",
															"src": "6602:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6616:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6622:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6612:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:10"
																},
																"nativeSrc": "6612:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6612:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6602:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:10"
																}
															]
														},
														{
															"nativeSrc": "6633:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6663:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6659:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:10"
																},
																"nativeSrc": "6659:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6659:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6637:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6710:51:10",
																"nodeType": "YulBlock",
																"src": "6710:51:10",
																"statements": [
																	{
																		"nativeSrc": "6724:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6724:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6738:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6746:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6734:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:10"
																			},
																			"nativeSrc": "6734:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6724:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6690:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6683:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:10"
																},
																"nativeSrc": "6683:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6683:26:10"
															},
															"nativeSrc": "6680:81:10",
															"nodeType": "YulIf",
															"src": "6680:81:10"
														},
														{
															"body": {
																"nativeSrc": "6813:42:10",
																"nodeType": "YulBlock",
																"src": "6813:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6827:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:10"
																			},
																			"nativeSrc": "6827:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:10"
																		},
																		"nativeSrc": "6827:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6777:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6800:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6797:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:10"
																		},
																		"nativeSrc": "6797:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6774:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:10"
																},
																"nativeSrc": "6774:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6774:38:10"
															},
															"nativeSrc": "6771:84:10",
															"nodeType": "YulIf",
															"src": "6771:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6541:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6576:4:10",
														"nodeType": "YulTypedName",
														"src": "6576:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6585:6:10",
														"nodeType": "YulTypedName",
														"src": "6585:6:10",
														"type": ""
													}
												],
												"src": "6541:320:10"
											},
											{
												"body": {
													"nativeSrc": "6973:58:10",
													"nodeType": "YulBlock",
													"src": "6973:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6995:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6995:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7003:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7003:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:10"
																		},
																		"nativeSrc": "6991:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:14:10"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "7007:16:10",
																		"nodeType": "YulLiteral",
																		"src": "7007:16:10",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:10"
																},
																"nativeSrc": "6984:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6984:40:10"
															},
															"nativeSrc": "6984:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "6984:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "6867:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6965:6:10",
														"nodeType": "YulTypedName",
														"src": "6965:6:10",
														"type": ""
													}
												],
												"src": "6867:164:10"
											},
											{
												"body": {
													"nativeSrc": "7183:220:10",
													"nodeType": "YulBlock",
													"src": "7183:220:10",
													"statements": [
														{
															"nativeSrc": "7193:74:10",
															"nodeType": "YulAssignment",
															"src": "7193:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7200:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7200:58:10"
																},
																"nativeSrc": "7200:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7200:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7193:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7365:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7365:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "7276:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7276:88:10"
																},
																"nativeSrc": "7276:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7276:93:10"
															},
															"nativeSrc": "7276:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7276:93:10"
														},
														{
															"nativeSrc": "7378:19:10",
															"nodeType": "YulAssignment",
															"src": "7378:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7389:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7389:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7394:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7394:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7385:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:10"
																},
																"nativeSrc": "7385:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7385:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7378:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7037:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7171:3:10",
														"nodeType": "YulTypedName",
														"src": "7171:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7179:3:10",
														"nodeType": "YulTypedName",
														"src": "7179:3:10",
														"type": ""
													}
												],
												"src": "7037:366:10"
											},
											{
												"body": {
													"nativeSrc": "7580:248:10",
													"nodeType": "YulBlock",
													"src": "7580:248:10",
													"statements": [
														{
															"nativeSrc": "7590:26:10",
															"nodeType": "YulAssignment",
															"src": "7590:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7602:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7602:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7613:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7613:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7598:3:10"
																},
																"nativeSrc": "7598:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7598:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7590:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7637:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7648:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7648:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7633:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:10"
																		},
																		"nativeSrc": "7633:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7656:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7656:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7662:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7662:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:10"
																		},
																		"nativeSrc": "7652:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7626:6:10"
																},
																"nativeSrc": "7626:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7626:47:10"
															},
															"nativeSrc": "7626:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7626:47:10"
														},
														{
															"nativeSrc": "7682:139:10",
															"nodeType": "YulAssignment",
															"src": "7682:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7816:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7816:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7690:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7690:124:10"
																},
																"nativeSrc": "7690:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7690:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7682:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7682:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7409:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7560:9:10",
														"nodeType": "YulTypedName",
														"src": "7560:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7575:4:10",
														"nodeType": "YulTypedName",
														"src": "7575:4:10",
														"type": ""
													}
												],
												"src": "7409:419:10"
											},
											{
												"body": {
													"nativeSrc": "7897:80:10",
													"nodeType": "YulBlock",
													"src": "7897:80:10",
													"statements": [
														{
															"nativeSrc": "7907:22:10",
															"nodeType": "YulAssignment",
															"src": "7907:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7922:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7922:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7916:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7916:5:10"
																},
																"nativeSrc": "7916:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7916:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7907:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7907:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7965:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7965:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7938:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "7938:26:10"
																},
																"nativeSrc": "7938:33:10",
																"nodeType": "YulFunctionCall",
																"src": "7938:33:10"
															},
															"nativeSrc": "7938:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "7938:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7834:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7875:6:10",
														"nodeType": "YulTypedName",
														"src": "7875:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7883:3:10",
														"nodeType": "YulTypedName",
														"src": "7883:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7891:5:10",
														"nodeType": "YulTypedName",
														"src": "7891:5:10",
														"type": ""
													}
												],
												"src": "7834:143:10"
											},
											{
												"body": {
													"nativeSrc": "8060:274:10",
													"nodeType": "YulBlock",
													"src": "8060:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8106:83:10",
																"nodeType": "YulBlock",
																"src": "8106:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8108:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8108:77:10"
																			},
																			"nativeSrc": "8108:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8108:79:10"
																		},
																		"nativeSrc": "8108:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8108:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8081:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8081:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8090:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8090:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8077:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8077:3:10"
																		},
																		"nativeSrc": "8077:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8077:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8102:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8102:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8073:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:10"
																},
																"nativeSrc": "8073:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8073:32:10"
															},
															"nativeSrc": "8070:119:10",
															"nodeType": "YulIf",
															"src": "8070:119:10"
														},
														{
															"nativeSrc": "8199:128:10",
															"nodeType": "YulBlock",
															"src": "8199:128:10",
															"statements": [
																{
																	"nativeSrc": "8214:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8214:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8228:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8218:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8218:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8243:74:10",
																	"nodeType": "YulAssignment",
																	"src": "8243:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8289:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8289:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8300:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8300:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8285:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8285:3:10"
																				},
																				"nativeSrc": "8285:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8285:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8309:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8309:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8253:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "8253:31:10"
																		},
																		"nativeSrc": "8253:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8253:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8243:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8243:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7983:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8030:9:10",
														"nodeType": "YulTypedName",
														"src": "8030:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8041:7:10",
														"nodeType": "YulTypedName",
														"src": "8041:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8053:6:10",
														"nodeType": "YulTypedName",
														"src": "8053:6:10",
														"type": ""
													}
												],
												"src": "7983:351:10"
											},
											{
												"body": {
													"nativeSrc": "8446:65:10",
													"nodeType": "YulBlock",
													"src": "8446:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8468:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8468:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8476:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8476:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8464:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:10"
																		},
																		"nativeSrc": "8464:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8464:14:10"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "8480:23:10",
																		"nodeType": "YulLiteral",
																		"src": "8480:23:10",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:10"
																},
																"nativeSrc": "8457:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8457:47:10"
															},
															"nativeSrc": "8457:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8457:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "8340:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8438:6:10",
														"nodeType": "YulTypedName",
														"src": "8438:6:10",
														"type": ""
													}
												],
												"src": "8340:171:10"
											},
											{
												"body": {
													"nativeSrc": "8663:220:10",
													"nodeType": "YulBlock",
													"src": "8663:220:10",
													"statements": [
														{
															"nativeSrc": "8673:74:10",
															"nodeType": "YulAssignment",
															"src": "8673:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8739:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8739:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8744:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8744:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8680:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8680:58:10"
																},
																"nativeSrc": "8680:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8680:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8673:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8673:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8845:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8845:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "8756:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8756:88:10"
																},
																"nativeSrc": "8756:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8756:93:10"
															},
															"nativeSrc": "8756:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8756:93:10"
														},
														{
															"nativeSrc": "8858:19:10",
															"nodeType": "YulAssignment",
															"src": "8858:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8869:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8869:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8874:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8874:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8865:3:10"
																},
																"nativeSrc": "8865:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8865:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8858:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8517:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8651:3:10",
														"nodeType": "YulTypedName",
														"src": "8651:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8659:3:10",
														"nodeType": "YulTypedName",
														"src": "8659:3:10",
														"type": ""
													}
												],
												"src": "8517:366:10"
											},
											{
												"body": {
													"nativeSrc": "9060:248:10",
													"nodeType": "YulBlock",
													"src": "9060:248:10",
													"statements": [
														{
															"nativeSrc": "9070:26:10",
															"nodeType": "YulAssignment",
															"src": "9070:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9082:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9082:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9093:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9078:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9078:3:10"
																},
																"nativeSrc": "9078:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9078:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9070:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9070:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9117:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9128:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9128:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:10"
																		},
																		"nativeSrc": "9113:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9113:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9136:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9136:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9142:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:10"
																		},
																		"nativeSrc": "9132:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9132:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9106:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:10"
																},
																"nativeSrc": "9106:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9106:47:10"
															},
															"nativeSrc": "9106:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9106:47:10"
														},
														{
															"nativeSrc": "9162:139:10",
															"nodeType": "YulAssignment",
															"src": "9162:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9296:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9296:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9170:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9170:124:10"
																},
																"nativeSrc": "9170:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9170:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9162:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8889:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9040:9:10",
														"nodeType": "YulTypedName",
														"src": "9040:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9055:4:10",
														"nodeType": "YulTypedName",
														"src": "9055:4:10",
														"type": ""
													}
												],
												"src": "8889:419:10"
											},
											{
												"body": {
													"nativeSrc": "9420:61:10",
													"nodeType": "YulBlock",
													"src": "9420:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9442:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9442:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9450:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9450:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9438:3:10"
																		},
																		"nativeSrc": "9438:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9438:14:10"
																	},
																	{
																		"hexValue": "4e6f7420456e6f75676820537570706c79",
																		"kind": "string",
																		"nativeSrc": "9454:19:10",
																		"nodeType": "YulLiteral",
																		"src": "9454:19:10",
																		"type": "",
																		"value": "Not Enough Supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9431:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:10"
																},
																"nativeSrc": "9431:43:10",
																"nodeType": "YulFunctionCall",
																"src": "9431:43:10"
															},
															"nativeSrc": "9431:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "9431:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249",
												"nativeSrc": "9314:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9412:6:10",
														"nodeType": "YulTypedName",
														"src": "9412:6:10",
														"type": ""
													}
												],
												"src": "9314:167:10"
											},
											{
												"body": {
													"nativeSrc": "9633:220:10",
													"nodeType": "YulBlock",
													"src": "9633:220:10",
													"statements": [
														{
															"nativeSrc": "9643:74:10",
															"nodeType": "YulAssignment",
															"src": "9643:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9709:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9709:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9714:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9650:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9650:58:10"
																},
																"nativeSrc": "9650:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9650:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9815:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9815:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249",
																	"nativeSrc": "9726:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9726:88:10"
																},
																"nativeSrc": "9726:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9726:93:10"
															},
															"nativeSrc": "9726:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9726:93:10"
														},
														{
															"nativeSrc": "9828:19:10",
															"nodeType": "YulAssignment",
															"src": "9828:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9839:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9839:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9844:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9844:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9835:3:10"
																},
																"nativeSrc": "9835:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9835:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9828:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9828:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9487:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9621:3:10",
														"nodeType": "YulTypedName",
														"src": "9621:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9629:3:10",
														"nodeType": "YulTypedName",
														"src": "9629:3:10",
														"type": ""
													}
												],
												"src": "9487:366:10"
											},
											{
												"body": {
													"nativeSrc": "10030:248:10",
													"nodeType": "YulBlock",
													"src": "10030:248:10",
													"statements": [
														{
															"nativeSrc": "10040:26:10",
															"nodeType": "YulAssignment",
															"src": "10040:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10052:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10052:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10063:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10063:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:10"
																},
																"nativeSrc": "10048:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10048:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10040:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10040:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10087:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10098:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10098:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10083:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:10"
																		},
																		"nativeSrc": "10083:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10083:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10106:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10106:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10112:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10112:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10102:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:10"
																		},
																		"nativeSrc": "10102:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10076:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:10"
																},
																"nativeSrc": "10076:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10076:47:10"
															},
															"nativeSrc": "10076:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10076:47:10"
														},
														{
															"nativeSrc": "10132:139:10",
															"nodeType": "YulAssignment",
															"src": "10132:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10266:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10266:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10140:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10140:124:10"
																},
																"nativeSrc": "10140:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10140:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10132:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10132:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9859:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10010:9:10",
														"nodeType": "YulTypedName",
														"src": "10010:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10025:4:10",
														"nodeType": "YulTypedName",
														"src": "10025:4:10",
														"type": ""
													}
												],
												"src": "9859:419:10"
											},
											{
												"body": {
													"nativeSrc": "10410:206:10",
													"nodeType": "YulBlock",
													"src": "10410:206:10",
													"statements": [
														{
															"nativeSrc": "10420:26:10",
															"nodeType": "YulAssignment",
															"src": "10420:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10432:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10432:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10443:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10443:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10428:3:10"
																},
																"nativeSrc": "10428:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10428:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10420:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10500:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10500:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10509:3:10"
																		},
																		"nativeSrc": "10509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10509:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10456:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10456:43:10"
																},
																"nativeSrc": "10456:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10456:71:10"
															},
															"nativeSrc": "10456:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10456:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10581:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10581:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10594:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10594:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10605:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10605:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10590:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10590:3:10"
																		},
																		"nativeSrc": "10590:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10590:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10537:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10537:43:10"
																},
																"nativeSrc": "10537:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10537:72:10"
															},
															"nativeSrc": "10537:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10537:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10284:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10374:9:10",
														"nodeType": "YulTypedName",
														"src": "10374:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10386:6:10",
														"nodeType": "YulTypedName",
														"src": "10386:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10394:6:10",
														"nodeType": "YulTypedName",
														"src": "10394:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10405:4:10",
														"nodeType": "YulTypedName",
														"src": "10405:4:10",
														"type": ""
													}
												],
												"src": "10284:332:10"
											},
											{
												"body": {
													"nativeSrc": "10662:76:10",
													"nodeType": "YulBlock",
													"src": "10662:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10716:16:10",
																"nodeType": "YulBlock",
																"src": "10716:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10725:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10725:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10728:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10728:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10718:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10718:6:10"
																			},
																			"nativeSrc": "10718:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10718:12:10"
																		},
																		"nativeSrc": "10718:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10718:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10685:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10685:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10707:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10707:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10692:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "10692:14:10"
																				},
																				"nativeSrc": "10692:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10692:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10682:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10682:2:10"
																		},
																		"nativeSrc": "10682:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10682:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10675:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10675:6:10"
																},
																"nativeSrc": "10675:40:10",
																"nodeType": "YulFunctionCall",
																"src": "10675:40:10"
															},
															"nativeSrc": "10672:60:10",
															"nodeType": "YulIf",
															"src": "10672:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10622:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10655:5:10",
														"nodeType": "YulTypedName",
														"src": "10655:5:10",
														"type": ""
													}
												],
												"src": "10622:116:10"
											},
											{
												"body": {
													"nativeSrc": "10804:77:10",
													"nodeType": "YulBlock",
													"src": "10804:77:10",
													"statements": [
														{
															"nativeSrc": "10814:22:10",
															"nodeType": "YulAssignment",
															"src": "10814:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10829:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10829:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10823:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10823:5:10"
																},
																"nativeSrc": "10823:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10823:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10814:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10814:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10869:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10869:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10845:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "10845:23:10"
																},
																"nativeSrc": "10845:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10845:30:10"
															},
															"nativeSrc": "10845:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10845:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10744:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10782:6:10",
														"nodeType": "YulTypedName",
														"src": "10782:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10790:3:10",
														"nodeType": "YulTypedName",
														"src": "10790:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10798:5:10",
														"nodeType": "YulTypedName",
														"src": "10798:5:10",
														"type": ""
													}
												],
												"src": "10744:137:10"
											},
											{
												"body": {
													"nativeSrc": "10961:271:10",
													"nodeType": "YulBlock",
													"src": "10961:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11007:83:10",
																"nodeType": "YulBlock",
																"src": "11007:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11009:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11009:77:10"
																			},
																			"nativeSrc": "11009:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11009:79:10"
																		},
																		"nativeSrc": "11009:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11009:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10982:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10982:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10991:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10978:3:10"
																		},
																		"nativeSrc": "10978:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10978:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11003:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11003:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10974:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10974:3:10"
																},
																"nativeSrc": "10974:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10974:32:10"
															},
															"nativeSrc": "10971:119:10",
															"nodeType": "YulIf",
															"src": "10971:119:10"
														},
														{
															"nativeSrc": "11100:125:10",
															"nodeType": "YulBlock",
															"src": "11100:125:10",
															"statements": [
																{
																	"nativeSrc": "11115:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11115:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11129:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11129:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11119:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11119:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11144:71:10",
																	"nodeType": "YulAssignment",
																	"src": "11144:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11187:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11187:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11198:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11198:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11183:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11183:3:10"
																				},
																				"nativeSrc": "11183:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11183:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11207:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11207:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11154:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "11154:28:10"
																		},
																		"nativeSrc": "11154:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11154:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11144:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11144:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10887:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10931:9:10",
														"nodeType": "YulTypedName",
														"src": "10931:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10942:7:10",
														"nodeType": "YulTypedName",
														"src": "10942:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10954:6:10",
														"nodeType": "YulTypedName",
														"src": "10954:6:10",
														"type": ""
													}
												],
												"src": "10887:345:10"
											},
											{
												"body": {
													"nativeSrc": "11344:76:10",
													"nodeType": "YulBlock",
													"src": "11344:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11366:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11366:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11374:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11374:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11362:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:10"
																		},
																		"nativeSrc": "11362:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11362:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "11378:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11378:34:10",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11355:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:10"
																},
																"nativeSrc": "11355:58:10",
																"nodeType": "YulFunctionCall",
																"src": "11355:58:10"
															},
															"nativeSrc": "11355:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "11355:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "11238:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11336:6:10",
														"nodeType": "YulTypedName",
														"src": "11336:6:10",
														"type": ""
													}
												],
												"src": "11238:182:10"
											},
											{
												"body": {
													"nativeSrc": "11572:220:10",
													"nodeType": "YulBlock",
													"src": "11572:220:10",
													"statements": [
														{
															"nativeSrc": "11582:74:10",
															"nodeType": "YulAssignment",
															"src": "11582:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11648:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11648:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11653:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11589:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11589:58:10"
																},
																"nativeSrc": "11589:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11589:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11582:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11754:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "11665:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11665:88:10"
																},
																"nativeSrc": "11665:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11665:93:10"
															},
															"nativeSrc": "11665:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11665:93:10"
														},
														{
															"nativeSrc": "11767:19:10",
															"nodeType": "YulAssignment",
															"src": "11767:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11778:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11778:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11783:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11783:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11774:3:10"
																},
																"nativeSrc": "11774:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11774:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11767:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11426:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11560:3:10",
														"nodeType": "YulTypedName",
														"src": "11560:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11568:3:10",
														"nodeType": "YulTypedName",
														"src": "11568:3:10",
														"type": ""
													}
												],
												"src": "11426:366:10"
											},
											{
												"body": {
													"nativeSrc": "11969:248:10",
													"nodeType": "YulBlock",
													"src": "11969:248:10",
													"statements": [
														{
															"nativeSrc": "11979:26:10",
															"nodeType": "YulAssignment",
															"src": "11979:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11987:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11987:3:10"
																},
																"nativeSrc": "11987:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11987:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11979:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11979:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12026:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12026:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12037:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12037:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12022:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12022:3:10"
																		},
																		"nativeSrc": "12022:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12022:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12045:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12045:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12051:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12051:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12041:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:10"
																		},
																		"nativeSrc": "12041:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12041:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12015:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12015:6:10"
																},
																"nativeSrc": "12015:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12015:47:10"
															},
															"nativeSrc": "12015:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12015:47:10"
														},
														{
															"nativeSrc": "12071:139:10",
															"nodeType": "YulAssignment",
															"src": "12071:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12205:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12205:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12079:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12079:124:10"
																},
																"nativeSrc": "12079:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12079:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12071:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12071:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11798:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11949:9:10",
														"nodeType": "YulTypedName",
														"src": "11949:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11964:4:10",
														"nodeType": "YulTypedName",
														"src": "11964:4:10",
														"type": ""
													}
												],
												"src": "11798:419:10"
											},
											{
												"body": {
													"nativeSrc": "12251:152:10",
													"nodeType": "YulBlock",
													"src": "12251:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12268:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12268:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12271:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12271:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12261:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12261:6:10"
																},
																"nativeSrc": "12261:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12261:88:10"
															},
															"nativeSrc": "12261:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12261:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12365:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12368:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12368:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12358:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:10"
																},
																"nativeSrc": "12358:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12358:15:10"
															},
															"nativeSrc": "12358:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12358:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12389:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12389:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12392:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12392:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12382:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:10"
																},
																"nativeSrc": "12382:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12382:15:10"
															},
															"nativeSrc": "12382:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12382:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "12223:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12223:180:10"
											},
											{
												"body": {
													"nativeSrc": "12462:32:10",
													"nodeType": "YulBlock",
													"src": "12462:32:10",
													"statements": [
														{
															"nativeSrc": "12472:16:10",
															"nodeType": "YulAssignment",
															"src": "12472:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "12483:5:10",
																"nodeType": "YulIdentifier",
																"src": "12483:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12472:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "12472:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "12409:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12444:5:10",
														"nodeType": "YulTypedName",
														"src": "12444:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12454:7:10",
														"nodeType": "YulTypedName",
														"src": "12454:7:10",
														"type": ""
													}
												],
												"src": "12409:85:10"
											},
											{
												"body": {
													"nativeSrc": "12532:28:10",
													"nodeType": "YulBlock",
													"src": "12532:28:10",
													"statements": [
														{
															"nativeSrc": "12542:12:10",
															"nodeType": "YulAssignment",
															"src": "12542:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "12549:5:10",
																"nodeType": "YulIdentifier",
																"src": "12549:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12542:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12500:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12518:5:10",
														"nodeType": "YulTypedName",
														"src": "12518:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12528:3:10",
														"nodeType": "YulTypedName",
														"src": "12528:3:10",
														"type": ""
													}
												],
												"src": "12500:60:10"
											},
											{
												"body": {
													"nativeSrc": "12632:88:10",
													"nodeType": "YulBlock",
													"src": "12632:88:10",
													"statements": [
														{
															"nativeSrc": "12642:72:10",
															"nodeType": "YulAssignment",
															"src": "12642:72:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12706:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12706:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "12680:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "12680:25:10"
																				},
																				"nativeSrc": "12680:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12680:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12671:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "12671:8:10"
																		},
																		"nativeSrc": "12671:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12671:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12655:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "12655:15:10"
																},
																"nativeSrc": "12655:59:10",
																"nodeType": "YulFunctionCall",
																"src": "12655:59:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12642:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "12642:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint8",
												"nativeSrc": "12566:154:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12612:5:10",
														"nodeType": "YulTypedName",
														"src": "12612:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12622:9:10",
														"nodeType": "YulTypedName",
														"src": "12622:9:10",
														"type": ""
													}
												],
												"src": "12566:154:10"
											},
											{
												"body": {
													"nativeSrc": "12797:72:10",
													"nodeType": "YulBlock",
													"src": "12797:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12814:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12814:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12856:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12856:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint8",
																			"nativeSrc": "12819:36:10",
																			"nodeType": "YulIdentifier",
																			"src": "12819:36:10"
																		},
																		"nativeSrc": "12819:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12819:43:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12807:6:10"
																},
																"nativeSrc": "12807:56:10",
																"nodeType": "YulFunctionCall",
																"src": "12807:56:10"
															},
															"nativeSrc": "12807:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "12807:56:10"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint8_fromStack",
												"nativeSrc": "12726:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12785:5:10",
														"nodeType": "YulTypedName",
														"src": "12785:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12792:3:10",
														"nodeType": "YulTypedName",
														"src": "12792:3:10",
														"type": ""
													}
												],
												"src": "12726:143:10"
											},
											{
												"body": {
													"nativeSrc": "12933:40:10",
													"nodeType": "YulBlock",
													"src": "12933:40:10",
													"statements": [
														{
															"nativeSrc": "12944:22:10",
															"nodeType": "YulAssignment",
															"src": "12944:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12960:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12960:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12954:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12954:5:10"
																},
																"nativeSrc": "12954:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12954:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12875:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12916:5:10",
														"nodeType": "YulTypedName",
														"src": "12916:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12926:6:10",
														"nodeType": "YulTypedName",
														"src": "12926:6:10",
														"type": ""
													}
												],
												"src": "12875:98:10"
											},
											{
												"body": {
													"nativeSrc": "13074:73:10",
													"nodeType": "YulBlock",
													"src": "13074:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13091:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13091:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13096:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13096:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13084:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:10"
																},
																"nativeSrc": "13084:19:10",
																"nodeType": "YulFunctionCall",
																"src": "13084:19:10"
															},
															"nativeSrc": "13084:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "13084:19:10"
														},
														{
															"nativeSrc": "13112:29:10",
															"nodeType": "YulAssignment",
															"src": "13112:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13131:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13131:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13136:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13136:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:10"
																},
																"nativeSrc": "13127:14:10",
																"nodeType": "YulFunctionCall",
																"src": "13127:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13112:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "13112:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12979:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13046:3:10",
														"nodeType": "YulTypedName",
														"src": "13046:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13051:6:10",
														"nodeType": "YulTypedName",
														"src": "13051:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13062:11:10",
														"nodeType": "YulTypedName",
														"src": "13062:11:10",
														"type": ""
													}
												],
												"src": "12979:168:10"
											},
											{
												"body": {
													"nativeSrc": "13243:283:10",
													"nodeType": "YulBlock",
													"src": "13243:283:10",
													"statements": [
														{
															"nativeSrc": "13253:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13253:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13299:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13299:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13267:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "13267:31:10"
																},
																"nativeSrc": "13267:38:10",
																"nodeType": "YulFunctionCall",
																"src": "13267:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13257:6:10",
																	"nodeType": "YulTypedName",
																	"src": "13257:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13314:77:10",
															"nodeType": "YulAssignment",
															"src": "13314:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13379:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13379:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13384:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13384:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13321:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "13321:57:10"
																},
																"nativeSrc": "13321:70:10",
																"nodeType": "YulFunctionCall",
																"src": "13321:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13439:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13439:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13446:4:10",
																				"nodeType": "YulLiteral",
																				"src": "13446:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13435:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:10"
																		},
																		"nativeSrc": "13435:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13435:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13453:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13453:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13458:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13458:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13400:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "13400:34:10"
																},
																"nativeSrc": "13400:65:10",
																"nodeType": "YulFunctionCall",
																"src": "13400:65:10"
															},
															"nativeSrc": "13400:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "13400:65:10"
														},
														{
															"nativeSrc": "13474:46:10",
															"nodeType": "YulAssignment",
															"src": "13474:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13485:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13485:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13512:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13512:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "13490:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "13490:21:10"
																		},
																		"nativeSrc": "13490:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13490:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13481:3:10"
																},
																"nativeSrc": "13481:39:10",
																"nodeType": "YulFunctionCall",
																"src": "13481:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13474:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "13153:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13224:5:10",
														"nodeType": "YulTypedName",
														"src": "13224:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13231:3:10",
														"nodeType": "YulTypedName",
														"src": "13231:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13239:3:10",
														"nodeType": "YulTypedName",
														"src": "13239:3:10",
														"type": ""
													}
												],
												"src": "13153:373:10"
											},
											{
												"body": {
													"nativeSrc": "13766:529:10",
													"nodeType": "YulBlock",
													"src": "13766:529:10",
													"statements": [
														{
															"nativeSrc": "13776:27:10",
															"nodeType": "YulAssignment",
															"src": "13776:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13788:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13788:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13799:3:10",
																		"nodeType": "YulLiteral",
																		"src": "13799:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13784:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13784:3:10"
																},
																"nativeSrc": "13784:19:10",
																"nodeType": "YulFunctionCall",
																"src": "13784:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13776:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13776:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13857:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13857:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13870:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13881:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13881:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13866:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13866:3:10"
																		},
																		"nativeSrc": "13866:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13866:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13813:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13813:43:10"
																},
																"nativeSrc": "13813:71:10",
																"nodeType": "YulFunctionCall",
																"src": "13813:71:10"
															},
															"nativeSrc": "13813:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "13813:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13932:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13932:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13945:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13945:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13956:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13956:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13941:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13941:3:10"
																		},
																		"nativeSrc": "13941:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13941:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "13894:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "13894:37:10"
																},
																"nativeSrc": "13894:66:10",
																"nodeType": "YulFunctionCall",
																"src": "13894:66:10"
															},
															"nativeSrc": "13894:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "13894:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14020:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14020:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14033:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14033:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14044:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14044:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14029:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14029:3:10"
																		},
																		"nativeSrc": "14029:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14029:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "13970:49:10",
																	"nodeType": "YulIdentifier",
																	"src": "13970:49:10"
																},
																"nativeSrc": "13970:78:10",
																"nodeType": "YulFunctionCall",
																"src": "13970:78:10"
															},
															"nativeSrc": "13970:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "13970:78:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14108:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14108:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14132:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14132:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14117:3:10"
																		},
																		"nativeSrc": "14117:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14117:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "14058:49:10",
																	"nodeType": "YulIdentifier",
																	"src": "14058:49:10"
																},
																"nativeSrc": "14058:78:10",
																"nodeType": "YulFunctionCall",
																"src": "14058:78:10"
															},
															"nativeSrc": "14058:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "14058:78:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14157:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14168:3:10",
																				"nodeType": "YulLiteral",
																				"src": "14168:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:10"
																		},
																		"nativeSrc": "14153:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14178:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14178:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14184:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14184:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14174:3:10"
																		},
																		"nativeSrc": "14174:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14174:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14146:6:10"
																},
																"nativeSrc": "14146:49:10",
																"nodeType": "YulFunctionCall",
																"src": "14146:49:10"
															},
															"nativeSrc": "14146:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "14146:49:10"
														},
														{
															"nativeSrc": "14204:84:10",
															"nodeType": "YulAssignment",
															"src": "14204:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14274:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14274:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14283:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14283:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "14212:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "14212:61:10"
																},
																"nativeSrc": "14212:76:10",
																"nodeType": "YulFunctionCall",
																"src": "14212:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14204:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14204:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_rational_0_by_1_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_bool_t_uint8_t_uint8_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13532:763:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13706:9:10",
														"nodeType": "YulTypedName",
														"src": "13706:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13718:6:10",
														"nodeType": "YulTypedName",
														"src": "13718:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13726:6:10",
														"nodeType": "YulTypedName",
														"src": "13726:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13734:6:10",
														"nodeType": "YulTypedName",
														"src": "13734:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13742:6:10",
														"nodeType": "YulTypedName",
														"src": "13742:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13750:6:10",
														"nodeType": "YulTypedName",
														"src": "13750:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13761:4:10",
														"nodeType": "YulTypedName",
														"src": "13761:4:10",
														"type": ""
													}
												],
												"src": "13532:763:10"
											},
											{
												"body": {
													"nativeSrc": "14414:34:10",
													"nodeType": "YulBlock",
													"src": "14414:34:10",
													"statements": [
														{
															"nativeSrc": "14424:18:10",
															"nodeType": "YulAssignment",
															"src": "14424:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "14439:3:10",
																"nodeType": "YulIdentifier",
																"src": "14439:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14424:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "14424:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14301:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14386:3:10",
														"nodeType": "YulTypedName",
														"src": "14386:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14391:6:10",
														"nodeType": "YulTypedName",
														"src": "14391:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14402:11:10",
														"nodeType": "YulTypedName",
														"src": "14402:11:10",
														"type": ""
													}
												],
												"src": "14301:147:10"
											},
											{
												"body": {
													"nativeSrc": "14562:278:10",
													"nodeType": "YulBlock",
													"src": "14562:278:10",
													"statements": [
														{
															"nativeSrc": "14572:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14572:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14618:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14618:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "14586:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "14586:31:10"
																},
																"nativeSrc": "14586:38:10",
																"nodeType": "YulFunctionCall",
																"src": "14586:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14576:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14576:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14633:95:10",
															"nodeType": "YulAssignment",
															"src": "14633:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14716:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14716:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14721:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14721:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14640:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "14640:75:10"
																},
																"nativeSrc": "14640:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14640:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14633:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14776:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14776:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14783:4:10",
																				"nodeType": "YulLiteral",
																				"src": "14783:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14772:3:10"
																		},
																		"nativeSrc": "14772:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14772:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14790:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14790:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14795:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14795:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14737:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "14737:34:10"
																},
																"nativeSrc": "14737:65:10",
																"nodeType": "YulFunctionCall",
																"src": "14737:65:10"
															},
															"nativeSrc": "14737:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "14737:65:10"
														},
														{
															"nativeSrc": "14811:23:10",
															"nodeType": "YulAssignment",
															"src": "14811:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14822:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14822:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14827:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14818:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14818:3:10"
																},
																"nativeSrc": "14818:16:10",
																"nodeType": "YulFunctionCall",
																"src": "14818:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14454:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14543:5:10",
														"nodeType": "YulTypedName",
														"src": "14543:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14550:3:10",
														"nodeType": "YulTypedName",
														"src": "14550:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14558:3:10",
														"nodeType": "YulTypedName",
														"src": "14558:3:10",
														"type": ""
													}
												],
												"src": "14454:386:10"
											},
											{
												"body": {
													"nativeSrc": "14980:137:10",
													"nodeType": "YulBlock",
													"src": "14980:137:10",
													"statements": [
														{
															"nativeSrc": "14991:100:10",
															"nodeType": "YulAssignment",
															"src": "14991:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15078:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15078:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15087:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15087:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14998:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "14998:79:10"
																},
																"nativeSrc": "14998:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14998:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14991:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14991:3:10"
																}
															]
														},
														{
															"nativeSrc": "15101:10:10",
															"nodeType": "YulAssignment",
															"src": "15101:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "15108:3:10",
																"nodeType": "YulIdentifier",
																"src": "15108:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15101:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15101:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14846:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14959:3:10",
														"nodeType": "YulTypedName",
														"src": "14959:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14965:6:10",
														"nodeType": "YulTypedName",
														"src": "14965:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14976:3:10",
														"nodeType": "YulTypedName",
														"src": "14976:3:10",
														"type": ""
													}
												],
												"src": "14846:271:10"
											},
											{
												"body": {
													"nativeSrc": "15229:58:10",
													"nodeType": "YulBlock",
													"src": "15229:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15251:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15251:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15259:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15259:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15247:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15247:3:10"
																		},
																		"nativeSrc": "15247:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15247:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f204d696e74",
																		"kind": "string",
																		"nativeSrc": "15263:16:10",
																		"nodeType": "YulLiteral",
																		"src": "15263:16:10",
																		"type": "",
																		"value": "Failed to Mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15240:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15240:6:10"
																},
																"nativeSrc": "15240:40:10",
																"nodeType": "YulFunctionCall",
																"src": "15240:40:10"
															},
															"nativeSrc": "15240:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "15240:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
												"nativeSrc": "15123:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15221:6:10",
														"nodeType": "YulTypedName",
														"src": "15221:6:10",
														"type": ""
													}
												],
												"src": "15123:164:10"
											},
											{
												"body": {
													"nativeSrc": "15439:220:10",
													"nodeType": "YulBlock",
													"src": "15439:220:10",
													"statements": [
														{
															"nativeSrc": "15449:74:10",
															"nodeType": "YulAssignment",
															"src": "15449:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15515:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15515:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15520:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15456:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15456:58:10"
																},
																"nativeSrc": "15456:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15456:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15449:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15449:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15621:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15621:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
																	"nativeSrc": "15532:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15532:88:10"
																},
																"nativeSrc": "15532:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15532:93:10"
															},
															"nativeSrc": "15532:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15532:93:10"
														},
														{
															"nativeSrc": "15634:19:10",
															"nodeType": "YulAssignment",
															"src": "15634:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15645:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15645:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15650:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15650:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15641:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15641:3:10"
																},
																"nativeSrc": "15641:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15641:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15634:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15634:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15293:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15427:3:10",
														"nodeType": "YulTypedName",
														"src": "15427:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15435:3:10",
														"nodeType": "YulTypedName",
														"src": "15435:3:10",
														"type": ""
													}
												],
												"src": "15293:366:10"
											},
											{
												"body": {
													"nativeSrc": "15836:248:10",
													"nodeType": "YulBlock",
													"src": "15836:248:10",
													"statements": [
														{
															"nativeSrc": "15846:26:10",
															"nodeType": "YulAssignment",
															"src": "15846:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15858:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15858:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15869:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15869:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15854:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15854:3:10"
																},
																"nativeSrc": "15854:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15854:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15846:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15846:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15893:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15893:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15904:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15904:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15889:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15889:3:10"
																		},
																		"nativeSrc": "15889:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15889:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15912:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15912:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15918:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15918:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15908:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15908:3:10"
																		},
																		"nativeSrc": "15908:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15908:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15882:6:10"
																},
																"nativeSrc": "15882:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15882:47:10"
															},
															"nativeSrc": "15882:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15882:47:10"
														},
														{
															"nativeSrc": "15938:139:10",
															"nodeType": "YulAssignment",
															"src": "15938:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16072:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16072:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15946:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15946:124:10"
																},
																"nativeSrc": "15946:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15946:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15938:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15938:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15665:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15816:9:10",
														"nodeType": "YulTypedName",
														"src": "15816:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15831:4:10",
														"nodeType": "YulTypedName",
														"src": "15831:4:10",
														"type": ""
													}
												],
												"src": "15665:419:10"
											},
											{
												"body": {
													"nativeSrc": "16118:152:10",
													"nodeType": "YulBlock",
													"src": "16118:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16135:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16135:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16138:77:10",
																		"nodeType": "YulLiteral",
																		"src": "16138:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16128:6:10"
																},
																"nativeSrc": "16128:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16128:88:10"
															},
															"nativeSrc": "16128:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16128:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16232:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16232:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16235:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16235:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16225:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16225:6:10"
																},
																"nativeSrc": "16225:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16225:15:10"
															},
															"nativeSrc": "16225:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16225:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16256:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16256:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16259:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16259:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16249:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16249:6:10"
																},
																"nativeSrc": "16249:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16249:15:10"
															},
															"nativeSrc": "16249:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16249:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16090:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16090:180:10"
											},
											{
												"body": {
													"nativeSrc": "16320:147:10",
													"nodeType": "YulBlock",
													"src": "16320:147:10",
													"statements": [
														{
															"nativeSrc": "16330:25:10",
															"nodeType": "YulAssignment",
															"src": "16330:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16353:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16353:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16335:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16335:17:10"
																},
																"nativeSrc": "16335:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16335:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16330:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16330:1:10"
																}
															]
														},
														{
															"nativeSrc": "16364:25:10",
															"nodeType": "YulAssignment",
															"src": "16364:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16387:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16387:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16369:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16369:17:10"
																},
																"nativeSrc": "16369:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16369:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16364:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16364:1:10"
																}
															]
														},
														{
															"nativeSrc": "16398:16:10",
															"nodeType": "YulAssignment",
															"src": "16398:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16409:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16409:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16412:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16412:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16405:3:10"
																},
																"nativeSrc": "16405:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16405:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16398:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16438:22:10",
																"nodeType": "YulBlock",
																"src": "16438:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16440:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16440:16:10"
																			},
																			"nativeSrc": "16440:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16440:18:10"
																		},
																		"nativeSrc": "16440:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16440:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16430:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16430:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16433:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16433:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16427:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16427:2:10"
																},
																"nativeSrc": "16427:10:10",
																"nodeType": "YulFunctionCall",
																"src": "16427:10:10"
															},
															"nativeSrc": "16424:36:10",
															"nodeType": "YulIf",
															"src": "16424:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16276:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16307:1:10",
														"nodeType": "YulTypedName",
														"src": "16307:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16310:1:10",
														"nodeType": "YulTypedName",
														"src": "16310:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16316:3:10",
														"nodeType": "YulTypedName",
														"src": "16316:3:10",
														"type": ""
													}
												],
												"src": "16276:191:10"
											},
											{
												"body": {
													"nativeSrc": "16579:64:10",
													"nodeType": "YulBlock",
													"src": "16579:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16601:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16601:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16609:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16609:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16597:3:10"
																		},
																		"nativeSrc": "16597:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16597:14:10"
																	},
																	{
																		"hexValue": "4578636565647320746f74616c20737570706c79",
																		"kind": "string",
																		"nativeSrc": "16613:22:10",
																		"nodeType": "YulLiteral",
																		"src": "16613:22:10",
																		"type": "",
																		"value": "Exceeds total supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16590:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16590:6:10"
																},
																"nativeSrc": "16590:46:10",
																"nodeType": "YulFunctionCall",
																"src": "16590:46:10"
															},
															"nativeSrc": "16590:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "16590:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c",
												"nativeSrc": "16473:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16571:6:10",
														"nodeType": "YulTypedName",
														"src": "16571:6:10",
														"type": ""
													}
												],
												"src": "16473:170:10"
											},
											{
												"body": {
													"nativeSrc": "16795:220:10",
													"nodeType": "YulBlock",
													"src": "16795:220:10",
													"statements": [
														{
															"nativeSrc": "16805:74:10",
															"nodeType": "YulAssignment",
															"src": "16805:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16871:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16871:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16876:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16812:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16812:58:10"
																},
																"nativeSrc": "16812:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16812:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16805:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16805:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16977:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c",
																	"nativeSrc": "16888:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16888:88:10"
																},
																"nativeSrc": "16888:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16888:93:10"
															},
															"nativeSrc": "16888:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16888:93:10"
														},
														{
															"nativeSrc": "16990:19:10",
															"nodeType": "YulAssignment",
															"src": "16990:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17001:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17006:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16997:3:10"
																},
																"nativeSrc": "16997:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16997:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16649:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16783:3:10",
														"nodeType": "YulTypedName",
														"src": "16783:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16791:3:10",
														"nodeType": "YulTypedName",
														"src": "16791:3:10",
														"type": ""
													}
												],
												"src": "16649:366:10"
											},
											{
												"body": {
													"nativeSrc": "17192:248:10",
													"nodeType": "YulBlock",
													"src": "17192:248:10",
													"statements": [
														{
															"nativeSrc": "17202:26:10",
															"nodeType": "YulAssignment",
															"src": "17202:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17214:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17214:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17225:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17225:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17210:3:10"
																},
																"nativeSrc": "17210:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17210:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17202:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17202:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17249:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17249:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17260:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17260:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17245:3:10"
																		},
																		"nativeSrc": "17245:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17245:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17268:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17268:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17274:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17274:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17264:3:10"
																		},
																		"nativeSrc": "17264:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17264:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17238:6:10"
																},
																"nativeSrc": "17238:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17238:47:10"
															},
															"nativeSrc": "17238:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17238:47:10"
														},
														{
															"nativeSrc": "17294:139:10",
															"nodeType": "YulAssignment",
															"src": "17294:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17428:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17428:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17302:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17302:124:10"
																},
																"nativeSrc": "17302:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17302:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17294:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17021:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17172:9:10",
														"nodeType": "YulTypedName",
														"src": "17172:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17187:4:10",
														"nodeType": "YulTypedName",
														"src": "17187:4:10",
														"type": ""
													}
												],
												"src": "17021:419:10"
											},
											{
												"body": {
													"nativeSrc": "17552:75:10",
													"nodeType": "YulBlock",
													"src": "17552:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17574:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17574:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17582:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17582:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17570:3:10"
																		},
																		"nativeSrc": "17570:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17570:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d696e74206c696d69742070657220696e766573746f72",
																		"kind": "string",
																		"nativeSrc": "17586:33:10",
																		"nodeType": "YulLiteral",
																		"src": "17586:33:10",
																		"type": "",
																		"value": "Exceeds mint limit per investor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17563:6:10"
																},
																"nativeSrc": "17563:57:10",
																"nodeType": "YulFunctionCall",
																"src": "17563:57:10"
															},
															"nativeSrc": "17563:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "17563:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589",
												"nativeSrc": "17446:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17544:6:10",
														"nodeType": "YulTypedName",
														"src": "17544:6:10",
														"type": ""
													}
												],
												"src": "17446:181:10"
											},
											{
												"body": {
													"nativeSrc": "17779:220:10",
													"nodeType": "YulBlock",
													"src": "17779:220:10",
													"statements": [
														{
															"nativeSrc": "17789:74:10",
															"nodeType": "YulAssignment",
															"src": "17789:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17855:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17855:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17860:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17860:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17796:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17796:58:10"
																},
																"nativeSrc": "17796:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17796:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17789:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17961:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17961:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589",
																	"nativeSrc": "17872:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17872:88:10"
																},
																"nativeSrc": "17872:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17872:93:10"
															},
															"nativeSrc": "17872:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17872:93:10"
														},
														{
															"nativeSrc": "17974:19:10",
															"nodeType": "YulAssignment",
															"src": "17974:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17985:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17985:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17990:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17990:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17981:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17981:3:10"
																},
																"nativeSrc": "17981:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17981:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17974:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17974:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17633:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17767:3:10",
														"nodeType": "YulTypedName",
														"src": "17767:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17775:3:10",
														"nodeType": "YulTypedName",
														"src": "17775:3:10",
														"type": ""
													}
												],
												"src": "17633:366:10"
											},
											{
												"body": {
													"nativeSrc": "18176:248:10",
													"nodeType": "YulBlock",
													"src": "18176:248:10",
													"statements": [
														{
															"nativeSrc": "18186:26:10",
															"nodeType": "YulAssignment",
															"src": "18186:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18198:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18198:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18209:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18209:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18194:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18194:3:10"
																},
																"nativeSrc": "18194:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18194:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18186:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18186:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18233:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18233:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18244:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18244:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18229:3:10"
																		},
																		"nativeSrc": "18229:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18229:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18252:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18252:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18258:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18248:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18248:3:10"
																		},
																		"nativeSrc": "18248:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18248:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18222:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18222:6:10"
																},
																"nativeSrc": "18222:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18222:47:10"
															},
															"nativeSrc": "18222:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18222:47:10"
														},
														{
															"nativeSrc": "18278:139:10",
															"nodeType": "YulAssignment",
															"src": "18278:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18412:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18412:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18286:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18286:124:10"
																},
																"nativeSrc": "18286:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18286:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18278:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18278:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18005:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18156:9:10",
														"nodeType": "YulTypedName",
														"src": "18156:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18171:4:10",
														"nodeType": "YulTypedName",
														"src": "18171:4:10",
														"type": ""
													}
												],
												"src": "18005:419:10"
											},
											{
												"body": {
													"nativeSrc": "18536:116:10",
													"nodeType": "YulBlock",
													"src": "18536:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18558:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18558:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18566:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18566:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18554:3:10"
																		},
																		"nativeSrc": "18554:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18554:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d696e74206c696d697420666f722074686520696e766573",
																		"kind": "string",
																		"nativeSrc": "18570:34:10",
																		"nodeType": "YulLiteral",
																		"src": "18570:34:10",
																		"type": "",
																		"value": "Exceeds mint limit for the inves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18547:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18547:6:10"
																},
																"nativeSrc": "18547:58:10",
																"nodeType": "YulFunctionCall",
																"src": "18547:58:10"
															},
															"nativeSrc": "18547:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "18547:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18626:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18626:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18634:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18634:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18622:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18622:3:10"
																		},
																		"nativeSrc": "18622:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18622:15:10"
																	},
																	{
																		"hexValue": "746f72",
																		"kind": "string",
																		"nativeSrc": "18639:5:10",
																		"nodeType": "YulLiteral",
																		"src": "18639:5:10",
																		"type": "",
																		"value": "tor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18615:6:10"
																},
																"nativeSrc": "18615:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18615:30:10"
															},
															"nativeSrc": "18615:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "18615:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8",
												"nativeSrc": "18430:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18528:6:10",
														"nodeType": "YulTypedName",
														"src": "18528:6:10",
														"type": ""
													}
												],
												"src": "18430:222:10"
											},
											{
												"body": {
													"nativeSrc": "18804:220:10",
													"nodeType": "YulBlock",
													"src": "18804:220:10",
													"statements": [
														{
															"nativeSrc": "18814:74:10",
															"nodeType": "YulAssignment",
															"src": "18814:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18880:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18880:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18885:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18821:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18821:58:10"
																},
																"nativeSrc": "18821:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18821:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18814:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18986:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18986:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8",
																	"nativeSrc": "18897:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18897:88:10"
																},
																"nativeSrc": "18897:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18897:93:10"
															},
															"nativeSrc": "18897:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18897:93:10"
														},
														{
															"nativeSrc": "18999:19:10",
															"nodeType": "YulAssignment",
															"src": "18999:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19010:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19010:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19015:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19015:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19006:3:10"
																},
																"nativeSrc": "19006:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19006:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18999:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18658:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18792:3:10",
														"nodeType": "YulTypedName",
														"src": "18792:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18800:3:10",
														"nodeType": "YulTypedName",
														"src": "18800:3:10",
														"type": ""
													}
												],
												"src": "18658:366:10"
											},
											{
												"body": {
													"nativeSrc": "19201:248:10",
													"nodeType": "YulBlock",
													"src": "19201:248:10",
													"statements": [
														{
															"nativeSrc": "19211:26:10",
															"nodeType": "YulAssignment",
															"src": "19211:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19223:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19223:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19234:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19234:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19219:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19219:3:10"
																},
																"nativeSrc": "19219:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19219:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19211:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19211:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19269:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19254:3:10"
																		},
																		"nativeSrc": "19254:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19254:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19277:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19277:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19283:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19283:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19273:3:10"
																		},
																		"nativeSrc": "19273:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19273:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19247:6:10"
																},
																"nativeSrc": "19247:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19247:47:10"
															},
															"nativeSrc": "19247:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19247:47:10"
														},
														{
															"nativeSrc": "19303:139:10",
															"nodeType": "YulAssignment",
															"src": "19303:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19437:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19437:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19311:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19311:124:10"
																},
																"nativeSrc": "19311:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19311:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19303:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19303:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19030:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19181:9:10",
														"nodeType": "YulTypedName",
														"src": "19181:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19196:4:10",
														"nodeType": "YulTypedName",
														"src": "19196:4:10",
														"type": ""
													}
												],
												"src": "19030:419:10"
											},
											{
												"body": {
													"nativeSrc": "19581:206:10",
													"nodeType": "YulBlock",
													"src": "19581:206:10",
													"statements": [
														{
															"nativeSrc": "19591:26:10",
															"nodeType": "YulAssignment",
															"src": "19591:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19603:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19603:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19614:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19614:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19599:3:10"
																},
																"nativeSrc": "19599:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19599:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19591:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19591:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19671:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19671:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19684:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19684:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19695:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19695:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19680:3:10"
																		},
																		"nativeSrc": "19680:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19680:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19627:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19627:43:10"
																},
																"nativeSrc": "19627:71:10",
																"nodeType": "YulFunctionCall",
																"src": "19627:71:10"
															},
															"nativeSrc": "19627:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "19627:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19752:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19752:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19765:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19765:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19776:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19776:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19761:3:10"
																		},
																		"nativeSrc": "19761:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19761:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19708:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19708:43:10"
																},
																"nativeSrc": "19708:72:10",
																"nodeType": "YulFunctionCall",
																"src": "19708:72:10"
															},
															"nativeSrc": "19708:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "19708:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "19455:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19545:9:10",
														"nodeType": "YulTypedName",
														"src": "19545:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19557:6:10",
														"nodeType": "YulTypedName",
														"src": "19557:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19565:6:10",
														"nodeType": "YulTypedName",
														"src": "19565:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19576:4:10",
														"nodeType": "YulTypedName",
														"src": "19576:4:10",
														"type": ""
													}
												],
												"src": "19455:332:10"
											},
											{
												"body": {
													"nativeSrc": "19899:130:10",
													"nodeType": "YulBlock",
													"src": "19899:130:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19921:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19921:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19929:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19929:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19917:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19917:3:10"
																		},
																		"nativeSrc": "19917:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19917:14:10"
																	},
																	{
																		"hexValue": "596f75206d75737420617070726f76652074686520636f6e747261637420746f",
																		"kind": "string",
																		"nativeSrc": "19933:34:10",
																		"nodeType": "YulLiteral",
																		"src": "19933:34:10",
																		"type": "",
																		"value": "You must approve the contract to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19910:6:10"
																},
																"nativeSrc": "19910:58:10",
																"nodeType": "YulFunctionCall",
																"src": "19910:58:10"
															},
															"nativeSrc": "19910:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "19910:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19989:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19997:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19997:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19985:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19985:3:10"
																		},
																		"nativeSrc": "19985:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19985:15:10"
																	},
																	{
																		"hexValue": "2061636365737320796f75722055534454",
																		"kind": "string",
																		"nativeSrc": "20002:19:10",
																		"nodeType": "YulLiteral",
																		"src": "20002:19:10",
																		"type": "",
																		"value": " access your USDT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19978:6:10"
																},
																"nativeSrc": "19978:44:10",
																"nodeType": "YulFunctionCall",
																"src": "19978:44:10"
															},
															"nativeSrc": "19978:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "19978:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7",
												"nativeSrc": "19793:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19891:6:10",
														"nodeType": "YulTypedName",
														"src": "19891:6:10",
														"type": ""
													}
												],
												"src": "19793:236:10"
											},
											{
												"body": {
													"nativeSrc": "20181:220:10",
													"nodeType": "YulBlock",
													"src": "20181:220:10",
													"statements": [
														{
															"nativeSrc": "20191:74:10",
															"nodeType": "YulAssignment",
															"src": "20191:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20257:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20257:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20262:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20262:2:10",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20198:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20198:58:10"
																},
																"nativeSrc": "20198:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20198:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20191:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20363:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20363:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7",
																	"nativeSrc": "20274:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20274:88:10"
																},
																"nativeSrc": "20274:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20274:93:10"
															},
															"nativeSrc": "20274:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20274:93:10"
														},
														{
															"nativeSrc": "20376:19:10",
															"nodeType": "YulAssignment",
															"src": "20376:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20387:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20392:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20383:3:10"
																},
																"nativeSrc": "20383:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20383:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20376:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20376:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20035:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20169:3:10",
														"nodeType": "YulTypedName",
														"src": "20169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20177:3:10",
														"nodeType": "YulTypedName",
														"src": "20177:3:10",
														"type": ""
													}
												],
												"src": "20035:366:10"
											},
											{
												"body": {
													"nativeSrc": "20578:248:10",
													"nodeType": "YulBlock",
													"src": "20578:248:10",
													"statements": [
														{
															"nativeSrc": "20588:26:10",
															"nodeType": "YulAssignment",
															"src": "20588:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20600:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20600:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20611:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20611:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20596:3:10"
																},
																"nativeSrc": "20596:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20596:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20588:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20588:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20635:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20635:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20646:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20646:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20631:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20631:3:10"
																		},
																		"nativeSrc": "20631:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20631:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20654:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20654:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20660:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20660:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20650:3:10"
																		},
																		"nativeSrc": "20650:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20650:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20624:6:10"
																},
																"nativeSrc": "20624:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20624:47:10"
															},
															"nativeSrc": "20624:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20624:47:10"
														},
														{
															"nativeSrc": "20680:139:10",
															"nodeType": "YulAssignment",
															"src": "20680:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20814:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20814:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20688:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20688:124:10"
																},
																"nativeSrc": "20688:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20688:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20680:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20680:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20407:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20558:9:10",
														"nodeType": "YulTypedName",
														"src": "20558:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20573:4:10",
														"nodeType": "YulTypedName",
														"src": "20573:4:10",
														"type": ""
													}
												],
												"src": "20407:419:10"
											},
											{
												"body": {
													"nativeSrc": "20986:288:10",
													"nodeType": "YulBlock",
													"src": "20986:288:10",
													"statements": [
														{
															"nativeSrc": "20996:26:10",
															"nodeType": "YulAssignment",
															"src": "20996:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21008:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21008:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21019:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21004:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21004:3:10"
																},
																"nativeSrc": "21004:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21004:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20996:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20996:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21076:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21076:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21100:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21100:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21085:3:10"
																		},
																		"nativeSrc": "21085:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21085:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21032:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21032:43:10"
																},
																"nativeSrc": "21032:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21032:71:10"
															},
															"nativeSrc": "21032:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21032:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21157:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21157:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21170:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21170:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21181:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21181:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21166:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21166:3:10"
																		},
																		"nativeSrc": "21166:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21166:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21113:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21113:43:10"
																},
																"nativeSrc": "21113:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21113:72:10"
															},
															"nativeSrc": "21113:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21113:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21239:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21239:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21252:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21252:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21263:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21263:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21248:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21248:3:10"
																		},
																		"nativeSrc": "21248:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21248:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21195:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21195:43:10"
																},
																"nativeSrc": "21195:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21195:72:10"
															},
															"nativeSrc": "21195:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21195:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20832:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20942:9:10",
														"nodeType": "YulTypedName",
														"src": "20942:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20954:6:10",
														"nodeType": "YulTypedName",
														"src": "20954:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20962:6:10",
														"nodeType": "YulTypedName",
														"src": "20962:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20970:6:10",
														"nodeType": "YulTypedName",
														"src": "20970:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20981:4:10",
														"nodeType": "YulTypedName",
														"src": "20981:4:10",
														"type": ""
													}
												],
												"src": "20832:442:10"
											},
											{
												"body": {
													"nativeSrc": "21324:47:10",
													"nodeType": "YulBlock",
													"src": "21324:47:10",
													"statements": [
														{
															"nativeSrc": "21334:31:10",
															"nodeType": "YulAssignment",
															"src": "21334:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21349:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21349:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21356:8:10",
																		"nodeType": "YulLiteral",
																		"src": "21356:8:10",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21345:3:10"
																},
																"nativeSrc": "21345:20:10",
																"nodeType": "YulFunctionCall",
																"src": "21345:20:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21334:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "21334:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "21280:91:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21306:5:10",
														"nodeType": "YulTypedName",
														"src": "21306:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21316:7:10",
														"nodeType": "YulTypedName",
														"src": "21316:7:10",
														"type": ""
													}
												],
												"src": "21280:91:10"
											},
											{
												"body": {
													"nativeSrc": "21440:52:10",
													"nodeType": "YulBlock",
													"src": "21440:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21457:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21457:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21479:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "21479:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "21462:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "21462:16:10"
																		},
																		"nativeSrc": "21462:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21462:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21450:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21450:6:10"
																},
																"nativeSrc": "21450:36:10",
																"nodeType": "YulFunctionCall",
																"src": "21450:36:10"
															},
															"nativeSrc": "21450:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "21450:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "21377:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21428:5:10",
														"nodeType": "YulTypedName",
														"src": "21428:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21435:3:10",
														"nodeType": "YulTypedName",
														"src": "21435:3:10",
														"type": ""
													}
												],
												"src": "21377:115:10"
											},
											{
												"body": {
													"nativeSrc": "21650:286:10",
													"nodeType": "YulBlock",
													"src": "21650:286:10",
													"statements": [
														{
															"nativeSrc": "21660:26:10",
															"nodeType": "YulAssignment",
															"src": "21660:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21672:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21672:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21683:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21683:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21668:3:10"
																},
																"nativeSrc": "21668:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21668:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21660:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21660:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21740:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21740:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21753:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21764:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21764:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21749:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21749:3:10"
																		},
																		"nativeSrc": "21749:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21749:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21696:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21696:43:10"
																},
																"nativeSrc": "21696:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21696:71:10"
															},
															"nativeSrc": "21696:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21696:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21821:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21821:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21834:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21834:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21845:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21845:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21830:3:10"
																		},
																		"nativeSrc": "21830:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21830:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21777:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21777:43:10"
																},
																"nativeSrc": "21777:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21777:72:10"
															},
															"nativeSrc": "21777:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21777:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21901:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21901:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21914:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21914:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21925:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21925:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21910:3:10"
																		},
																		"nativeSrc": "21910:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21910:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "21859:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "21859:41:10"
																},
																"nativeSrc": "21859:70:10",
																"nodeType": "YulFunctionCall",
																"src": "21859:70:10"
															},
															"nativeSrc": "21859:70:10",
															"nodeType": "YulExpressionStatement",
															"src": "21859:70:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nativeSrc": "21498:438:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21606:9:10",
														"nodeType": "YulTypedName",
														"src": "21606:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21618:6:10",
														"nodeType": "YulTypedName",
														"src": "21618:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21626:6:10",
														"nodeType": "YulTypedName",
														"src": "21626:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21634:6:10",
														"nodeType": "YulTypedName",
														"src": "21634:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21645:4:10",
														"nodeType": "YulTypedName",
														"src": "21645:4:10",
														"type": ""
													}
												],
												"src": "21498:438:10"
											},
											{
												"body": {
													"nativeSrc": "22048:66:10",
													"nodeType": "YulBlock",
													"src": "22048:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22070:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22070:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22078:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22078:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22066:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22066:3:10"
																		},
																		"nativeSrc": "22066:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22066:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f2066696e6420466163746f7279",
																		"kind": "string",
																		"nativeSrc": "22082:24:10",
																		"nodeType": "YulLiteral",
																		"src": "22082:24:10",
																		"type": "",
																		"value": "Failed to find Factory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22059:6:10"
																},
																"nativeSrc": "22059:48:10",
																"nodeType": "YulFunctionCall",
																"src": "22059:48:10"
															},
															"nativeSrc": "22059:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "22059:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8",
												"nativeSrc": "21942:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22040:6:10",
														"nodeType": "YulTypedName",
														"src": "22040:6:10",
														"type": ""
													}
												],
												"src": "21942:172:10"
											},
											{
												"body": {
													"nativeSrc": "22266:220:10",
													"nodeType": "YulBlock",
													"src": "22266:220:10",
													"statements": [
														{
															"nativeSrc": "22276:74:10",
															"nodeType": "YulAssignment",
															"src": "22276:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22342:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22342:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22347:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22347:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22283:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22283:58:10"
																},
																"nativeSrc": "22283:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22283:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22276:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22276:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22448:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22448:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8",
																	"nativeSrc": "22359:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22359:88:10"
																},
																"nativeSrc": "22359:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22359:93:10"
															},
															"nativeSrc": "22359:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22359:93:10"
														},
														{
															"nativeSrc": "22461:19:10",
															"nodeType": "YulAssignment",
															"src": "22461:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22472:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22472:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22477:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22477:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22468:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22468:3:10"
																},
																"nativeSrc": "22468:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22468:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22461:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22461:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22120:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22254:3:10",
														"nodeType": "YulTypedName",
														"src": "22254:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22262:3:10",
														"nodeType": "YulTypedName",
														"src": "22262:3:10",
														"type": ""
													}
												],
												"src": "22120:366:10"
											},
											{
												"body": {
													"nativeSrc": "22663:248:10",
													"nodeType": "YulBlock",
													"src": "22663:248:10",
													"statements": [
														{
															"nativeSrc": "22673:26:10",
															"nodeType": "YulAssignment",
															"src": "22673:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22685:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22685:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22696:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22696:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22681:3:10"
																},
																"nativeSrc": "22681:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22681:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22673:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22673:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22720:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22720:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22731:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22731:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22716:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22716:3:10"
																		},
																		"nativeSrc": "22716:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22716:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22739:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22739:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22745:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22745:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22735:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22735:3:10"
																		},
																		"nativeSrc": "22735:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22735:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22709:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22709:6:10"
																},
																"nativeSrc": "22709:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22709:47:10"
															},
															"nativeSrc": "22709:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22709:47:10"
														},
														{
															"nativeSrc": "22765:139:10",
															"nodeType": "YulAssignment",
															"src": "22765:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22899:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22899:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22773:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22773:124:10"
																},
																"nativeSrc": "22773:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22773:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22765:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22765:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22492:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22643:9:10",
														"nodeType": "YulTypedName",
														"src": "22643:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22658:4:10",
														"nodeType": "YulTypedName",
														"src": "22658:4:10",
														"type": ""
													}
												],
												"src": "22492:419:10"
											},
											{
												"body": {
													"nativeSrc": "22975:32:10",
													"nodeType": "YulBlock",
													"src": "22975:32:10",
													"statements": [
														{
															"nativeSrc": "22985:16:10",
															"nodeType": "YulAssignment",
															"src": "22985:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "22996:5:10",
																"nodeType": "YulIdentifier",
																"src": "22996:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "22985:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "22985:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_500000_by_1",
												"nativeSrc": "22917:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22957:5:10",
														"nodeType": "YulTypedName",
														"src": "22957:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "22967:7:10",
														"nodeType": "YulTypedName",
														"src": "22967:7:10",
														"type": ""
													}
												],
												"src": "22917:90:10"
											},
											{
												"body": {
													"nativeSrc": "23085:94:10",
													"nodeType": "YulBlock",
													"src": "23085:94:10",
													"statements": [
														{
															"nativeSrc": "23095:78:10",
															"nodeType": "YulAssignment",
															"src": "23095:78:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23165:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "23165:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_500000_by_1",
																					"nativeSrc": "23134:30:10",
																					"nodeType": "YulIdentifier",
																					"src": "23134:30:10"
																				},
																				"nativeSrc": "23134:37:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23134:37:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23125:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "23125:8:10"
																		},
																		"nativeSrc": "23125:47:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23125:47:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint24",
																	"nativeSrc": "23108:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "23108:16:10"
																},
																"nativeSrc": "23108:65:10",
																"nodeType": "YulFunctionCall",
																"src": "23108:65:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23095:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "23095:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_500000_by_1_to_t_uint24",
												"nativeSrc": "23013:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23065:5:10",
														"nodeType": "YulTypedName",
														"src": "23065:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23075:9:10",
														"nodeType": "YulTypedName",
														"src": "23075:9:10",
														"type": ""
													}
												],
												"src": "23013:166:10"
											},
											{
												"body": {
													"nativeSrc": "23262:78:10",
													"nodeType": "YulBlock",
													"src": "23262:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23279:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23327:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "23327:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_500000_by_1_to_t_uint24",
																			"nativeSrc": "23284:42:10",
																			"nodeType": "YulIdentifier",
																			"src": "23284:42:10"
																		},
																		"nativeSrc": "23284:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23284:49:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23272:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23272:6:10"
																},
																"nativeSrc": "23272:62:10",
																"nodeType": "YulFunctionCall",
																"src": "23272:62:10"
															},
															"nativeSrc": "23272:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "23272:62:10"
														}
													]
												},
												"name": "abi_encode_t_rational_500000_by_1_to_t_uint24_fromStack",
												"nativeSrc": "23185:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23250:5:10",
														"nodeType": "YulTypedName",
														"src": "23250:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23257:3:10",
														"nodeType": "YulTypedName",
														"src": "23257:3:10",
														"type": ""
													}
												],
												"src": "23185:155:10"
											},
											{
												"body": {
													"nativeSrc": "23456:136:10",
													"nodeType": "YulBlock",
													"src": "23456:136:10",
													"statements": [
														{
															"nativeSrc": "23466:26:10",
															"nodeType": "YulAssignment",
															"src": "23466:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23478:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23478:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23489:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23474:3:10"
																},
																"nativeSrc": "23474:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23474:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23466:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23466:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23558:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23558:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23571:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23571:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23582:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23582:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23567:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23567:3:10"
																		},
																		"nativeSrc": "23567:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23567:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_500000_by_1_to_t_uint24_fromStack",
																	"nativeSrc": "23502:55:10",
																	"nodeType": "YulIdentifier",
																	"src": "23502:55:10"
																},
																"nativeSrc": "23502:83:10",
																"nodeType": "YulFunctionCall",
																"src": "23502:83:10"
															},
															"nativeSrc": "23502:83:10",
															"nodeType": "YulExpressionStatement",
															"src": "23502:83:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_500000_by_1__to_t_uint24__fromStack_reversed",
												"nativeSrc": "23346:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23428:9:10",
														"nodeType": "YulTypedName",
														"src": "23428:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23440:6:10",
														"nodeType": "YulTypedName",
														"src": "23440:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23451:4:10",
														"nodeType": "YulTypedName",
														"src": "23451:4:10",
														"type": ""
													}
												],
												"src": "23346:246:10"
											},
											{
												"body": {
													"nativeSrc": "23704:69:10",
													"nodeType": "YulBlock",
													"src": "23704:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23726:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23726:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23734:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23734:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23722:3:10"
																		},
																		"nativeSrc": "23722:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23722:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f20506f6f6c20696e697469616c697a65",
																		"kind": "string",
																		"nativeSrc": "23738:27:10",
																		"nodeType": "YulLiteral",
																		"src": "23738:27:10",
																		"type": "",
																		"value": "Failed to Pool initialize"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23715:6:10"
																},
																"nativeSrc": "23715:51:10",
																"nodeType": "YulFunctionCall",
																"src": "23715:51:10"
															},
															"nativeSrc": "23715:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "23715:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2",
												"nativeSrc": "23598:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23696:6:10",
														"nodeType": "YulTypedName",
														"src": "23696:6:10",
														"type": ""
													}
												],
												"src": "23598:175:10"
											},
											{
												"body": {
													"nativeSrc": "23925:220:10",
													"nodeType": "YulBlock",
													"src": "23925:220:10",
													"statements": [
														{
															"nativeSrc": "23935:74:10",
															"nodeType": "YulAssignment",
															"src": "23935:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24001:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24006:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23942:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23942:58:10"
																},
																"nativeSrc": "23942:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23942:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23935:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24107:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24107:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2",
																	"nativeSrc": "24018:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24018:88:10"
																},
																"nativeSrc": "24018:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24018:93:10"
															},
															"nativeSrc": "24018:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24018:93:10"
														},
														{
															"nativeSrc": "24120:19:10",
															"nodeType": "YulAssignment",
															"src": "24120:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24131:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24131:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24136:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24136:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24127:3:10"
																},
																"nativeSrc": "24127:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24127:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24120:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24120:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23779:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23913:3:10",
														"nodeType": "YulTypedName",
														"src": "23913:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23921:3:10",
														"nodeType": "YulTypedName",
														"src": "23921:3:10",
														"type": ""
													}
												],
												"src": "23779:366:10"
											},
											{
												"body": {
													"nativeSrc": "24322:248:10",
													"nodeType": "YulBlock",
													"src": "24322:248:10",
													"statements": [
														{
															"nativeSrc": "24332:26:10",
															"nodeType": "YulAssignment",
															"src": "24332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24340:3:10"
																},
																"nativeSrc": "24340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24379:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24379:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24390:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24390:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24375:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24375:3:10"
																		},
																		"nativeSrc": "24375:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24375:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24398:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24398:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24404:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24404:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24394:3:10"
																		},
																		"nativeSrc": "24394:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24394:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24368:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24368:6:10"
																},
																"nativeSrc": "24368:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24368:47:10"
															},
															"nativeSrc": "24368:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24368:47:10"
														},
														{
															"nativeSrc": "24424:139:10",
															"nodeType": "YulAssignment",
															"src": "24424:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24558:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24558:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24432:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24432:124:10"
																},
																"nativeSrc": "24432:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24432:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24424:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24424:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24151:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24302:9:10",
														"nodeType": "YulTypedName",
														"src": "24302:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24317:4:10",
														"nodeType": "YulTypedName",
														"src": "24317:4:10",
														"type": ""
													}
												],
												"src": "24151:419:10"
											},
											{
												"body": {
													"nativeSrc": "24631:53:10",
													"nodeType": "YulBlock",
													"src": "24631:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24648:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24648:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24671:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "24671:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "24653:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "24653:17:10"
																		},
																		"nativeSrc": "24653:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24653:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24641:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24641:6:10"
																},
																"nativeSrc": "24641:37:10",
																"nodeType": "YulFunctionCall",
																"src": "24641:37:10"
															},
															"nativeSrc": "24641:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "24641:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "24576:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24619:5:10",
														"nodeType": "YulTypedName",
														"src": "24619:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24626:3:10",
														"nodeType": "YulTypedName",
														"src": "24626:3:10",
														"type": ""
													}
												],
												"src": "24576:108:10"
											},
											{
												"body": {
													"nativeSrc": "24743:52:10",
													"nodeType": "YulBlock",
													"src": "24743:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24760:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24760:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24782:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "24782:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "24765:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "24765:16:10"
																		},
																		"nativeSrc": "24765:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24765:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24753:6:10"
																},
																"nativeSrc": "24753:36:10",
																"nodeType": "YulFunctionCall",
																"src": "24753:36:10"
															},
															"nativeSrc": "24753:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "24753:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "24690:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24731:5:10",
														"nodeType": "YulTypedName",
														"src": "24731:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24738:3:10",
														"nodeType": "YulTypedName",
														"src": "24738:3:10",
														"type": ""
													}
												],
												"src": "24690:105:10"
											},
											{
												"body": {
													"nativeSrc": "24844:47:10",
													"nodeType": "YulBlock",
													"src": "24844:47:10",
													"statements": [
														{
															"nativeSrc": "24854:31:10",
															"nodeType": "YulAssignment",
															"src": "24854:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24876:1:10",
																		"nodeType": "YulLiteral",
																		"src": "24876:1:10",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24879:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "24879:5:10"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "24865:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "24865:10:10"
																},
																"nativeSrc": "24865:20:10",
																"nodeType": "YulFunctionCall",
																"src": "24865:20:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24854:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "24854:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "24801:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24826:5:10",
														"nodeType": "YulTypedName",
														"src": "24826:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24836:7:10",
														"nodeType": "YulTypedName",
														"src": "24836:7:10",
														"type": ""
													}
												],
												"src": "24801:90:10"
											},
											{
												"body": {
													"nativeSrc": "24948:51:10",
													"nodeType": "YulBlock",
													"src": "24948:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24965:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24965:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24986:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "24986:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "24970:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "24970:15:10"
																		},
																		"nativeSrc": "24970:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24970:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24958:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24958:6:10"
																},
																"nativeSrc": "24958:35:10",
																"nodeType": "YulFunctionCall",
																"src": "24958:35:10"
															},
															"nativeSrc": "24958:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "24958:35:10"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24",
												"nativeSrc": "24897:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24936:5:10",
														"nodeType": "YulTypedName",
														"src": "24936:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24943:3:10",
														"nodeType": "YulTypedName",
														"src": "24943:3:10",
														"type": ""
													}
												],
												"src": "24897:102:10"
											},
											{
												"body": {
													"nativeSrc": "25060:53:10",
													"nodeType": "YulBlock",
													"src": "25060:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25077:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25077:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25100:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "25100:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "25082:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "25082:17:10"
																		},
																		"nativeSrc": "25082:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25082:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25070:6:10"
																},
																"nativeSrc": "25070:37:10",
																"nodeType": "YulFunctionCall",
																"src": "25070:37:10"
															},
															"nativeSrc": "25070:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "25070:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "25005:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25048:5:10",
														"nodeType": "YulTypedName",
														"src": "25048:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25055:3:10",
														"nodeType": "YulTypedName",
														"src": "25055:3:10",
														"type": ""
													}
												],
												"src": "25005:108:10"
											},
											{
												"body": {
													"nativeSrc": "25305:1650:10",
													"nodeType": "YulBlock",
													"src": "25305:1650:10",
													"statements": [
														{
															"nativeSrc": "25315:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "25315:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25331:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25331:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25336:6:10",
																		"nodeType": "YulLiteral",
																		"src": "25336:6:10",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25327:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25327:3:10"
																},
																"nativeSrc": "25327:16:10",
																"nodeType": "YulFunctionCall",
																"src": "25327:16:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "25319:4:10",
																	"nodeType": "YulTypedName",
																	"src": "25319:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25353:166:10",
															"nodeType": "YulBlock",
															"src": "25353:166:10",
															"statements": [
																{
																	"nativeSrc": "25390:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25390:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25420:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "25420:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25427:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25427:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25416:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25416:3:10"
																				},
																				"nativeSrc": "25416:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25416:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "25410:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "25410:5:10"
																		},
																		"nativeSrc": "25410:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25410:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "25394:12:10",
																			"nodeType": "YulTypedName",
																			"src": "25394:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "25480:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "25480:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "25498:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "25498:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25503:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25503:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25494:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25494:3:10"
																				},
																				"nativeSrc": "25494:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25494:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "25446:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "25446:33:10"
																		},
																		"nativeSrc": "25446:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25446:63:10"
																	},
																	"nativeSrc": "25446:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "25446:63:10"
																}
															]
														},
														{
															"nativeSrc": "25529:166:10",
															"nodeType": "YulBlock",
															"src": "25529:166:10",
															"statements": [
																{
																	"nativeSrc": "25566:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25566:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25596:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "25596:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25603:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25603:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25592:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25592:3:10"
																				},
																				"nativeSrc": "25592:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25592:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "25586:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "25586:5:10"
																		},
																		"nativeSrc": "25586:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25586:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "25570:12:10",
																			"nodeType": "YulTypedName",
																			"src": "25570:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "25656:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "25656:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "25674:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "25674:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25679:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25679:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25670:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25670:3:10"
																				},
																				"nativeSrc": "25670:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25670:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "25622:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "25622:33:10"
																		},
																		"nativeSrc": "25622:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25622:63:10"
																	},
																	"nativeSrc": "25622:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "25622:63:10"
																}
															]
														},
														{
															"nativeSrc": "25705:161:10",
															"nodeType": "YulBlock",
															"src": "25705:161:10",
															"statements": [
																{
																	"nativeSrc": "25739:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25739:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25769:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "25769:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25776:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25776:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25765:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25765:3:10"
																				},
																				"nativeSrc": "25765:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25765:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "25759:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "25759:5:10"
																		},
																		"nativeSrc": "25759:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25759:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "25743:12:10",
																			"nodeType": "YulTypedName",
																			"src": "25743:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "25827:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "25827:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "25845:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "25845:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25850:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25850:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25841:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25841:3:10"
																				},
																				"nativeSrc": "25841:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25841:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "25795:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "25795:31:10"
																		},
																		"nativeSrc": "25795:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25795:61:10"
																	},
																	"nativeSrc": "25795:61:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "25795:61:10"
																}
															]
														},
														{
															"nativeSrc": "25876:165:10",
															"nodeType": "YulBlock",
															"src": "25876:165:10",
															"statements": [
																{
																	"nativeSrc": "25916:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25916:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25946:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "25946:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "25953:4:10",
																						"nodeType": "YulLiteral",
																						"src": "25953:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25942:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25942:3:10"
																				},
																				"nativeSrc": "25942:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25942:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "25936:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "25936:5:10"
																		},
																		"nativeSrc": "25936:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25936:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "25920:12:10",
																			"nodeType": "YulTypedName",
																			"src": "25920:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26002:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26002:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26020:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26020:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26025:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26025:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26016:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26016:3:10"
																				},
																				"nativeSrc": "26016:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26016:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "25972:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "25972:29:10"
																		},
																		"nativeSrc": "25972:59:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25972:59:10"
																	},
																	"nativeSrc": "25972:59:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "25972:59:10"
																}
															]
														},
														{
															"nativeSrc": "26051:165:10",
															"nodeType": "YulBlock",
															"src": "26051:165:10",
															"statements": [
																{
																	"nativeSrc": "26091:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26091:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26121:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "26121:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26128:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26128:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26117:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26117:3:10"
																				},
																				"nativeSrc": "26117:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26117:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "26111:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "26111:5:10"
																		},
																		"nativeSrc": "26111:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26111:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "26095:12:10",
																			"nodeType": "YulTypedName",
																			"src": "26095:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26177:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26177:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26195:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26195:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26200:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26200:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26191:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26191:3:10"
																				},
																				"nativeSrc": "26191:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26191:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "26147:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "26147:29:10"
																		},
																		"nativeSrc": "26147:59:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26147:59:10"
																	},
																	"nativeSrc": "26147:59:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "26147:59:10"
																}
															]
														},
														{
															"nativeSrc": "26226:174:10",
															"nodeType": "YulBlock",
															"src": "26226:174:10",
															"statements": [
																{
																	"nativeSrc": "26271:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26271:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26301:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "26301:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26308:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26308:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26297:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26297:3:10"
																				},
																				"nativeSrc": "26297:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26297:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "26291:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "26291:5:10"
																		},
																		"nativeSrc": "26291:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26291:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "26275:12:10",
																			"nodeType": "YulTypedName",
																			"src": "26275:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26361:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26361:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26379:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26379:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26384:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26384:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26375:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26375:3:10"
																				},
																				"nativeSrc": "26375:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26375:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "26327:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "26327:33:10"
																		},
																		"nativeSrc": "26327:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26327:63:10"
																	},
																	"nativeSrc": "26327:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "26327:63:10"
																}
															]
														},
														{
															"nativeSrc": "26410:174:10",
															"nodeType": "YulBlock",
															"src": "26410:174:10",
															"statements": [
																{
																	"nativeSrc": "26455:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26455:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26485:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "26485:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26492:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26492:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26481:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26481:3:10"
																				},
																				"nativeSrc": "26481:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26481:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "26475:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "26475:5:10"
																		},
																		"nativeSrc": "26475:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26475:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "26459:12:10",
																			"nodeType": "YulTypedName",
																			"src": "26459:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26545:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26545:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26563:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26563:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26568:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26568:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26559:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26559:3:10"
																				},
																				"nativeSrc": "26559:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26559:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "26511:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "26511:33:10"
																		},
																		"nativeSrc": "26511:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26511:63:10"
																	},
																	"nativeSrc": "26511:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "26511:63:10"
																}
															]
														},
														{
															"nativeSrc": "26594:170:10",
															"nodeType": "YulBlock",
															"src": "26594:170:10",
															"statements": [
																{
																	"nativeSrc": "26635:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26635:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26665:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "26665:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26672:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26672:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26661:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26661:3:10"
																				},
																				"nativeSrc": "26661:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26661:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "26655:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "26655:5:10"
																		},
																		"nativeSrc": "26655:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26655:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "26639:12:10",
																			"nodeType": "YulTypedName",
																			"src": "26639:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26725:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26725:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26743:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26743:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26748:4:10",
																						"nodeType": "YulLiteral",
																						"src": "26748:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26739:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26739:3:10"
																				},
																				"nativeSrc": "26739:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26739:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "26691:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "26691:33:10"
																		},
																		"nativeSrc": "26691:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26691:63:10"
																	},
																	"nativeSrc": "26691:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "26691:63:10"
																}
															]
														},
														{
															"nativeSrc": "26774:174:10",
															"nodeType": "YulBlock",
															"src": "26774:174:10",
															"statements": [
																{
																	"nativeSrc": "26815:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26815:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "26845:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26852:6:10",
																						"nodeType": "YulLiteral",
																						"src": "26852:6:10",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26841:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26841:3:10"
																				},
																				"nativeSrc": "26841:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26841:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "26835:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "26835:5:10"
																		},
																		"nativeSrc": "26835:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26835:25:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "26819:12:10",
																			"nodeType": "YulTypedName",
																			"src": "26819:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "26907:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "26907:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "26925:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "26925:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "26930:6:10",
																						"nodeType": "YulLiteral",
																						"src": "26930:6:10",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26921:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "26921:3:10"
																				},
																				"nativeSrc": "26921:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "26921:16:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "26873:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "26873:33:10"
																		},
																		"nativeSrc": "26873:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26873:65:10"
																	},
																	"nativeSrc": "26873:65:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "26873:65:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MintParams_$1545_memory_ptr_to_t_struct$_MintParams_$1545_memory_ptr_fromStack",
												"nativeSrc": "25183:1772:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25292:5:10",
														"nodeType": "YulTypedName",
														"src": "25292:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25299:3:10",
														"nodeType": "YulTypedName",
														"src": "25299:3:10",
														"type": ""
													}
												],
												"src": "25183:1772:10"
											},
											{
												"body": {
													"nativeSrc": "27115:181:10",
													"nodeType": "YulBlock",
													"src": "27115:181:10",
													"statements": [
														{
															"nativeSrc": "27125:27:10",
															"nodeType": "YulAssignment",
															"src": "27125:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27148:3:10",
																		"nodeType": "YulLiteral",
																		"src": "27148:3:10",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27133:3:10"
																},
																"nativeSrc": "27133:19:10",
																"nodeType": "YulFunctionCall",
																"src": "27133:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27262:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27262:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27275:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27275:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27286:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27286:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27271:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27271:3:10"
																		},
																		"nativeSrc": "27271:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27271:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MintParams_$1545_memory_ptr_to_t_struct$_MintParams_$1545_memory_ptr_fromStack",
																	"nativeSrc": "27162:99:10",
																	"nodeType": "YulIdentifier",
																	"src": "27162:99:10"
																},
																"nativeSrc": "27162:127:10",
																"nodeType": "YulFunctionCall",
																"src": "27162:127:10"
															},
															"nativeSrc": "27162:127:10",
															"nodeType": "YulExpressionStatement",
															"src": "27162:127:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1545_memory_ptr__to_t_struct$_MintParams_$1545_memory_ptr__fromStack_reversed",
												"nativeSrc": "26961:335:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27087:9:10",
														"nodeType": "YulTypedName",
														"src": "27087:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27099:6:10",
														"nodeType": "YulTypedName",
														"src": "27099:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27110:4:10",
														"nodeType": "YulTypedName",
														"src": "27110:4:10",
														"type": ""
													}
												],
												"src": "26961:335:10"
											},
											{
												"body": {
													"nativeSrc": "27456:288:10",
													"nodeType": "YulBlock",
													"src": "27456:288:10",
													"statements": [
														{
															"nativeSrc": "27466:26:10",
															"nodeType": "YulAssignment",
															"src": "27466:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27478:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27478:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27489:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27489:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27474:3:10"
																},
																"nativeSrc": "27474:18:10",
																"nodeType": "YulFunctionCall",
																"src": "27474:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27466:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27466:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27546:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27546:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27559:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27559:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27570:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27570:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27555:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27555:3:10"
																		},
																		"nativeSrc": "27555:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27555:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27502:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27502:43:10"
																},
																"nativeSrc": "27502:71:10",
																"nodeType": "YulFunctionCall",
																"src": "27502:71:10"
															},
															"nativeSrc": "27502:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "27502:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27627:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27640:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27651:2:10",
																				"nodeType": "YulLiteral",
																				"src": "27651:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27636:3:10"
																		},
																		"nativeSrc": "27636:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27636:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27583:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27583:43:10"
																},
																"nativeSrc": "27583:72:10",
																"nodeType": "YulFunctionCall",
																"src": "27583:72:10"
															},
															"nativeSrc": "27583:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "27583:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27709:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27709:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27722:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27722:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27733:2:10",
																				"nodeType": "YulLiteral",
																				"src": "27733:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27718:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27718:3:10"
																		},
																		"nativeSrc": "27718:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27718:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27665:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27665:43:10"
																},
																"nativeSrc": "27665:72:10",
																"nodeType": "YulFunctionCall",
																"src": "27665:72:10"
															},
															"nativeSrc": "27665:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "27665:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27302:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27412:9:10",
														"nodeType": "YulTypedName",
														"src": "27412:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27424:6:10",
														"nodeType": "YulTypedName",
														"src": "27424:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27432:6:10",
														"nodeType": "YulTypedName",
														"src": "27432:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27440:6:10",
														"nodeType": "YulTypedName",
														"src": "27440:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27451:4:10",
														"nodeType": "YulTypedName",
														"src": "27451:4:10",
														"type": ""
													}
												],
												"src": "27302:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint8(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_rational_0_by_1_t_rational_0_by_1_t_bytes_memory_ptr__to_t_address_t_bool_t_uint8_t_uint8_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to Mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds total supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds mint limit per investor\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds mint limit for the inves\")\n\n        mstore(add(memPtr, 32), \"tor\")\n\n    }\n\n    function abi_encode_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must approve the contract to\")\n\n        mstore(add(memPtr, 32), \" access your USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to find Factory\")\n\n    }\n\n    function abi_encode_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_500000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_500000_by_1_to_t_uint24(value) -> converted {\n        converted := cleanup_t_uint24(identity(cleanup_t_rational_500000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_500000_by_1_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_500000_by_1_to_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_rational_500000_by_1__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_500000_by_1_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to Pool initialize\")\n\n    }\n\n    function abi_encode_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct NZFToken.MintParams -> struct NZFToken.MintParams\n    function abi_encode_t_struct$_MintParams_$1545_memory_ptr_to_t_struct$_MintParams_$1545_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // lowerTick\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // upperTick\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amount0Desired\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amount1Desired\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // amount0Min\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // amount1Min\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_MintParams_$1545_memory_ptr__to_t_struct$_MintParams_$1545_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_MintParams_$1545_memory_ptr_to_t_struct$_MintParams_$1545_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063a9059cbb1161007a578063a9059cbb1461036d578063d1b8df221461039d578063dd62ed3e146103b9578063e5a7eb75146103e9578063f2fde38b14610405578063ff920c74146104215761014b565b8063715018a6146102bb5780637241dfa0146102c5578063771282f6146102f55780638da5cb5b14610313578063902d55a51461033157806395d89b411461034f5761014b565b806323b872dd1161011357806323b872dd146101f7578063313ce56714610227578063329927a7146102455780633ccfd60b146102635780634fe724391461026d57806370a082311461028b5761014b565b8063039600d21461014f57806306fdde031461016d578063095ea7b31461018b57806318160ddd146101bb578063185870f9146101d9575b5f80fd5b61015761043f565b6040516101649190611fd0565b60405180910390f35b61017561044d565b6040516101829190612073565b60405180910390f35b6101a560048036038101906101a0919061211b565b6104dd565b6040516101b29190612173565b60405180910390f35b6101c36104ff565b6040516101d09190611fd0565b60405180910390f35b6101e1610508565b6040516101ee919061219b565b60405180910390f35b610211600480360381019061020c91906121b4565b61052d565b60405161021e9190612173565b60405180910390f35b61022f61055b565b60405161023c919061221f565b60405180910390f35b61024d610563565b60405161025a9190611fd0565b60405180910390f35b61026b610572565b005b610275610825565b6040516102829190611fd0565b60405180910390f35b6102a560048036038101906102a09190612238565b610833565b6040516102b29190611fd0565b60405180910390f35b6102c3610878565b005b6102df60048036038101906102da9190612238565b61088b565b6040516102ec9190611fd0565b60405180910390f35b6102fd6108a0565b60405161030a9190611fd0565b60405180910390f35b61031b6108a6565b604051610328919061219b565b60405180910390f35b6103396108ce565b6040516103469190611fd0565b60405180910390f35b6103576108dd565b6040516103649190612073565b60405180910390f35b6103876004803603810190610382919061211b565b61096d565b6040516103949190612173565b60405180910390f35b6103b760048036038101906103b2919061211b565b61098f565b005b6103d360048036038101906103ce9190612263565b610bee565b6040516103e09190611fd0565b60405180910390f35b61040360048036038101906103fe91906122a1565b610c70565b005b61041f600480360381019061041a9190612238565b610fa5565b005b610429611029565b604051610436919061219b565b60405180910390f35b69043c33c193756480000081565b60606003805461045c906122f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610488906122f9565b80156104d35780601f106104aa576101008083540402835291602001916104d3565b820191905f5260205f20905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b5f806104e761104e565b90506104f4818585611055565b600191505092915050565b5f600254905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8061053761104e565b9050610544858285611067565b61054f8585856110f9565b60019150509392505050565b5f6012905090565b6a0771d2fa45345aa900000081565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890612373565b60405180910390fd5b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161065c919061219b565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906123a5565b90505f81116106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d69061241a565b60405180910390fd5b6a084595161401484a0000006007541161072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590612482565b60405180910390fd5b610764730227628f3f023bb0b980b67d528571c95c6dac1c3073f7addb930777e11b83a5e7494421ec4c589d03176101f46111e9565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016107e19291906124a0565b6020604051808303815f875af11580156107fd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082191906124f1565b5050565b69d3c21bcecceda100000081565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108806116ba565b6108895f611741565b565b6009602052805f5260405f205f915090505481565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a084595161401484a00000081565b6060600480546108ec906122f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610918906122f9565b80156109635780601f1061093a57610100808354040283529160200191610963565b820191905f5260205f20905b81548152906001019060200180831161094657829003601f168201915b5050505050905090565b5f8061097761104e565b90506109848185856110f9565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590612373565b60405180910390fd5b5f8111610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790612566565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16335f805f8067ffffffffffffffff811115610a9657610a95612584565b5b6040519080825280601f01601f191660200182016040528015610ac85781602001600182028036833780820191505090505b50604051602401610add959493929190612645565b6040516020818303038152906040527fdd5a12d8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b6791906126d7565b5f604051808303815f865af19150503d805f8114610ba0576040519150601f19603f3d011682016040523d82523d5f602084013e610ba5565b606091505b5050905080610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090612737565b60405180910390fd5b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b806a084595161401484a00000081610c866104ff565b610c909190612782565b1115610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc8906127ff565b60405180910390fd5b69043c33c1937564800000821115610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590612867565b60405180910390fd5b69043c33c19375648000008260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d729190612782565b1115610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa906128f5565b60405180910390fd5b8160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610e10929190612913565b602060405180830381865afa158015610e2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4f91906123a5565b1015610e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e87906129aa565b60405180910390fd5b610ede33308460085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611804909392919063ffffffff16565b610ee83383611886565b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f349190612782565b925050819055508160075f828254610f4c9190612782565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8936d06b61ad023525017d83cb2cec9d7a688f71eb45e3ed02a9ba311c17b51b83604051610f999190611fd0565b60405180910390a25050565b610fad6116ba565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611014919061219b565b60405180910390fd5b61102681611741565b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b6110628383836001611905565b505050565b5f6110728484610bee565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110f357818110156110e4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110db939291906129c8565b60405180910390fd5b6110f284848484035f611905565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611169575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611160919061219b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111d9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111d0919061219b565b60405180910390fd5b6111e4838383611ad4565b505050565b5f808573ffffffffffffffffffffffffffffffffffffffff1685858560405160240161121793929190612a1a565b6040516020818303038152906040527fa1671295000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516112a191906126d7565b5f604051808303815f865af19150503d805f81146112da576040519150601f19603f3d011682016040523d82523d5f602084013e6112df565b606091505b509150915081611324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131b90612a99565b60405180910390fd5b5f61132e82611ced565b90508073ffffffffffffffffffffffffffffffffffffffff166207a12060405160240161135b9190612af0565b6040516020818303038152906040527f9a26bd81000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516113e591906126d7565b5f604051808303815f865af19150503d805f811461141e576040519150601f19603f3d011682016040523d82523d5f602084013e611423565b606091505b50508093505082611469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146090612b53565b60405180910390fd5b611471611f3e565b86815f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816040019062ffffff16908162ffffff16815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764c816060019060020b908160020b81525050620d89b4816080019060020b908160020b815250506969e10de76676d08000008160a00181815250506969e10de76676d08000008160c00181815250505f8160e00181815250505f816101000181815250508173ffffffffffffffffffffffffffffffffffffffff16816040516024016115a29190612c6e565b6040516020818303038152906040527faa88a96c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161162c91906126d7565b5f604051808303815f865af19150503d805f8114611665576040519150601f19603f3d011682016040523d82523d5f602084013e61166a565b606091505b505080945050836116b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a790612737565b60405180910390fd5b5050505050505050565b6116c261104e565b73ffffffffffffffffffffffffffffffffffffffff166116e06108a6565b73ffffffffffffffffffffffffffffffffffffffff161461173f5761170361104e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611736919061219b565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611880848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161183993929190612c88565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cfa565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118f6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118ed919061219b565b60405180910390fd5b6119015f8383611ad4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611975575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161196c919061219b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119e5575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119dc919061219b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ace578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ac59190611fd0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b24578060025f828254611b189190612782565b92505081905550611bf2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611bad578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ba4939291906129c8565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c39578060025f8282540392505081905550611c83565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ce09190611fd0565b60405180910390a3505050565b5f60148201519050919050565b5f611d24828473ffffffffffffffffffffffffffffffffffffffff16611d8f90919063ffffffff16565b90505f815114158015611d48575080806020019051810190611d4691906124f1565b155b15611d8a57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d81919061219b565b60405180910390fd5b505050565b6060611d9c83835f611da4565b905092915050565b606081471015611deb57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611de2919061219b565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051611e1391906126d7565b5f6040518083038185875af1925050503d805f8114611e4d576040519150601f19603f3d011682016040523d82523d5f602084013e611e52565b606091505b5091509150611e62868383611e6d565b925050509392505050565b606082611e8257611e7d82611efa565b611ef2565b5f8251148015611ea857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611eea57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611ee1919061219b565b60405180910390fd5b819050611ef3565b5b9392505050565b5f81511115611f0c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061012001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f62ffffff1681526020015f60020b81526020015f60020b81526020015f81526020015f81526020015f81526020015f81525090565b5f819050919050565b611fca81611fb8565b82525050565b5f602082019050611fe35f830184611fc1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612020578082015181840152602081019050612005565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61204582611fe9565b61204f8185611ff3565b935061205f818560208601612003565b6120688161202b565b840191505092915050565b5f6020820190508181035f83015261208b818461203b565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120c082612097565b9050919050565b6120d0816120b6565b81146120da575f80fd5b50565b5f813590506120eb816120c7565b92915050565b6120fa81611fb8565b8114612104575f80fd5b50565b5f81359050612115816120f1565b92915050565b5f806040838503121561213157612130612093565b5b5f61213e858286016120dd565b925050602061214f85828601612107565b9150509250929050565b5f8115159050919050565b61216d81612159565b82525050565b5f6020820190506121865f830184612164565b92915050565b612195816120b6565b82525050565b5f6020820190506121ae5f83018461218c565b92915050565b5f805f606084860312156121cb576121ca612093565b5b5f6121d8868287016120dd565b93505060206121e9868287016120dd565b92505060406121fa86828701612107565b9150509250925092565b5f60ff82169050919050565b61221981612204565b82525050565b5f6020820190506122325f830184612210565b92915050565b5f6020828403121561224d5761224c612093565b5b5f61225a848285016120dd565b91505092915050565b5f806040838503121561227957612278612093565b5b5f612286858286016120dd565b9250506020612297858286016120dd565b9150509250929050565b5f602082840312156122b6576122b5612093565b5b5f6122c384828501612107565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061231057607f821691505b602082108103612323576123226122cc565b5b50919050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61235d600e83611ff3565b915061236882612329565b602082019050919050565b5f6020820190508181035f83015261238a81612351565b9050919050565b5f8151905061239f816120f1565b92915050565b5f602082840312156123ba576123b9612093565b5b5f6123c784828501612391565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f612404601583611ff3565b915061240f826123d0565b602082019050919050565b5f6020820190508181035f830152612431816123f8565b9050919050565b7f4e6f7420456e6f75676820537570706c790000000000000000000000000000005f82015250565b5f61246c601183611ff3565b915061247782612438565b602082019050919050565b5f6020820190508181035f83015261249981612460565b9050919050565b5f6040820190506124b35f83018561218c565b6124c06020830184611fc1565b9392505050565b6124d081612159565b81146124da575f80fd5b50565b5f815190506124eb816124c7565b92915050565b5f6020828403121561250657612505612093565b5b5f612513848285016124dd565b91505092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f612550602083611ff3565b915061255b8261251c565b602082019050919050565b5f6020820190508181035f83015261257d81612544565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050919050565b5f819050919050565b5f6125dd6125d86125d3846125b1565b6125ba565b612204565b9050919050565b6125ed816125c3565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f612617826125f3565b61262181856125fd565b9350612631818560208601612003565b61263a8161202b565b840191505092915050565b5f60a0820190506126585f83018861218c565b6126656020830187612164565b61267260408301866125e4565b61267f60608301856125e4565b8181036080830152612691818461260d565b90509695505050505050565b5f81905092915050565b5f6126b1826125f3565b6126bb818561269d565b93506126cb818560208601612003565b80840191505092915050565b5f6126e282846126a7565b915081905092915050565b7f4661696c656420746f204d696e740000000000000000000000000000000000005f82015250565b5f612721600e83611ff3565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61278c82611fb8565b915061279783611fb8565b92508282019050808211156127af576127ae612755565b5b92915050565b7f4578636565647320746f74616c20737570706c790000000000000000000000005f82015250565b5f6127e9601483611ff3565b91506127f4826127b5565b602082019050919050565b5f6020820190508181035f830152612816816127dd565b9050919050565b7f45786365656473206d696e74206c696d69742070657220696e766573746f72005f82015250565b5f612851601f83611ff3565b915061285c8261281d565b602082019050919050565b5f6020820190508181035f83015261287e81612845565b9050919050565b7f45786365656473206d696e74206c696d697420666f722074686520696e7665735f8201527f746f720000000000000000000000000000000000000000000000000000000000602082015250565b5f6128df602383611ff3565b91506128ea82612885565b604082019050919050565b5f6020820190508181035f83015261290c816128d3565b9050919050565b5f6040820190506129265f83018561218c565b612933602083018461218c565b9392505050565b7f596f75206d75737420617070726f76652074686520636f6e747261637420746f5f8201527f2061636365737320796f75722055534454000000000000000000000000000000602082015250565b5f612994603183611ff3565b915061299f8261293a565b604082019050919050565b5f6020820190508181035f8301526129c181612988565b9050919050565b5f6060820190506129db5f83018661218c565b6129e86020830185611fc1565b6129f56040830184611fc1565b949350505050565b5f62ffffff82169050919050565b612a14816129fd565b82525050565b5f606082019050612a2d5f83018661218c565b612a3a602083018561218c565b612a476040830184612a0b565b949350505050565b7f4661696c656420746f2066696e6420466163746f7279000000000000000000005f82015250565b5f612a83601683611ff3565b9150612a8e82612a4f565b602082019050919050565b5f6020820190508181035f830152612ab081612a77565b9050919050565b5f819050919050565b5f612ada612ad5612ad084612ab7565b6125ba565b6129fd565b9050919050565b612aea81612ac0565b82525050565b5f602082019050612b035f830184612ae1565b92915050565b7f4661696c656420746f20506f6f6c20696e697469616c697a65000000000000005f82015250565b5f612b3d601983611ff3565b9150612b4882612b09565b602082019050919050565b5f6020820190508181035f830152612b6a81612b31565b9050919050565b612b7a816120b6565b82525050565b612b89816129fd565b82525050565b5f8160020b9050919050565b612ba481612b8f565b82525050565b612bb381611fb8565b82525050565b61012082015f820151612bce5f850182612b71565b506020820151612be16020850182612b71565b506040820151612bf46040850182612b80565b506060820151612c076060850182612b9b565b506080820151612c1a6080850182612b9b565b5060a0820151612c2d60a0850182612baa565b5060c0820151612c4060c0850182612baa565b5060e0820151612c5360e0850182612baa565b50610100820151612c68610100850182612baa565b50505050565b5f61012082019050612c825f830184612bb9565b92915050565b5f606082019050612c9b5f83018661218c565b612ca8602083018561218c565b612cb56040830184611fc1565b94935050505056fea2646970667358221220c2358b6fd3cf22d51e92175cc2637cd2fe48a6795ac106f28445a30051600b4a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD1B8DF22 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE5A7EB75 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xFF920C74 EQ PUSH2 0x421 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x7241DFA0 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x771282F6 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x329927A7 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x4FE72439 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28B JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x39600D2 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x185870F9 EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x878 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x22A1 JUMP JUMPDEST PUSH2 0xC70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x429 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0x43C33C1937564800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x488 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E7 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F4 DUP2 DUP6 DUP6 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x537 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP6 DUP3 DUP6 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x54F DUP6 DUP6 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x771D2FA45345AA9000000 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x84595161401484A000000 PUSH1 0x7 SLOAD GT PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 PUSH20 0x227628F3F023BB0B980B67D528571C95C6DAC1C ADDRESS PUSH20 0xF7ADDB930777E11B83A5E7494421EC4C589D0317 PUSH2 0x1F4 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP3 SWAP2 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x880 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x889 PUSH0 PUSH2 0x1741 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8EC SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x918 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x963 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x963 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x946 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x977 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH2 0x984 DUP2 DUP6 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH0 DUP1 PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0x2584 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAC8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xDD5A12D800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH11 0x84595161401484A000000 DUP2 PUSH2 0xC86 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x43C33C1937564800000 DUP3 GT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP1 PUSH2 0x2867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x43C33C1937564800000 DUP3 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST GT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP1 PUSH2 0x28F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE10 SWAP3 SWAP2 SWAP1 PUSH2 0x2913 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST LT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE87 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDE CALLER ADDRESS DUP5 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1804 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEE8 CALLER DUP4 PUSH2 0x1886 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8936D06B61AD023525017D83CB2CEC9D7A688F71EB45E3ED02A9BA311C17B51B DUP4 PUSH1 0x40 MLOAD PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFAD PUSH2 0x16BA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1026 DUP2 PUSH2 0x1741 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1062 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1905 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1169 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E4 DUP4 DUP4 DUP4 PUSH2 0x1AD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1217 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xA167129500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x132E DUP3 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x7A120 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x2AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x9A26BD8100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP4 POP POP DUP3 PUSH2 0x1469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1460 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1471 PUSH2 0x1F3E JUMP JUMPDEST DUP7 DUP2 PUSH0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x40 ADD SWAP1 PUSH3 0xFFFFFF AND SWAP1 DUP2 PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2764C DUP2 PUSH1 0x60 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH3 0xD89B4 DUP2 PUSH1 0x80 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 PUSH2 0x100 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xAA88A96C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1665 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x166A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP5 POP POP DUP4 PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A7 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16C2 PUSH2 0x104E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E0 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x173F JUMPI PUSH2 0x1703 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1880 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1839 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CFA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18ED SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1901 PUSH0 DUP4 DUP4 PUSH2 0x1AD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1975 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DC SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1ACE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AC5 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B24 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C83 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 DUP3 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D24 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D48 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D46 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D8A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D9C DUP4 DUP4 PUSH0 PUSH2 0x1DA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1DEB JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE2 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1E4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E62 DUP7 DUP4 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E82 JUMPI PUSH2 0x1E7D DUP3 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x1EF2 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1EA8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EEA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE1 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1F0C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2005 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x204F DUP2 DUP6 PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP PUSH2 0x205F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x2068 DUP2 PUSH2 0x202B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x208B DUP2 DUP5 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D0 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EB DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20FA DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2115 DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213E DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x214F DUP6 DUP3 DUP7 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216D DUP2 PUSH2 0x2159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2186 PUSH0 DUP4 ADD DUP5 PUSH2 0x2164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21AE PUSH0 DUP4 ADD DUP5 PUSH2 0x218C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21CB JUMPI PUSH2 0x21CA PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D8 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E9 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21FA DUP7 DUP3 DUP8 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x2204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2232 PUSH0 DUP4 ADD DUP5 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225A DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2286 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2297 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B6 JUMPI PUSH2 0x22B5 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C3 DUP5 DUP3 DUP6 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2310 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2323 JUMPI PUSH2 0x2322 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x235D PUSH1 0xE DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2368 DUP3 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238A DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x239F DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C7 DUP5 DUP3 DUP6 ADD PUSH2 0x2391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2404 PUSH1 0x15 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x240F DUP3 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F75676820537570706C79000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x246C PUSH1 0x11 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2477 DUP3 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2499 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B3 PUSH0 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x24C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x24D0 DUP2 PUSH2 0x2159 JUMP JUMPDEST DUP2 EQ PUSH2 0x24DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24EB DUP2 PUSH2 0x24C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x2093 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2513 DUP5 DUP3 DUP6 ADD PUSH2 0x24DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2550 PUSH1 0x20 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x255B DUP3 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x257D DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25DD PUSH2 0x25D8 PUSH2 0x25D3 DUP5 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25ED DUP2 PUSH2 0x25C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2617 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x2621 DUP2 DUP6 PUSH2 0x25FD JUMP JUMPDEST SWAP4 POP PUSH2 0x2631 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST PUSH2 0x263A DUP2 PUSH2 0x202B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2658 PUSH0 DUP4 ADD DUP9 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2665 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x2672 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x267F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x25E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2691 DUP2 DUP5 PUSH2 0x260D JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B1 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH2 0x26BB DUP2 DUP6 PUSH2 0x269D JUMP JUMPDEST SWAP4 POP PUSH2 0x26CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2003 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 DUP3 DUP5 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F204D696E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0xE DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x278C DUP3 PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2797 DUP4 PUSH2 0x1FB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27AF JUMPI PUSH2 0x27AE PUSH2 0x2755 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320746F74616C20737570706C79000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E9 PUSH1 0x14 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F4 DUP3 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2816 DUP2 PUSH2 0x27DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D696E74206C696D69742070657220696E766573746F7200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2851 PUSH1 0x1F DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x285C DUP3 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x287E DUP2 PUSH2 0x2845 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D696E74206C696D697420666F722074686520696E766573 PUSH0 DUP3 ADD MSTORE PUSH32 0x746F720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DF PUSH1 0x23 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EA DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x290C DUP2 PUSH2 0x28D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2926 PUSH0 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2933 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x218C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F75206D75737420617070726F76652074686520636F6E747261637420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x2061636365737320796F75722055534454000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2994 PUSH1 0x31 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x299F DUP3 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29C1 DUP2 PUSH2 0x2988 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29DB PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x29E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x29F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A14 DUP2 PUSH2 0x29FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A2D PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2A3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2A47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A0B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2066696E6420466163746F727900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A83 PUSH1 0x16 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A8E DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB0 DUP2 PUSH2 0x2A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2ADA PUSH2 0x2AD5 PUSH2 0x2AD0 DUP5 PUSH2 0x2AB7 JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEA DUP2 PUSH2 0x2AC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B03 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F20506F6F6C20696E697469616C697A6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x19 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7A DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B89 DUP2 PUSH2 0x29FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA4 DUP2 PUSH2 0x2B8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB3 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2BCE PUSH0 DUP6 ADD DUP3 PUSH2 0x2B71 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2BE1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2B71 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2BF4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2B80 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2C07 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2B9B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2C1A PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2B9B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2C2D PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2C40 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2C53 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2C68 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2BAA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH0 DUP4 ADD DUP7 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x2CB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP12 PUSH16 0xD3CF22D51E92175CC2637CD2FE48A679 GAS 0xC1 MOD CALLCODE DUP5 GASLIMIT LOG3 STOP MLOAD PUSH1 0xB BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "291:5123:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:30:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:62:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2763:700;;;:::i;:::-;;701:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1164:47:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1056:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:60:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4998:413:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1963:758:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1090:26:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:67;888:17;838:67;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;1020:30:9:-;;;;;;;;;;;;;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;770:62:9:-;812:20;770:62;:::o;2763:700::-;1397:15;;;;;;;;;;;1383:29;;:10;:29;;;1375:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2816:23:::1;2849:11;;;;;;;;;;;2842:29;;;2880:4;2842:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2816:70;;2922:1;2904:15;:19;2896:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;674:21;2967:13;;:28;2959:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3210:174;3232:42;3296:4;3315:42;3371:3;3210:8;:174::i;:::-;3401:11;;;;;;;;;;;3394:28;;;3423:15;;;;;;;;;;;3440;3394:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2806:657;2763:700::o:0;701:63::-;744:20;701:63;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1164:47:9:-;;;;;;;;;;;;;;;;;:::o;1056:28::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;635:60:9:-;674:21;635:60;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;4998:413:9:-;1397:15;;;;;;;;;;;1383:29;;:10;:29;;;1375:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5093:1:::1;5084:6;:10;5076:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5143:12;5161:4;:9;;5264:10;5288:5;5307:1:::0;5322::::1;5347::::0;5337:12:::1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:179;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5161:199;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5142:218;;;5378:7;5370:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;5066:345;4998:413:::0;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1963:758:9:-;2018:6;674:21;1522:6;1506:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:38;;1498:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;888:17:::1;2057:6;:33;;2036:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;888:17;2205:6;2178:12;:24;2191:10;2178:24;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:60;;2157:142;;;;;;;;;;;;:::i;:::-;;;;;;;;;2390:6;2337:11;;;;;;;;;;;2330:29;;;2360:10;2380:4;2330:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;2309:162;;;;;;;;;;;;:::i;:::-;;;;;;;;;2482:71;2519:10;2539:4;2546:6;2489:11;;;;;;;;;;;2482:36;;;;:71;;;;;;:::i;:::-;2564:25;2570:10;2582:6;2564:5;:25::i;:::-;2627:6;2599:12;:24;2612:10;2599:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;2660:6;2643:13;;:23;;;;;;;:::i;:::-;;;;;;;;2695:10;2682:32;;;2707:6;2682:32;;;;;;:::i;:::-;;;;;;;;1963:758:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1090:26:9:-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3506:1321:9:-;3648:12;3662:24;3690:12;:17;;3816:6;3840;3864:3;3721:160;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:201;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:244;;;;3909:7;3901:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3953:20;3976:27;3991:11;3976:14;:27::i;:::-;3953:50;;4035:12;4027:26;;4114:6;4067:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:104;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4013:118;;;;;4149:7;4141:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4197:24;;:::i;:::-;4247:6;4231;:13;;:22;;;;;;;;;;;4279:6;4263;:13;;:22;;;;;;;;;;;4308:3;4295:6;:10;;:16;;;;;;;;;;;4340:7;4321:6;:16;;:26;;;;;;;;;;;4376:6;4357;:16;;:25;;;;;;;;;;;4416:17;4392:6;:21;;:41;;;;;4467:17;4443:6;:21;;:41;;;;;4514:1;4494:6;:17;;:21;;;;;4545:1;4525:6;:17;;:21;;;;;4579:12;4571:26;;4746:6;4611:155;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:205;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4557:219;;;;;4794:7;4786:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;3637:1190;;;;3506:1321;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4838:154:9:-;4902:12;4972:2;4967:3;4963:12;4957:19;4949:27;;4838:154;;;:::o;4059:629:6:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:7:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:118::-;3885:24;3903:5;3885:24;:::i;:::-;3880:3;3873:37;3798:118;;:::o;3922:222::-;4015:4;4053:2;4042:9;4038:18;4030:26;;4066:71;4134:1;4123:9;4119:17;4110:6;4066:71;:::i;:::-;3922:222;;;;:::o;4150:619::-;4227:6;4235;4243;4292:2;4280:9;4271:7;4267:23;4263:32;4260:119;;;4298:79;;:::i;:::-;4260:119;4418:1;4443:53;4488:7;4479:6;4468:9;4464:22;4443:53;:::i;:::-;4433:63;;4389:117;4545:2;4571:53;4616:7;4607:6;4596:9;4592:22;4571:53;:::i;:::-;4561:63;;4516:118;4673:2;4699:53;4744:7;4735:6;4724:9;4720:22;4699:53;:::i;:::-;4689:63;;4644:118;4150:619;;;;;:::o;4775:86::-;4810:7;4850:4;4843:5;4839:16;4828:27;;4775:86;;;:::o;4867:112::-;4950:22;4966:5;4950:22;:::i;:::-;4945:3;4938:35;4867:112;;:::o;4985:214::-;5074:4;5112:2;5101:9;5097:18;5089:26;;5125:67;5189:1;5178:9;5174:17;5165:6;5125:67;:::i;:::-;4985:214;;;;:::o;5205:329::-;5264:6;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5205:329;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:329::-;6079:6;6128:2;6116:9;6107:7;6103:23;6099:32;6096:119;;;6134:79;;:::i;:::-;6096:119;6254:1;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6225:117;6020:329;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:164::-;7007:16;7003:1;6995:6;6991:14;6984:40;6867:164;:::o;7037:366::-;7179:3;7200:67;7264:2;7259:3;7200:67;:::i;:::-;7193:74;;7276:93;7365:3;7276:93;:::i;:::-;7394:2;7389:3;7385:12;7378:19;;7037:366;;;:::o;7409:419::-;7575:4;7613:2;7602:9;7598:18;7590:26;;7662:9;7656:4;7652:20;7648:1;7637:9;7633:17;7626:47;7690:131;7816:4;7690:131;:::i;:::-;7682:139;;7409:419;;;:::o;7834:143::-;7891:5;7922:6;7916:13;7907:22;;7938:33;7965:5;7938:33;:::i;:::-;7834:143;;;;:::o;7983:351::-;8053:6;8102:2;8090:9;8081:7;8077:23;8073:32;8070:119;;;8108:79;;:::i;:::-;8070:119;8228:1;8253:64;8309:7;8300:6;8289:9;8285:22;8253:64;:::i;:::-;8243:74;;8199:128;7983:351;;;;:::o;8340:171::-;8480:23;8476:1;8468:6;8464:14;8457:47;8340:171;:::o;8517:366::-;8659:3;8680:67;8744:2;8739:3;8680:67;:::i;:::-;8673:74;;8756:93;8845:3;8756:93;:::i;:::-;8874:2;8869:3;8865:12;8858:19;;8517:366;;;:::o;8889:419::-;9055:4;9093:2;9082:9;9078:18;9070:26;;9142:9;9136:4;9132:20;9128:1;9117:9;9113:17;9106:47;9170:131;9296:4;9170:131;:::i;:::-;9162:139;;8889:419;;;:::o;9314:167::-;9454:19;9450:1;9442:6;9438:14;9431:43;9314:167;:::o;9487:366::-;9629:3;9650:67;9714:2;9709:3;9650:67;:::i;:::-;9643:74;;9726:93;9815:3;9726:93;:::i;:::-;9844:2;9839:3;9835:12;9828:19;;9487:366;;;:::o;9859:419::-;10025:4;10063:2;10052:9;10048:18;10040:26;;10112:9;10106:4;10102:20;10098:1;10087:9;10083:17;10076:47;10140:131;10266:4;10140:131;:::i;:::-;10132:139;;9859:419;;;:::o;10284:332::-;10405:4;10443:2;10432:9;10428:18;10420:26;;10456:71;10524:1;10513:9;10509:17;10500:6;10456:71;:::i;:::-;10537:72;10605:2;10594:9;10590:18;10581:6;10537:72;:::i;:::-;10284:332;;;;;:::o;10622:116::-;10692:21;10707:5;10692:21;:::i;:::-;10685:5;10682:32;10672:60;;10728:1;10725;10718:12;10672:60;10622:116;:::o;10744:137::-;10798:5;10829:6;10823:13;10814:22;;10845:30;10869:5;10845:30;:::i;:::-;10744:137;;;;:::o;10887:345::-;10954:6;11003:2;10991:9;10982:7;10978:23;10974:32;10971:119;;;11009:79;;:::i;:::-;10971:119;11129:1;11154:61;11207:7;11198:6;11187:9;11183:22;11154:61;:::i;:::-;11144:71;;11100:125;10887:345;;;;:::o;11238:182::-;11378:34;11374:1;11366:6;11362:14;11355:58;11238:182;:::o;11426:366::-;11568:3;11589:67;11653:2;11648:3;11589:67;:::i;:::-;11582:74;;11665:93;11754:3;11665:93;:::i;:::-;11783:2;11778:3;11774:12;11767:19;;11426:366;;;:::o;11798:419::-;11964:4;12002:2;11991:9;11987:18;11979:26;;12051:9;12045:4;12041:20;12037:1;12026:9;12022:17;12015:47;12079:131;12205:4;12079:131;:::i;:::-;12071:139;;11798:419;;;:::o;12223:180::-;12271:77;12268:1;12261:88;12368:4;12365:1;12358:15;12392:4;12389:1;12382:15;12409:85;12454:7;12483:5;12472:16;;12409:85;;;:::o;12500:60::-;12528:3;12549:5;12542:12;;12500:60;;;:::o;12566:154::-;12622:9;12655:59;12671:42;12680:32;12706:5;12680:32;:::i;:::-;12671:42;:::i;:::-;12655:59;:::i;:::-;12642:72;;12566:154;;;:::o;12726:143::-;12819:43;12856:5;12819:43;:::i;:::-;12814:3;12807:56;12726:143;;:::o;12875:98::-;12926:6;12960:5;12954:12;12944:22;;12875:98;;;:::o;12979:168::-;13062:11;13096:6;13091:3;13084:19;13136:4;13131:3;13127:14;13112:29;;12979:168;;;;:::o;13153:373::-;13239:3;13267:38;13299:5;13267:38;:::i;:::-;13321:70;13384:6;13379:3;13321:70;:::i;:::-;13314:77;;13400:65;13458:6;13453:3;13446:4;13439:5;13435:16;13400:65;:::i;:::-;13490:29;13512:6;13490:29;:::i;:::-;13485:3;13481:39;13474:46;;13243:283;13153:373;;;;:::o;13532:763::-;13761:4;13799:3;13788:9;13784:19;13776:27;;13813:71;13881:1;13870:9;13866:17;13857:6;13813:71;:::i;:::-;13894:66;13956:2;13945:9;13941:18;13932:6;13894:66;:::i;:::-;13970:78;14044:2;14033:9;14029:18;14020:6;13970:78;:::i;:::-;14058;14132:2;14121:9;14117:18;14108:6;14058:78;:::i;:::-;14184:9;14178:4;14174:20;14168:3;14157:9;14153:19;14146:49;14212:76;14283:4;14274:6;14212:76;:::i;:::-;14204:84;;13532:763;;;;;;;;:::o;14301:147::-;14402:11;14439:3;14424:18;;14301:147;;;;:::o;14454:386::-;14558:3;14586:38;14618:5;14586:38;:::i;:::-;14640:88;14721:6;14716:3;14640:88;:::i;:::-;14633:95;;14737:65;14795:6;14790:3;14783:4;14776:5;14772:16;14737:65;:::i;:::-;14827:6;14822:3;14818:16;14811:23;;14562:278;14454:386;;;;:::o;14846:271::-;14976:3;14998:93;15087:3;15078:6;14998:93;:::i;:::-;14991:100;;15108:3;15101:10;;14846:271;;;;:::o;15123:164::-;15263:16;15259:1;15251:6;15247:14;15240:40;15123:164;:::o;15293:366::-;15435:3;15456:67;15520:2;15515:3;15456:67;:::i;:::-;15449:74;;15532:93;15621:3;15532:93;:::i;:::-;15650:2;15645:3;15641:12;15634:19;;15293:366;;;:::o;15665:419::-;15831:4;15869:2;15858:9;15854:18;15846:26;;15918:9;15912:4;15908:20;15904:1;15893:9;15889:17;15882:47;15946:131;16072:4;15946:131;:::i;:::-;15938:139;;15665:419;;;:::o;16090:180::-;16138:77;16135:1;16128:88;16235:4;16232:1;16225:15;16259:4;16256:1;16249:15;16276:191;16316:3;16335:20;16353:1;16335:20;:::i;:::-;16330:25;;16369:20;16387:1;16369:20;:::i;:::-;16364:25;;16412:1;16409;16405:9;16398:16;;16433:3;16430:1;16427:10;16424:36;;;16440:18;;:::i;:::-;16424:36;16276:191;;;;:::o;16473:170::-;16613:22;16609:1;16601:6;16597:14;16590:46;16473:170;:::o;16649:366::-;16791:3;16812:67;16876:2;16871:3;16812:67;:::i;:::-;16805:74;;16888:93;16977:3;16888:93;:::i;:::-;17006:2;17001:3;16997:12;16990:19;;16649:366;;;:::o;17021:419::-;17187:4;17225:2;17214:9;17210:18;17202:26;;17274:9;17268:4;17264:20;17260:1;17249:9;17245:17;17238:47;17302:131;17428:4;17302:131;:::i;:::-;17294:139;;17021:419;;;:::o;17446:181::-;17586:33;17582:1;17574:6;17570:14;17563:57;17446:181;:::o;17633:366::-;17775:3;17796:67;17860:2;17855:3;17796:67;:::i;:::-;17789:74;;17872:93;17961:3;17872:93;:::i;:::-;17990:2;17985:3;17981:12;17974:19;;17633:366;;;:::o;18005:419::-;18171:4;18209:2;18198:9;18194:18;18186:26;;18258:9;18252:4;18248:20;18244:1;18233:9;18229:17;18222:47;18286:131;18412:4;18286:131;:::i;:::-;18278:139;;18005:419;;;:::o;18430:222::-;18570:34;18566:1;18558:6;18554:14;18547:58;18639:5;18634:2;18626:6;18622:15;18615:30;18430:222;:::o;18658:366::-;18800:3;18821:67;18885:2;18880:3;18821:67;:::i;:::-;18814:74;;18897:93;18986:3;18897:93;:::i;:::-;19015:2;19010:3;19006:12;18999:19;;18658:366;;;:::o;19030:419::-;19196:4;19234:2;19223:9;19219:18;19211:26;;19283:9;19277:4;19273:20;19269:1;19258:9;19254:17;19247:47;19311:131;19437:4;19311:131;:::i;:::-;19303:139;;19030:419;;;:::o;19455:332::-;19576:4;19614:2;19603:9;19599:18;19591:26;;19627:71;19695:1;19684:9;19680:17;19671:6;19627:71;:::i;:::-;19708:72;19776:2;19765:9;19761:18;19752:6;19708:72;:::i;:::-;19455:332;;;;;:::o;19793:236::-;19933:34;19929:1;19921:6;19917:14;19910:58;20002:19;19997:2;19989:6;19985:15;19978:44;19793:236;:::o;20035:366::-;20177:3;20198:67;20262:2;20257:3;20198:67;:::i;:::-;20191:74;;20274:93;20363:3;20274:93;:::i;:::-;20392:2;20387:3;20383:12;20376:19;;20035:366;;;:::o;20407:419::-;20573:4;20611:2;20600:9;20596:18;20588:26;;20660:9;20654:4;20650:20;20646:1;20635:9;20631:17;20624:47;20688:131;20814:4;20688:131;:::i;:::-;20680:139;;20407:419;;;:::o;20832:442::-;20981:4;21019:2;21008:9;21004:18;20996:26;;21032:71;21100:1;21089:9;21085:17;21076:6;21032:71;:::i;:::-;21113:72;21181:2;21170:9;21166:18;21157:6;21113:72;:::i;:::-;21195;21263:2;21252:9;21248:18;21239:6;21195:72;:::i;:::-;20832:442;;;;;;:::o;21280:91::-;21316:7;21356:8;21349:5;21345:20;21334:31;;21280:91;;;:::o;21377:115::-;21462:23;21479:5;21462:23;:::i;:::-;21457:3;21450:36;21377:115;;:::o;21498:438::-;21645:4;21683:2;21672:9;21668:18;21660:26;;21696:71;21764:1;21753:9;21749:17;21740:6;21696:71;:::i;:::-;21777:72;21845:2;21834:9;21830:18;21821:6;21777:72;:::i;:::-;21859:70;21925:2;21914:9;21910:18;21901:6;21859:70;:::i;:::-;21498:438;;;;;;:::o;21942:172::-;22082:24;22078:1;22070:6;22066:14;22059:48;21942:172;:::o;22120:366::-;22262:3;22283:67;22347:2;22342:3;22283:67;:::i;:::-;22276:74;;22359:93;22448:3;22359:93;:::i;:::-;22477:2;22472:3;22468:12;22461:19;;22120:366;;;:::o;22492:419::-;22658:4;22696:2;22685:9;22681:18;22673:26;;22745:9;22739:4;22735:20;22731:1;22720:9;22716:17;22709:47;22773:131;22899:4;22773:131;:::i;:::-;22765:139;;22492:419;;;:::o;22917:90::-;22967:7;22996:5;22985:16;;22917:90;;;:::o;23013:166::-;23075:9;23108:65;23125:47;23134:37;23165:5;23134:37;:::i;:::-;23125:47;:::i;:::-;23108:65;:::i;:::-;23095:78;;23013:166;;;:::o;23185:155::-;23284:49;23327:5;23284:49;:::i;:::-;23279:3;23272:62;23185:155;;:::o;23346:246::-;23451:4;23489:2;23478:9;23474:18;23466:26;;23502:83;23582:1;23571:9;23567:17;23558:6;23502:83;:::i;:::-;23346:246;;;;:::o;23598:175::-;23738:27;23734:1;23726:6;23722:14;23715:51;23598:175;:::o;23779:366::-;23921:3;23942:67;24006:2;24001:3;23942:67;:::i;:::-;23935:74;;24018:93;24107:3;24018:93;:::i;:::-;24136:2;24131:3;24127:12;24120:19;;23779:366;;;:::o;24151:419::-;24317:4;24355:2;24344:9;24340:18;24332:26;;24404:9;24398:4;24394:20;24390:1;24379:9;24375:17;24368:47;24432:131;24558:4;24432:131;:::i;:::-;24424:139;;24151:419;;;:::o;24576:108::-;24653:24;24671:5;24653:24;:::i;:::-;24648:3;24641:37;24576:108;;:::o;24690:105::-;24765:23;24782:5;24765:23;:::i;:::-;24760:3;24753:36;24690:105;;:::o;24801:90::-;24836:7;24879:5;24876:1;24865:20;24854:31;;24801:90;;;:::o;24897:102::-;24970:22;24986:5;24970:22;:::i;:::-;24965:3;24958:35;24897:102;;:::o;25005:108::-;25082:24;25100:5;25082:24;:::i;:::-;25077:3;25070:37;25005:108;;:::o;25183:1772::-;25336:6;25331:3;25327:16;25427:4;25420:5;25416:16;25410:23;25446:63;25503:4;25498:3;25494:14;25480:12;25446:63;:::i;:::-;25353:166;25603:4;25596:5;25592:16;25586:23;25622:63;25679:4;25674:3;25670:14;25656:12;25622:63;:::i;:::-;25529:166;25776:4;25769:5;25765:16;25759:23;25795:61;25850:4;25845:3;25841:14;25827:12;25795:61;:::i;:::-;25705:161;25953:4;25946:5;25942:16;25936:23;25972:59;26025:4;26020:3;26016:14;26002:12;25972:59;:::i;:::-;25876:165;26128:4;26121:5;26117:16;26111:23;26147:59;26200:4;26195:3;26191:14;26177:12;26147:59;:::i;:::-;26051:165;26308:4;26301:5;26297:16;26291:23;26327:63;26384:4;26379:3;26375:14;26361:12;26327:63;:::i;:::-;26226:174;26492:4;26485:5;26481:16;26475:23;26511:63;26568:4;26563:3;26559:14;26545:12;26511:63;:::i;:::-;26410:174;26672:4;26665:5;26661:16;26655:23;26691:63;26748:4;26743:3;26739:14;26725:12;26691:63;:::i;:::-;26594:170;26852:6;26845:5;26841:18;26835:25;26873:65;26930:6;26925:3;26921:16;26907:12;26873:65;:::i;:::-;26774:174;25305:1650;25183:1772;;:::o;26961:335::-;27110:4;27148:3;27137:9;27133:19;27125:27;;27162:127;27286:1;27275:9;27271:17;27262:6;27162:127;:::i;:::-;26961:335;;;;:::o;27302:442::-;27451:4;27489:2;27478:9;27474:18;27466:26;;27502:71;27570:1;27559:9;27555:17;27546:6;27502:71;:::i;:::-;27583:72;27651:2;27640:9;27636:18;27627:6;27583:72;:::i;:::-;27665;27733:2;27722:9;27718:18;27709:6;27665:72;:::i;:::-;27302:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2301400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEVELOPER_SUPPLY()": "436",
								"INVESTOR_SUPPLY()": "392",
								"MINT_LIMIT_PER_INVESTOR()": "349",
								"TOTAL_SUPPLY()": "436",
								"USDTAddress()": "2640",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"buyBack(address,uint256)": "infinite",
								"currentSupply()": "2492",
								"decimals()": "383",
								"developerWallet()": "2620",
								"mintInvestor(uint256)": "infinite",
								"mintedTokens(address)": "2847",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"bytesToAddress(bytes memory)": "infinite",
								"poolInit(address,address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1657,
									"end": 1926,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1783,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4E5A4620546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4E5A460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1817,
									"end": 1833,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1799,
									"end": 1814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1833,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1869,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1854,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1843,
									"end": 1854,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1869,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1919,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1885,
									"end": 1900,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 744,
									"end": 764,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1879,
									"end": 1884,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1879,
									"end": 1884,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1879,
									"end": 1884,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1919,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1879,
									"end": 1919,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1919,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1919,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1879,
									"end": 1919,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1926,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6985,
									"end": 7062,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6975,
									"end": 7063,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 7079,
									"end": 7080,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7106,
									"end": 7110,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7096,
									"end": 7111,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7163,
									"end": 7166,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7182,
									"end": 7202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 7200,
									"end": 7201,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7182,
									"end": 7202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 7182,
									"end": 7202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7182,
									"end": 7202,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 7182,
									"end": 7202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7177,
									"end": 7202,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7177,
									"end": 7202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7216,
									"end": 7236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7216,
									"end": 7236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 7216,
									"end": 7236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7216,
									"end": 7236,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 7216,
									"end": 7236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7211,
									"end": 7236,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7211,
									"end": 7236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7256,
									"end": 7257,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7252,
									"end": 7261,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7245,
									"end": 7261,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7245,
									"end": 7261,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7280,
									"end": 7283,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7277,
									"end": 7278,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7274,
									"end": 7284,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7271,
									"end": 7307,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7271,
									"end": 7307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7271,
									"end": 7307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7287,
									"end": 7305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7287,
									"end": 7305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 7287,
									"end": 7305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7287,
									"end": 7305,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7287,
									"end": 7305,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7271,
									"end": 7307,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7271,
									"end": 7307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7123,
									"end": 7314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7438,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 7320,
									"end": 7438,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7407,
									"end": 7431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 7425,
									"end": 7430,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7407,
									"end": 7431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 7407,
									"end": 7431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7407,
									"end": 7431,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 7407,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7402,
									"end": 7405,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7432,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7438,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7438,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7593,
									"end": 7597,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7631,
									"end": 7633,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 7620,
									"end": 7629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7616,
									"end": 7634,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7608,
									"end": 7634,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7608,
									"end": 7634,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7644,
									"end": 7715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 7712,
									"end": 7713,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7701,
									"end": 7710,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7697,
									"end": 7714,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7644,
									"end": 7715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 7644,
									"end": 7715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7644,
									"end": 7715,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 7644,
									"end": 7715,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7725,
									"end": 7797,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7793,
									"end": 7795,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7782,
									"end": 7791,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7778,
									"end": 7796,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7769,
									"end": 7775,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7725,
									"end": 7797,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 7725,
									"end": 7797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7725,
									"end": 7797,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7725,
									"end": 7797,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7875,
									"end": 7877,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7864,
									"end": 7873,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7860,
									"end": 7878,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7857,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 7807,
									"end": 7879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7879,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7807,
									"end": 7879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7886,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7985,
									"end": 7989,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8023,
									"end": 8025,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8012,
									"end": 8021,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8008,
									"end": 8026,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8000,
									"end": 8026,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8000,
									"end": 8026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8036,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8104,
									"end": 8105,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8093,
									"end": 8102,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8089,
									"end": 8106,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8080,
									"end": 8086,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8036,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 8036,
									"end": 8107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8036,
									"end": 8107,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8036,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 8114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 5414,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2358b6fd3cf22d51e92175cc2637cd2fe48a6795ac106f28445a30051600b4a64736f6c63430008180033",
									".code": [
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "D1B8DF22"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "E5A7EB75"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "FF920C74"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "7241DFA0"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "771282F6"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "902D55A5"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "329927A7"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "3CCFD60B"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "4FE72439"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "39600D2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "185870F9"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 5414,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 838,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 838,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1020,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1020,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 770,
											"end": 832,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 770,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 770,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2763,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 701,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 701,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1164,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1164,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1164,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1056,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 635,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 635,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 635,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4998,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4998,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1963,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1963,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1090,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1090,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 888,
											"end": 905,
											"name": "PUSH",
											"source": 9,
											"value": "43C33C1937564800000"
										},
										{
											"begin": 838,
											"end": 905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 838,
											"end": 905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 770,
											"end": 832,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 812,
											"end": 832,
											"name": "PUSH",
											"source": 9,
											"value": "771D2FA45345AA9000000"
										},
										{
											"begin": 770,
											"end": 832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2763,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1375,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 2880,
											"end": 2884,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2842,
											"end": 2886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2842,
											"end": 2886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2842,
											"end": 2886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2923,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2896,
											"end": 2949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2896,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 674,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "84595161401484A000000"
										},
										{
											"begin": 2967,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2967,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 2995,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2959,
											"end": 3017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2959,
											"end": 3017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3232,
											"end": 3274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "227628F3F023BB0B980B67D528571C95C6DAC1C"
										},
										{
											"begin": 3296,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F7ADDB930777E11B83A5E7494421EC4C589D0317"
										},
										{
											"begin": 3371,
											"end": 3374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F4"
										},
										{
											"begin": 3210,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3210,
											"end": 3384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3210,
											"end": 3384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3401,
											"end": 3412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3423,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3455,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3394,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3394,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 3463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 744,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 701,
											"end": 764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 701,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 674,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "84595161401484A000000"
										},
										{
											"begin": 635,
											"end": 695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 635,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1412,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1375,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1375,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5093,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5084,
											"end": 5094,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5076,
											"end": 5131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5076,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5143,
											"end": 5155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5165,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5161,
											"end": 5170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5337,
											"end": 5349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5171,
											"end": 5350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DD5A12D800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5161,
											"end": 5360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5378,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5370,
											"end": 5404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5370,
											"end": 5404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5066,
											"end": 5411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 674,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "84595161401484A000000"
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1506,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1506,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1506,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1498,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1498,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43C33C1937564800000"
										},
										{
											"begin": 2057,
											"end": 2063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2090,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2090,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2036,
											"end": 2147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2036,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43C33C1937564800000"
										},
										{
											"begin": 2205,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2202,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2178,
											"end": 2211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2178,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2238,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2238,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2157,
											"end": 2299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2157,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2359,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2384,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2330,
											"end": 2386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2330,
											"end": 2386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2330,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2396,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2396,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2309,
											"end": 2471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2309,
											"end": 2471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2519,
											"end": 2529,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2543,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2552,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2482,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2482,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2570,
											"end": 2580,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2564,
											"end": 2589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2564,
											"end": 2589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2622,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2599,
											"end": 2633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2643,
											"end": 2656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2643,
											"end": 2666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2705,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8936D06B61AD023525017D83CB2CEC9D7A688F71EB45E3ED02A9BA311C17B51B"
										},
										{
											"begin": 2707,
											"end": 2713,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2682,
											"end": 2714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2714,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3648,
											"end": 3660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3721,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "A167129500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3690,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3901,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3901,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3976,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 4003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 4003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4047,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4053,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4053,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"source": 9,
											"value": "7A120"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4067,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "9A26BD8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4027,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4141,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 4141,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4197,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4197,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4221,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4197,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4311,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2764C"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4321,
											"end": 4337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "PUSH",
											"source": 9,
											"value": "D89B4"
										},
										{
											"begin": 4357,
											"end": 4363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4373,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4357,
											"end": 4373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4433,
											"name": "PUSH",
											"source": 9,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4484,
											"name": "PUSH",
											"source": 9,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4464,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4443,
											"end": 4464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4511,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4494,
											"end": 4511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4525,
											"end": 4542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4597,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4597,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4611,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "AA88A96C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4571,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4776,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4801,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4786,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4786,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 4827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4992,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4838,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4902,
											"end": 4914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4967,
											"end": 4970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 4976,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "271"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SIGNEXTEND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SIGNEXTEND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2230,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2418,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2573,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2691,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2716,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3022,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3167,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3295,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3454,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3455,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3548,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3536,
											"end": 3570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3720,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3885,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4066,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4137,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4066,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4292,
											"end": 4294,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4260,
											"end": 4379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4260,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4260,
											"end": 4379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4298,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4298,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4377,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4298,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4260,
											"end": 4379,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4260,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4477,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4443,
											"end": 4496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4496,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4443,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4496,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4571,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4624,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4516,
											"end": 4634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 4744,
											"end": 4751,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4733,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4699,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4752,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 4699,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4689,
											"end": 4752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4689,
											"end": 4752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4644,
											"end": 4762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4861,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4775,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4854,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4843,
											"end": 4848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4855,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4979,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4867,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 4966,
											"end": 4971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4950,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4972,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 4950,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4945,
											"end": 4948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4973,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4867,
											"end": 4979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5125,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6116,
											"end": 6125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6126,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6131,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6096,
											"end": 6215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6134,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 6134,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6213,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6134,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6215,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6096,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 7031,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6867,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7023,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7024,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 7031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 7031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 7200,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7365,
											"end": 7368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7276,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7385,
											"end": 7397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7690,
											"end": 7821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7682,
											"end": 7821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7682,
											"end": 7821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7929,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 7965,
											"end": 7970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 7938,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7971,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 7938,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7834,
											"end": 7977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8081,
											"end": 8088,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8077,
											"end": 8100,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8105,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8070,
											"end": 8189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8108,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8108,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8108,
											"end": 8187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8108,
											"end": 8187,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8108,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8189,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8070,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8309,
											"end": 8316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8300,
											"end": 8306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8285,
											"end": 8307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 8253,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8317,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8253,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8243,
											"end": 8317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8243,
											"end": 8317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8199,
											"end": 8327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 8334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8511,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 8340,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8503,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8468,
											"end": 8474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8517,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8744,
											"end": 8746,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8739,
											"end": 8742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8680,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8680,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 8756,
											"end": 8849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8849,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8756,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8858,
											"end": 8877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8858,
											"end": 8877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8883,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9055,
											"end": 9059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9082,
											"end": 9091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9070,
											"end": 9096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9070,
											"end": 9096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9152,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9296,
											"end": 9300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9170,
											"end": 9301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9170,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9481,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 9314,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9473,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420456E6F75676820537570706C79000000000000000000000000000000"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9442,
											"end": 9448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9431,
											"end": 9474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9853,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 9487,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9629,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9714,
											"end": 9716,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9709,
											"end": 9712,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 9650,
											"end": 9717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9717,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9650,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 9726,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9819,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9726,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9844,
											"end": 9846,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9835,
											"end": 9847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 10278,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 9859,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10102,
											"end": 10122,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10096,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10083,
											"end": 10100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 10266,
											"end": 10270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 10140,
											"end": 10271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10271,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 10140,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 10278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 10278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 10278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10443,
											"end": 10445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10432,
											"end": 10441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 10524,
											"end": 10525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10509,
											"end": 10526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10456,
											"end": 10527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10527,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 10456,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10537,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 10605,
											"end": 10607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10590,
											"end": 10608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10537,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 10537,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10537,
											"end": 10609,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 10537,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10738,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10622,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10707,
											"end": 10712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10692,
											"end": 10713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10713,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10692,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10685,
											"end": 10690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10714,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10672,
											"end": 10732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10730,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10732,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10672,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10829,
											"end": 10835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10823,
											"end": 10836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 10869,
											"end": 10874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10845,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10875,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 10845,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11003,
											"end": 11005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 10989,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10978,
											"end": 11001,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10974,
											"end": 11006,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 11090,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10971,
											"end": 11090,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11009,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11009,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 11009,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11009,
											"end": 11088,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 11009,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 11090,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10971,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11129,
											"end": 11130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 11207,
											"end": 11214,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11187,
											"end": 11196,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11183,
											"end": 11205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11154,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 11232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11238,
											"end": 11420,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11238,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11412,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11362,
											"end": 11376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11355,
											"end": 11413,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11238,
											"end": 11420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11238,
											"end": 11420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11792,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11426,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11589,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11648,
											"end": 11651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11589,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 11589,
											"end": 11656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11589,
											"end": 11656,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 11589,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 11754,
											"end": 11757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11665,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11758,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 11665,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11783,
											"end": 11785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11778,
											"end": 11781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11767,
											"end": 11786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11767,
											"end": 11786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12217,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 11798,
											"end": 12217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11964,
											"end": 11968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11991,
											"end": 12000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12045,
											"end": 12049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12061,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12035,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 12079,
											"end": 12210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12210,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 12079,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12071,
											"end": 12210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12071,
											"end": 12210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12217,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12223,
											"end": 12403,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 12223,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12348,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12261,
											"end": 12349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12358,
											"end": 12373,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12494,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12409,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12483,
											"end": 12488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12560,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12500,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12542,
											"end": 12554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12542,
											"end": 12554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12720,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12566,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12671,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 12680,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 12706,
											"end": 12711,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12680,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12680,
											"end": 12712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12680,
											"end": 12712,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 12680,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12671,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12671,
											"end": 12713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12671,
											"end": 12713,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 12671,
											"end": 12713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12655,
											"end": 12714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12869,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12726,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 12856,
											"end": 12861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12819,
											"end": 12862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12862,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 12819,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12863,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12973,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12875,
											"end": 12973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12926,
											"end": 12932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12960,
											"end": 12965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12954,
											"end": 12966,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13062,
											"end": 13073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13096,
											"end": 13102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13091,
											"end": 13094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13136,
											"end": 13140,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13131,
											"end": 13134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13239,
											"end": 13242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13267,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 13299,
											"end": 13304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13267,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 13267,
											"end": 13305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13267,
											"end": 13305,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 13267,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 13384,
											"end": 13390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13379,
											"end": 13382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13321,
											"end": 13391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13391,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 13321,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13391,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13458,
											"end": 13464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13453,
											"end": 13456,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13446,
											"end": 13450,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13439,
											"end": 13444,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13400,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13465,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13400,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13512,
											"end": 13518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 13490,
											"end": 13519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13519,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13490,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13485,
											"end": 13488,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13799,
											"end": 13802,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13879,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13857,
											"end": 13863,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 13813,
											"end": 13884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13884,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 13813,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 13956,
											"end": 13958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13932,
											"end": 13938,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 13894,
											"end": 13960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13960,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 13894,
											"end": 13960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14033,
											"end": 14042,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14020,
											"end": 14026,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13970,
											"end": 14048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 14048,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 13970,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 14132,
											"end": 14134,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14121,
											"end": 14130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14114,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 14058,
											"end": 14136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14136,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 14058,
											"end": 14136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14174,
											"end": 14194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14168,
											"end": 14171,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14153,
											"end": 14172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14146,
											"end": 14195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14212,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 14283,
											"end": 14287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14212,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 14212,
											"end": 14288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14212,
											"end": 14288,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 14212,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14204,
											"end": 14288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14204,
											"end": 14288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 14295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14402,
											"end": 14413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14558,
											"end": 14561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 14618,
											"end": 14623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 14586,
											"end": 14624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14624,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 14586,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14716,
											"end": 14719,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 14640,
											"end": 14728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14728,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 14640,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14728,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14737,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 14795,
											"end": 14801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14793,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14776,
											"end": 14781,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14772,
											"end": 14788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14737,
											"end": 14802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14737,
											"end": 14802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14737,
											"end": 14802,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 14737,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14827,
											"end": 14833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14822,
											"end": 14825,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14818,
											"end": 14834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14811,
											"end": 14834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14811,
											"end": 14834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14562,
											"end": 14840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14976,
											"end": 14979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15078,
											"end": 15084,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 14998,
											"end": 15091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15091,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 14998,
											"end": 15091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15108,
											"end": 15111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15101,
											"end": 15111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15101,
											"end": 15111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 15117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15287,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 15123,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15279,
											"name": "PUSH",
											"source": 10,
											"value": "4661696C656420746F204D696E74000000000000000000000000000000000000"
										},
										{
											"begin": 15259,
											"end": 15260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15251,
											"end": 15257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15659,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 15293,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15435,
											"end": 15438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 15520,
											"end": 15522,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 15515,
											"end": 15518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 15456,
											"end": 15523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15523,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 15456,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15449,
											"end": 15523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15449,
											"end": 15523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15532,
											"end": 15625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 15621,
											"end": 15624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15532,
											"end": 15625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 15532,
											"end": 15625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15532,
											"end": 15625,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 15532,
											"end": 15625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15650,
											"end": 15652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15641,
											"end": 15653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15634,
											"end": 15653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15634,
											"end": 15653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 16084,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 15665,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15831,
											"end": 15835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15869,
											"end": 15871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15858,
											"end": 15867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15846,
											"end": 15872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15846,
											"end": 15872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15918,
											"end": 15927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15908,
											"end": 15928,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15904,
											"end": 15905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15893,
											"end": 15902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15946,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 16072,
											"end": 16076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15946,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 15946,
											"end": 16077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15946,
											"end": 16077,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 15946,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15938,
											"end": 16077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15938,
											"end": 16077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 16084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 16084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 16084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 16084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16090,
											"end": 16270,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 16090,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16215,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16135,
											"end": 16136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16128,
											"end": 16216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16239,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 16232,
											"end": 16233,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16225,
											"end": 16240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16263,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16256,
											"end": 16257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16264,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16335,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 16353,
											"end": 16354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16335,
											"end": 16355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16355,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 16335,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 16387,
											"end": 16388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16369,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16412,
											"end": 16413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16405,
											"end": 16414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16433,
											"end": 16436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16430,
											"end": 16431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16427,
											"end": 16437,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16424,
											"end": 16460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16424,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 16424,
											"end": 16460,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16440,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 16440,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 16440,
											"end": 16458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16440,
											"end": 16458,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 16440,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16424,
											"end": 16460,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 16424,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16473,
											"end": 16643,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 16473,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16613,
											"end": 16635,
											"name": "PUSH",
											"source": 10,
											"value": "4578636565647320746F74616C20737570706C79000000000000000000000000"
										},
										{
											"begin": 16609,
											"end": 16610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16473,
											"end": 16643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16473,
											"end": 16643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16649,
											"end": 17015,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 16649,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16791,
											"end": 16794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16812,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 16876,
											"end": 16878,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 16871,
											"end": 16874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16812,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 16812,
											"end": 16879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16812,
											"end": 16879,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 16812,
											"end": 16879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 16879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 16879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16888,
											"end": 16981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 16977,
											"end": 16980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16888,
											"end": 16981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 16888,
											"end": 16981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16888,
											"end": 16981,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 16888,
											"end": 16981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17001,
											"end": 17004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16649,
											"end": 17015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16649,
											"end": 17015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16649,
											"end": 17015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16649,
											"end": 17015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17021,
											"end": 17440,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 17021,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17225,
											"end": 17227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17214,
											"end": 17223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17274,
											"end": 17283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17264,
											"end": 17284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17260,
											"end": 17261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17249,
											"end": 17258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17245,
											"end": 17262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17238,
											"end": 17285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 17428,
											"end": 17432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 17302,
											"end": 17433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17433,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 17302,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17021,
											"end": 17440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17021,
											"end": 17440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17021,
											"end": 17440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17021,
											"end": 17440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17446,
											"end": 17627,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 17446,
											"end": 17627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17619,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D696E74206C696D69742070657220696E766573746F7200"
										},
										{
											"begin": 17582,
											"end": 17583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17563,
											"end": 17620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17446,
											"end": 17627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17446,
											"end": 17627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17999,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 17633,
											"end": 17999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17775,
											"end": 17778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17796,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 17860,
											"end": 17862,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 17855,
											"end": 17858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17796,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 17796,
											"end": 17863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17796,
											"end": 17863,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 17796,
											"end": 17863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17789,
											"end": 17863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17789,
											"end": 17863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17872,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 17961,
											"end": 17964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17872,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 17872,
											"end": 17965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17872,
											"end": 17965,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 17872,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17990,
											"end": 17992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17985,
											"end": 17988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17981,
											"end": 17993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 17993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 17993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18424,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 18005,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18171,
											"end": 18175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18209,
											"end": 18211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18198,
											"end": 18207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18194,
											"end": 18212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18252,
											"end": 18256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18248,
											"end": 18268,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18244,
											"end": 18245,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18233,
											"end": 18242,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18222,
											"end": 18269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 18412,
											"end": 18416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 18286,
											"end": 18417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18417,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 18286,
											"end": 18417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18430,
											"end": 18652,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18430,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18570,
											"end": 18604,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D696E74206C696D697420666F722074686520696E766573"
										},
										{
											"begin": 18566,
											"end": 18567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18558,
											"end": 18564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18554,
											"end": 18568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18547,
											"end": 18605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18639,
											"end": 18644,
											"name": "PUSH",
											"source": 10,
											"value": "746F720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18634,
											"end": 18636,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18626,
											"end": 18632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18615,
											"end": 18645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18430,
											"end": 18652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18430,
											"end": 18652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18658,
											"end": 19024,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 18658,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18800,
											"end": 18803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18821,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 18885,
											"end": 18887,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 18880,
											"end": 18883,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18821,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 18821,
											"end": 18888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18821,
											"end": 18888,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 18821,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18814,
											"end": 18888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18814,
											"end": 18888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 18986,
											"end": 18989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18897,
											"end": 18990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18990,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 18897,
											"end": 18990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19017,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19010,
											"end": 19013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19006,
											"end": 19018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18658,
											"end": 19024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18658,
											"end": 19024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18658,
											"end": 19024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18658,
											"end": 19024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19196,
											"end": 19200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19234,
											"end": 19236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19223,
											"end": 19232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19219,
											"end": 19237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19211,
											"end": 19237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19211,
											"end": 19237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19283,
											"end": 19292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19277,
											"end": 19281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19273,
											"end": 19293,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19269,
											"end": 19270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19258,
											"end": 19267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19254,
											"end": 19271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19294,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19311,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 19437,
											"end": 19441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19311,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 19311,
											"end": 19442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19311,
											"end": 19442,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 19311,
											"end": 19442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19303,
											"end": 19442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19303,
											"end": 19442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19576,
											"end": 19580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19599,
											"end": 19617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19591,
											"end": 19617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19591,
											"end": 19617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 19695,
											"end": 19696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19684,
											"end": 19693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19680,
											"end": 19697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19671,
											"end": 19677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 19627,
											"end": 19698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19698,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 19627,
											"end": 19698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 19776,
											"end": 19778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19765,
											"end": 19774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19761,
											"end": 19779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19752,
											"end": 19758,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 19708,
											"end": 19780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19780,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 19708,
											"end": 19780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19793,
											"end": 20029,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 19793,
											"end": 20029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 19967,
											"name": "PUSH",
											"source": 10,
											"value": "596F75206D75737420617070726F76652074686520636F6E747261637420746F"
										},
										{
											"begin": 19929,
											"end": 19930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19921,
											"end": 19927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19917,
											"end": 19931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19910,
											"end": 19968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20002,
											"end": 20021,
											"name": "PUSH",
											"source": 10,
											"value": "2061636365737320796F75722055534454000000000000000000000000000000"
										},
										{
											"begin": 19997,
											"end": 19999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19989,
											"end": 19995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19985,
											"end": 20000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19978,
											"end": 20022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19793,
											"end": 20029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19793,
											"end": 20029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20401,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 20035,
											"end": 20401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20177,
											"end": 20180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 20262,
											"end": 20264,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 20257,
											"end": 20260,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20198,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 20198,
											"end": 20265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20198,
											"end": 20265,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 20198,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20191,
											"end": 20265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20191,
											"end": 20265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 20363,
											"end": 20366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 20274,
											"end": 20367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20367,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 20274,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20392,
											"end": 20394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20383,
											"end": 20395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20376,
											"end": 20395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20376,
											"end": 20395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20826,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 20407,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20573,
											"end": 20577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20611,
											"end": 20613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20600,
											"end": 20609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20596,
											"end": 20614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20588,
											"end": 20614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20588,
											"end": 20614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20660,
											"end": 20669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20654,
											"end": 20658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20650,
											"end": 20670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20635,
											"end": 20644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20631,
											"end": 20648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20624,
											"end": 20671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20688,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 20814,
											"end": 20818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20688,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 20688,
											"end": 20819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20688,
											"end": 20819,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 20688,
											"end": 20819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20680,
											"end": 20819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20680,
											"end": 20819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20407,
											"end": 20826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 20985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21019,
											"end": 21021,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21008,
											"end": 21017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21004,
											"end": 21022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20996,
											"end": 21022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20996,
											"end": 21022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21032,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 21100,
											"end": 21101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21089,
											"end": 21098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21076,
											"end": 21082,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21032,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 21032,
											"end": 21103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21032,
											"end": 21103,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 21032,
											"end": 21103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 21181,
											"end": 21183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21170,
											"end": 21179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21157,
											"end": 21163,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 21113,
											"end": 21185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21185,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 21113,
											"end": 21185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21195,
											"end": 21267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 21263,
											"end": 21265,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21252,
											"end": 21261,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21248,
											"end": 21266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21239,
											"end": 21245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21195,
											"end": 21267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 21195,
											"end": 21267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21195,
											"end": 21267,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 21195,
											"end": 21267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 21274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21371,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 21280,
											"end": 21371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21316,
											"end": 21323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21356,
											"end": 21364,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFF"
										},
										{
											"begin": 21349,
											"end": 21354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21334,
											"end": 21365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21334,
											"end": 21365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21377,
											"end": 21492,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 21377,
											"end": 21492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21462,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 21479,
											"end": 21484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21462,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 21462,
											"end": 21485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21462,
											"end": 21485,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 21462,
											"end": 21485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21450,
											"end": 21486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21377,
											"end": 21492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21377,
											"end": 21492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21377,
											"end": 21492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21683,
											"end": 21685,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21672,
											"end": 21681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21668,
											"end": 21686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 21686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 21686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 21764,
											"end": 21765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21753,
											"end": 21762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21749,
											"end": 21766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21740,
											"end": 21746,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 21696,
											"end": 21767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21767,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 21696,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21777,
											"end": 21849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 21845,
											"end": 21847,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21834,
											"end": 21843,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21830,
											"end": 21848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21821,
											"end": 21827,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21777,
											"end": 21849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 21777,
											"end": 21849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21777,
											"end": 21849,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 21777,
											"end": 21849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21859,
											"end": 21929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 21925,
											"end": 21927,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21914,
											"end": 21923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21910,
											"end": 21928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21901,
											"end": 21907,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21859,
											"end": 21929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 21859,
											"end": 21929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21859,
											"end": 21929,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 21859,
											"end": 21929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21498,
											"end": 21936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22114,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 21942,
											"end": 22114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22082,
											"end": 22106,
											"name": "PUSH",
											"source": 10,
											"value": "4661696C656420746F2066696E6420466163746F727900000000000000000000"
										},
										{
											"begin": 22078,
											"end": 22079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22070,
											"end": 22076,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22066,
											"end": 22080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22059,
											"end": 22107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21942,
											"end": 22114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22120,
											"end": 22486,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 22120,
											"end": 22486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22262,
											"end": 22265,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22283,
											"end": 22350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 22347,
											"end": 22349,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 22342,
											"end": 22345,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22283,
											"end": 22350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 22283,
											"end": 22350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22283,
											"end": 22350,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 22283,
											"end": 22350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22276,
											"end": 22350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22276,
											"end": 22350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 22448,
											"end": 22451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 22359,
											"end": 22452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22359,
											"end": 22452,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 22359,
											"end": 22452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22477,
											"end": 22479,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22472,
											"end": 22475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22468,
											"end": 22480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22120,
											"end": 22486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22120,
											"end": 22486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22120,
											"end": 22486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22120,
											"end": 22486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22911,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 22492,
											"end": 22911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22658,
											"end": 22662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22696,
											"end": 22698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22685,
											"end": 22694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22673,
											"end": 22699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22673,
											"end": 22699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22745,
											"end": 22754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22739,
											"end": 22743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22735,
											"end": 22755,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22731,
											"end": 22732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22720,
											"end": 22729,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22716,
											"end": 22733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22709,
											"end": 22756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22773,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 22899,
											"end": 22903,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22773,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 22773,
											"end": 22904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22773,
											"end": 22904,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 22773,
											"end": 22904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22765,
											"end": 22904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22765,
											"end": 22904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22911,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22917,
											"end": 23007,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 22917,
											"end": 23007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22967,
											"end": 22974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22996,
											"end": 23001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22985,
											"end": 23001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22985,
											"end": 23001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22917,
											"end": 23007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22917,
											"end": 23007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22917,
											"end": 23007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22917,
											"end": 23007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23179,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 23013,
											"end": 23179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23075,
											"end": 23084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23108,
											"end": 23173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 23125,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 23134,
											"end": 23171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 23165,
											"end": 23170,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23134,
											"end": 23171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 23134,
											"end": 23171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23134,
											"end": 23171,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 23134,
											"end": 23171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23125,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 23125,
											"end": 23172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23125,
											"end": 23172,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 23125,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 23108,
											"end": 23173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23173,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 23108,
											"end": 23173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23095,
											"end": 23173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23095,
											"end": 23173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23185,
											"end": 23340,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 23185,
											"end": 23340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23284,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 23327,
											"end": 23332,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23284,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 23284,
											"end": 23333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23284,
											"end": 23333,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 23284,
											"end": 23333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23279,
											"end": 23282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23272,
											"end": 23334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23185,
											"end": 23340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23185,
											"end": 23340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23185,
											"end": 23340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23451,
											"end": 23455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23489,
											"end": 23491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23478,
											"end": 23487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23474,
											"end": 23492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23466,
											"end": 23492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23466,
											"end": 23492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23502,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 23582,
											"end": 23583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23571,
											"end": 23580,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23567,
											"end": 23584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23558,
											"end": 23564,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23502,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 23502,
											"end": 23585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23502,
											"end": 23585,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 23502,
											"end": 23585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23598,
											"end": 23773,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 23598,
											"end": 23773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23738,
											"end": 23765,
											"name": "PUSH",
											"source": 10,
											"value": "4661696C656420746F20506F6F6C20696E697469616C697A6500000000000000"
										},
										{
											"begin": 23734,
											"end": 23735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23726,
											"end": 23732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23722,
											"end": 23736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23715,
											"end": 23766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23598,
											"end": 23773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23598,
											"end": 23773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23779,
											"end": 24145,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 23779,
											"end": 24145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23921,
											"end": 23924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23942,
											"end": 24009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 24006,
											"end": 24008,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 24001,
											"end": 24004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23942,
											"end": 24009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 23942,
											"end": 24009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23942,
											"end": 24009,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 23942,
											"end": 24009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23935,
											"end": 24009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23935,
											"end": 24009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24018,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 24107,
											"end": 24110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24018,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 24018,
											"end": 24111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24018,
											"end": 24111,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 24018,
											"end": 24111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24136,
											"end": 24138,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24131,
											"end": 24134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24127,
											"end": 24139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24120,
											"end": 24139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24120,
											"end": 24139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23779,
											"end": 24145,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23779,
											"end": 24145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23779,
											"end": 24145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23779,
											"end": 24145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24570,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 24151,
											"end": 24570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24317,
											"end": 24321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24355,
											"end": 24357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24344,
											"end": 24353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24340,
											"end": 24358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24332,
											"end": 24358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24332,
											"end": 24358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24404,
											"end": 24413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24398,
											"end": 24402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24394,
											"end": 24414,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24390,
											"end": 24391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24379,
											"end": 24388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24375,
											"end": 24392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24368,
											"end": 24415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24432,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 24558,
											"end": 24562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24432,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 24432,
											"end": 24563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24432,
											"end": 24563,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 24432,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24576,
											"end": 24684,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 24576,
											"end": 24684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24653,
											"end": 24677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 24671,
											"end": 24676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24653,
											"end": 24677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 24653,
											"end": 24677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24653,
											"end": 24677,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 24653,
											"end": 24677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24648,
											"end": 24651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24641,
											"end": 24678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24576,
											"end": 24684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24576,
											"end": 24684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24576,
											"end": 24684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24795,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 24690,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24765,
											"end": 24788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 24782,
											"end": 24787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24765,
											"end": 24788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 24765,
											"end": 24788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24765,
											"end": 24788,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 24765,
											"end": 24788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24760,
											"end": 24763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24753,
											"end": 24789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24690,
											"end": 24795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24801,
											"end": 24891,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 24801,
											"end": 24891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24836,
											"end": 24843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24879,
											"end": 24884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24876,
											"end": 24877,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 24865,
											"end": 24885,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 24854,
											"end": 24885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24854,
											"end": 24885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24801,
											"end": 24891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24801,
											"end": 24891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24801,
											"end": 24891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24801,
											"end": 24891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24999,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 24897,
											"end": 24999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24970,
											"end": 24992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 24986,
											"end": 24991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24970,
											"end": 24992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 24970,
											"end": 24992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24970,
											"end": 24992,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 24970,
											"end": 24992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24965,
											"end": 24968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 24993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25113,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 25005,
											"end": 25113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25082,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 25100,
											"end": 25105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25082,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 25082,
											"end": 25106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25082,
											"end": 25106,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 25082,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25077,
											"end": 25080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25070,
											"end": 25107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 26955,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 25183,
											"end": 26955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25336,
											"end": 25342,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 25331,
											"end": 25334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25327,
											"end": 25343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25427,
											"end": 25431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25420,
											"end": 25425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25416,
											"end": 25432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25410,
											"end": 25433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25446,
											"end": 25509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 25503,
											"end": 25507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25498,
											"end": 25501,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25494,
											"end": 25508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25446,
											"end": 25509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 25446,
											"end": 25509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25446,
											"end": 25509,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 25446,
											"end": 25509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25353,
											"end": 25519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25603,
											"end": 25607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25596,
											"end": 25601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25592,
											"end": 25608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25586,
											"end": 25609,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 25679,
											"end": 25683,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25674,
											"end": 25677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25670,
											"end": 25684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25656,
											"end": 25668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 25622,
											"end": 25685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25685,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 25622,
											"end": 25685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25529,
											"end": 25695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25776,
											"end": 25780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25769,
											"end": 25774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25765,
											"end": 25781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25759,
											"end": 25782,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25795,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 25850,
											"end": 25854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25845,
											"end": 25848,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25841,
											"end": 25855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25827,
											"end": 25839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25795,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 25795,
											"end": 25856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25795,
											"end": 25856,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 25795,
											"end": 25856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25705,
											"end": 25866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25953,
											"end": 25957,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 25946,
											"end": 25951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25942,
											"end": 25958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25936,
											"end": 25959,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25972,
											"end": 26031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 26025,
											"end": 26029,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 26020,
											"end": 26023,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26016,
											"end": 26030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26002,
											"end": 26014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25972,
											"end": 26031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 25972,
											"end": 26031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25972,
											"end": 26031,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 25972,
											"end": 26031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25876,
											"end": 26041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26128,
											"end": 26132,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26117,
											"end": 26133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26111,
											"end": 26134,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26147,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 26200,
											"end": 26204,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 26195,
											"end": 26198,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26191,
											"end": 26205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26177,
											"end": 26189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26147,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 26147,
											"end": 26206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26147,
											"end": 26206,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 26147,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26051,
											"end": 26216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26308,
											"end": 26312,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 26301,
											"end": 26306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26297,
											"end": 26313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26291,
											"end": 26314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26327,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 26384,
											"end": 26388,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 26379,
											"end": 26382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26375,
											"end": 26389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26361,
											"end": 26373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26327,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 26327,
											"end": 26390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26327,
											"end": 26390,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 26327,
											"end": 26390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26226,
											"end": 26400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26492,
											"end": 26496,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 26485,
											"end": 26490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26481,
											"end": 26497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26475,
											"end": 26498,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26511,
											"end": 26574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 26568,
											"end": 26572,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 26563,
											"end": 26566,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26559,
											"end": 26573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26545,
											"end": 26557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26511,
											"end": 26574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 26511,
											"end": 26574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26511,
											"end": 26574,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 26511,
											"end": 26574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26410,
											"end": 26584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26672,
											"end": 26676,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 26665,
											"end": 26670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 26677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26691,
											"end": 26754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 26748,
											"end": 26752,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 26743,
											"end": 26746,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26739,
											"end": 26753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26725,
											"end": 26737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26691,
											"end": 26754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 26691,
											"end": 26754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26691,
											"end": 26754,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 26691,
											"end": 26754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26594,
											"end": 26764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26852,
											"end": 26858,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 26845,
											"end": 26850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26841,
											"end": 26859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26835,
											"end": 26860,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26873,
											"end": 26938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 26930,
											"end": 26936,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 26925,
											"end": 26928,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26921,
											"end": 26937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26907,
											"end": 26919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26873,
											"end": 26938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 26873,
											"end": 26938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26873,
											"end": 26938,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 26873,
											"end": 26938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26774,
											"end": 26948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25305,
											"end": 26955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 26955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 26955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 26955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27110,
											"end": 27114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27148,
											"end": 27151,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 27137,
											"end": 27146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27133,
											"end": 27152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27125,
											"end": 27152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27125,
											"end": 27152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 27286,
											"end": 27287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27275,
											"end": 27284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27271,
											"end": 27288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27262,
											"end": 27268,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 27162,
											"end": 27289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27289,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 27162,
											"end": 27289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 27296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27451,
											"end": 27455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27489,
											"end": 27491,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 27478,
											"end": 27487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27474,
											"end": 27492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27466,
											"end": 27492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27466,
											"end": 27492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27502,
											"end": 27573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 27570,
											"end": 27571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27559,
											"end": 27568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27555,
											"end": 27572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27546,
											"end": 27552,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 27502,
											"end": 27573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 27502,
											"end": 27573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27502,
											"end": 27573,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 27502,
											"end": 27573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27583,
											"end": 27655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 27651,
											"end": 27653,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27640,
											"end": 27649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27636,
											"end": 27654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27627,
											"end": 27633,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27583,
											"end": 27655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 27583,
											"end": 27655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27583,
											"end": 27655,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 27583,
											"end": 27655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 27733,
											"end": 27735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 27722,
											"end": 27731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27718,
											"end": 27736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27715,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 27665,
											"end": 27737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27737,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 27665,
											"end": 27737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27302,
											"end": 27744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/Contract_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEVELOPER_SUPPLY()": "4fe72439",
							"INVESTOR_SUPPLY()": "329927a7",
							"MINT_LIMIT_PER_INVESTOR()": "039600d2",
							"TOTAL_SUPPLY()": "902d55a5",
							"USDTAddress()": "ff920c74",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyBack(address,uint256)": "d1b8df22",
							"currentSupply()": "771282f6",
							"decimals()": "313ce567",
							"developerWallet()": "185870f9",
							"mintInvestor(uint256)": "e5a7eb75",
							"mintedTokens(address)": "7241dfa0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_developerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DeveloperMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvestorMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEVELOPER_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVESTOR_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_LIMIT_PER_INVESTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract_1.sol\":\"NZFToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Contract_1.sol\":{\"keccak256\":\"0x2ff50aaf01a9898fe463c75540955ebc16bc4089c5b31865e2fcb91dabe3361c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afe97aad4602f4d41d3188de6c36b6c24fdfa050cc24898e756b06f365493252\",\"dweb:/ipfs/QmQX3hZAGqjmYM4bHFJWGirdg3tpjBpUKNwewvrwcRzepZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1579,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "developerWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1581,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "currentSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1583,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "USDTAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1587,
								"contract": "src/Contract_1.sol:NZFToken",
								"label": "mintedTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1513,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1512
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1513,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								1512
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							939
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 939,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 939,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 939,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 940,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							939
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 878,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 942,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 940,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 944,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 939,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1483,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 946,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1482,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 951,
									"libraryName": {
										"id": 949,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1482,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 956,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 965,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 980,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 982,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 978,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 976,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 967,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 1229,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1008,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1009,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1004,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 1229,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1033,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1029,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1040,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1042,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 1229,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 1088,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															1059
														],
														"declarations": [
															{
																"constant": false,
																"id": 1059,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 1088,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1064,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1062,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1066,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1060,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1070,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1079,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 1078,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1074,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1059,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1075,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1072,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1077,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1081,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1082,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1083,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1084,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1087,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 1229,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1101,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1105,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1107,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1103,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1113,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1114,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1112,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1118,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1121,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1123,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1096,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1125,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1119,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1117,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1130,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1129,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1092,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 877,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 1229,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1146,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"arguments": [
														{
															"id": 1153,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1150,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1303,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1156,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 1162,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1163,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1160,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1172,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1175,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 877,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 1229,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													1191,
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1190,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1202,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1203,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1209,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1210,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1212,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1207,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1219,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1226,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1181,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 877,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 1229,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1230,
							"src": "751:5018:6",
							"usedErrors": [
								956,
								965
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1482
						]
					},
					"id": 1483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1237,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1242,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1245,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1258,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1263,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1261,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1260,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1270,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1277,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1271,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 1278,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1280,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1482,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1296,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1301,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1482,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1317,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1320,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1325,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1323,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1322,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1335,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1337,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1345,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1342,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1347,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1482,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1360,
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1359,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1361,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [
														{
															"id": 1365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1371,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1368,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1373,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1482,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1386,
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1387,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1397,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1394,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1399,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1482,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1413,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1420,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1424,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1404,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1431,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1430,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1433,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1412,
															"id": 1437,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1416,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1415,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1482,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1451,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1450,
															"id": 1459,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1454,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1453,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1482,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1469,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1477,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1473,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1482,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1483,
							"src": "195:6066:7",
							"usedErrors": [
								1237,
								1242,
								1245
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1485,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1492,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1512,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1501,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1512,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1507,
												"id": 1509,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1512,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1513,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"src/Contract_1.sol": {
				"ast": {
					"absolutePath": "src/Contract_1.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC20Permit": [
							939
						],
						"NZFToken": [
							1984
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1985,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1985,
							"sourceUnit": 800,
							"src": "58:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1985,
							"sourceUnit": 878,
							"src": "114:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1985,
							"sourceUnit": 1230,
							"src": "171:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1985,
							"sourceUnit": 148,
							"src": "237:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1519,
										"name": "ERC20",
										"nameLocations": [
											"312:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "312:5:9"
									},
									"id": 1520,
									"nodeType": "InheritanceSpecifier",
									"src": "312:5:9"
								},
								{
									"baseName": {
										"id": 1521,
										"name": "Ownable",
										"nameLocations": [
											"319:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "319:7:9"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:9"
								}
							],
							"canonicalName": "NZFToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1984,
							"linearizedBaseContracts": [
								1984,
								147,
								799,
								189,
								903,
								877,
								1512
							],
							"name": "NZFToken",
							"nameLocation": "300:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1523,
										"name": "SafeERC20",
										"nameLocations": [
											"339:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "339:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "333:27:9",
									"typeName": {
										"id": 1525,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1524,
											"name": "IERC20",
											"nameLocations": [
												"353:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "353:6:9"
										},
										"referencedDeclaration": 877,
										"src": "353:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NZFToken.MintParams",
									"id": 1545,
									"members": [
										{
											"constant": false,
											"id": 1528,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "402:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "394:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1527,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "394:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1530,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "426:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "418:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1529,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "418:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1532,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "449:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "442:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1531,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "442:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1534,
											"mutability": "mutable",
											"name": "lowerTick",
											"nameLocation": "468:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "462:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1533,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "462:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1536,
											"mutability": "mutable",
											"name": "upperTick",
											"nameLocation": "493:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "487:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1535,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "487:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "520:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "512:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1537,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "512:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1540,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "552:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "544:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1539,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "544:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1542,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "584:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "576:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "576:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1544,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "612:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1545,
											"src": "604:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1543,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "604:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "373:10:9",
									"nodeType": "StructDefinition",
									"scope": 1984,
									"src": "366:263:9",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1553,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "659:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "635:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1546,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"id": 1552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 1547,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "674:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "688:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "692:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "688:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1551,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "687:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "674:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4fe72439",
									"id": 1561,
									"mutability": "constant",
									"name": "DEVELOPER_SUPPLY",
									"nameLocation": "725:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "701:63:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1554,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1560,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1555,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "744:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "757:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "761:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "757:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1559,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "756:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "744:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "329927a7",
									"id": 1569,
									"mutability": "constant",
									"name": "INVESTOR_SUPPLY",
									"nameLocation": "794:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "770:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_9000000000000000000000000_by_1",
											"typeString": "int_const 9000000000000000000000000"
										},
										"id": 1568,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "395f3030305f303030",
											"id": 1563,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "812:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_9000000_by_1",
												"typeString": "int_const 9000000"
											},
											"value": "9_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "825:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "829:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "825:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1567,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "824:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "812:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9000000000000000000000000_by_1",
											"typeString": "int_const 9000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "039600d2",
									"id": 1577,
									"mutability": "constant",
									"name": "MINT_LIMIT_PER_INVESTOR",
									"nameLocation": "862:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "838:67:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_20000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000"
										},
										"id": 1576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32305f303030",
											"id": 1571,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "888:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20000_by_1",
												"typeString": "int_const 20000"
											},
											"value": "20_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "898:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "902:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "898:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1575,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "897:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "888:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "185870f9",
									"id": 1579,
									"mutability": "mutable",
									"name": "developerWallet",
									"nameLocation": "1035:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "1020:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1578,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771282f6",
									"id": 1581,
									"mutability": "mutable",
									"name": "currentSupply",
									"nameLocation": "1071:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "1056:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1580,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1056:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff920c74",
									"id": 1583,
									"mutability": "mutable",
									"name": "USDTAddress",
									"nameLocation": "1105:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "1090:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1582,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7241dfa0",
									"id": 1587,
									"mutability": "mutable",
									"name": "mintedTokens",
									"nameLocation": "1199:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1984,
									"src": "1164:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1586,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1584,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1172:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1164:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1585,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "673ad46f4a30443e6b6ee27eeb47908c02e5daecb8fbe6a3247f634dd2cde3c1",
									"id": 1593,
									"name": "DeveloperMint",
									"nameLocation": "1224:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1254:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1238:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1266:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1258:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:36:9"
									},
									"src": "1218:56:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8936d06b61ad023525017d83cb2cec9d7a688f71eb45e3ed02a9ba311c17b51b",
									"id": 1599,
									"name": "InvestorMint",
									"nameLocation": "1285:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1314:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1298:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1326:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1318:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:36:9"
									},
									"src": "1279:55:9"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "1365:84:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1602,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1383:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1387:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1383:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1604,
																"name": "developerWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "1397:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1383:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1414:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1375:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "1375:56:9"
											},
											{
												"id": 1609,
												"nodeType": "PlaceholderStatement",
												"src": "1441:1:9"
											}
										]
									},
									"id": 1611,
									"name": "onlyDeveloper",
									"nameLocation": "1349:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:2:9"
									},
									"src": "1340:109:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "1488:99:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1616,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1506:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1506:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1618,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "1522:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1506:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1620,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "1532:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1506:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636565647320746f74616c20737570706c79",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1546:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c",
																"typeString": "literal_string \"Exceeds total supply\""
															},
															"value": "Exceeds total supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c",
																"typeString": "literal_string \"Exceeds total supply\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1498:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1498:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "1498:71:9"
											},
											{
												"id": 1625,
												"nodeType": "PlaceholderStatement",
												"src": "1579:1:9"
											}
										]
									},
									"id": 1627,
									"name": "canMint",
									"nameLocation": "1464:7:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1480:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1472:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:16:9"
									},
									"src": "1455:132:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "1789:137:9",
										"statements": [
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1641,
														"name": "developerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "1799:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1642,
														"name": "_developerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "1817:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1799:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "1799:34:9"
											},
											{
												"expression": {
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "USDTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "1843:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1646,
														"name": "_USDTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "1857:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1843:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "1843:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1650,
															"name": "developerWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "1885:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1651,
															"name": "DEVELOPER_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1902:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1879:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "1879:40:9"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e5a4620546f6b656e",
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1731:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_311aec4cc8a11b82f649a0b53bc5506b47f2d6f736c503ca0489d37a90d2cc21",
														"typeString": "literal_string \"NZF Token\""
													},
													"value": "NZF Token"
												},
												{
													"hexValue": "4e5a46",
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1744:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5583d929850d915f986373dcd101d20de32bff0903ce2a3a0ac9ae848bc8799",
														"typeString": "literal_string \"NZF\""
													},
													"value": "NZF"
												}
											],
											"id": 1636,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1633,
												"name": "ERC20",
												"nameLocations": [
													"1725:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1725:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1725:25:9"
										},
										{
											"arguments": [
												{
													"id": 1638,
													"name": "_developerWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1629,
													"src": "1767:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1639,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1637,
												"name": "Ownable",
												"nameLocations": [
													"1759:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1759:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1759:25:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "_developerWallet",
												"nameLocation": "1677:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1669:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "_USDTAddress",
												"nameLocation": "1703:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1695:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:48:9"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:9"
									},
									"scope": 1984,
									"src": "1657:269:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "2026:695:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1664,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "2057:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1665,
																"name": "MINT_LIMIT_PER_INVESTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "2067:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2057:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d696e74206c696d69742070657220696e766573746f72",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589",
																"typeString": "literal_string \"Exceeds mint limit per investor\""
															},
															"value": "Exceeds mint limit per investor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f7f01205bb6feb25bd1ca5129f7c3cb8704ce37adb281e66d8d0eb95c2fd589",
																"typeString": "literal_string \"Exceeds mint limit per investor\""
															}
														],
														"id": 1663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2036:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "2036:111:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1671,
																		"name": "mintedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "2178:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1674,
																	"indexExpression": {
																		"expression": {
																			"id": 1672,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2191:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2195:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2191:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2178:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1675,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "2205:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2178:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1677,
																"name": "MINT_LIMIT_PER_INVESTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "2215:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2178:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d696e74206c696d697420666f722074686520696e766573746f72",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2252:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8",
																"typeString": "literal_string \"Exceeds mint limit for the investor\""
															},
															"value": "Exceeds mint limit for the investor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5085e5b45b192fa93b6ec6f4b90f4770e7998a35b9ba98c23aeb14623e87acf8",
																"typeString": "literal_string \"Exceeds mint limit for the investor\""
															}
														],
														"id": 1670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:142:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "2157:142:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1687,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2360:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2364:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2360:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1691,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2380:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NZFToken_$1984",
																					"typeString": "contract NZFToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NZFToken_$1984",
																					"typeString": "contract NZFToken"
																				}
																			],
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2372:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1689,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2372:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2372:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1684,
																				"name": "USDTAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "2337:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1683,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2330:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2330:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2350:9:9",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "2330:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2330:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1694,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "2390:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2330:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d75737420617070726f76652074686520636f6e747261637420746f2061636365737320796f75722055534454",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2410:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7",
																"typeString": "literal_string \"You must approve the contract to access your USDT\""
															},
															"value": "You must approve the contract to access your USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d45934ee00da6e9d3453740a8834082dbd8a0070d8744c6ce7bee41ddd7856e7",
																"typeString": "literal_string \"You must approve the contract to access your USDT\""
															}
														],
														"id": 1682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2309:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:162:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "2309:162:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1703,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2519:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2523:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2519:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1707,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2539:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																],
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2531:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2531:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2546:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1700,
																	"name": "USDTAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "2489:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1699,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2482:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2502:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "2482:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2482:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "2482:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1713,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2570:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2574:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2570:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2582:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2564:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "2564:25:9"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1718,
															"name": "mintedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "2599:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1721,
														"indexExpression": {
															"expression": {
																"id": 1719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2612:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2616:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2612:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2599:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1722,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "2627:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "2599:34:9"
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2643:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1726,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "2660:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2643:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "2643:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1730,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2695:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2699:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2695:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1732,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2707:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1729,
														"name": "InvestorMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2682:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "EmitStatement",
												"src": "2677:37:9"
											}
										]
									},
									"functionSelector": "e5a7eb75",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1660,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1657,
													"src": "2018:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "canMint",
												"nameLocations": [
													"2010:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1627,
												"src": "2010:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2010:15:9"
										}
									],
									"name": "mintInvestor",
									"nameLocation": "1972:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1993:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "1985:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:16:9"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:9"
									},
									"scope": 1984,
									"src": "1963:758:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "2806:657:9",
										"statements": [
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "2824:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "2816:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2816:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1749,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2880:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																],
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2872:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2872:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2872:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1744,
																	"name": "USDTAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "2849:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1743,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2842:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2842:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2862:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2842:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2816:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "2904:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2922:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2904:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2925:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2896:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "2896:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1761,
																"name": "currentSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "2967:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1762,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "2983:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2967:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f75676820537570706c79",
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2997:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249",
																"typeString": "literal_string \"Not Enough Supply\""
															},
															"value": "Not Enough Supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_905444048723aad57021c7294f91d965b44257a40d94442f5a6088065e518249",
																"typeString": "literal_string \"Not Enough Supply\""
															}
														],
														"id": 1760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2959:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2959:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "2959:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307830323237363238663346303233626230423938306236374435323835373163393563364461433163",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3232:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x0227628f3F023bb0B980b67D528571c95c6DaC1c"
														},
														{
															"arguments": [
																{
																	"id": 1771,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3296:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NZFToken_$1984",
																		"typeString": "contract NZFToken"
																	}
																],
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3288:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3288:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3288:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "307866374144446239333037373745313162383341354537343934343231456334433538396430333137",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xf7ADDb930777E11b83A5E7494421Ec4C589d0317"
														},
														{
															"hexValue": "353030",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															}
														],
														"id": 1767,
														"name": "poolInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "3210:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$__$",
															"typeString": "function (address,address,address,uint24)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:174:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "3210:174:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "developerWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "3423:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1782,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "3440:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1778,
																	"name": "USDTAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "3401:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1777,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "3394:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3394:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3414:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "3394:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "3394:62:9"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1738,
												"name": "onlyDeveloper",
												"nameLocations": [
													"2792:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1611,
												"src": "2792:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2792:13:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "2772:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2780:2:9"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2806:0:9"
									},
									"scope": 1984,
									"src": "2763:700:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "3637:1190:9",
										"statements": [
											{
												"assignments": [
													1798,
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3653:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "3648:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3648:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "poolAddress",
														"nameLocation": "3675:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "3662:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3662:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "637265617465506f6f6c28616464726573732c616464726573732c75696e74323429",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3762:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a1671295d3e57aab9c0e67e2ed82d0ed6e24f69cacd01a8015a8563189ec02d6",
																		"typeString": "literal_string \"createPool(address,address,uint24)\""
																	},
																	"value": "createPool(address,address,uint24)"
																},
																{
																	"id": 1806,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "3816:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1807,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "3840:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1808,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "3864:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_a1671295d3e57aab9c0e67e2ed82d0ed6e24f69cacd01a8015a8563189ec02d6",
																		"typeString": "literal_string \"createPool(address,address,uint24)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 1803,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3721:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3725:19:9",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "3721:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3721:160:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1801,
															"name": "factory_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "3690:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3703:4:9",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "3690:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:201:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3647:244:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1813,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "3909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2066696e6420466163746f7279",
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3918:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8",
																"typeString": "literal_string \"Failed to find Factory\""
															},
															"value": "Failed to find Factory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b103ca497ca13714512899d32732972975a89c1b9014e71301af5200049c4ea8",
																"typeString": "literal_string \"Failed to find Factory\""
															}
														],
														"id": 1812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3901:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3901:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "3901:42:9"
											},
											{
												"assignments": [
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1818,
														"mutability": "mutable",
														"name": "poolAddress_",
														"nameLocation": "3961:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "3953:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1817,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3953:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"arguments": [
														{
															"id": 1820,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "3991:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1819,
														"name": "bytesToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "3976:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes memory) pure returns (address)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3953:50:9"
											},
											{
												"expression": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1823,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "4014:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 1824,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4013:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "696e697461696c697a652875696e7431363029",
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4091:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9a26bd81ee8b9374dfd4cdb1a8f52c5bfd05d1bc320cb26051a14ab907a78117",
																			"typeString": "literal_string \"initailize(uint160)\""
																		},
																		"value": "initailize(uint160)"
																	},
																	{
																		"hexValue": "353030303030",
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4114:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_500000_by_1",
																			"typeString": "int_const 500000"
																		},
																		"value": "500000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_9a26bd81ee8b9374dfd4cdb1a8f52c5bfd05d1bc320cb26051a14ab907a78117",
																			"typeString": "literal_string \"initailize(uint160)\""
																		},
																		{
																			"typeIdentifier": "t_rational_500000_by_1",
																			"typeString": "int_const 500000"
																		}
																	],
																	"expression": {
																		"id": 1830,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "4067:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4071:19:9",
																	"memberName": "encodeWithSignature",
																	"nodeType": "MemberAccess",
																	"src": "4067:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (bytes memory)"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:54:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1827,
																		"name": "poolAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "4035:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4027:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1825,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4027:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4027:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4049:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4027:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4027:104:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "4013:118:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "4013:118:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1839,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "4149:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f20506f6f6c20696e697469616c697a65",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4158:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2",
																"typeString": "literal_string \"Failed to Pool initialize\""
															},
															"value": "Failed to Pool initialize"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db49748f3054b38ab1d16eb1ea12ba219d379b13eaa9059f33d07f3c43d5d9b2",
																"typeString": "literal_string \"Failed to Pool initialize\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4141:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "4141:45:9"
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4215:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "4197:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
															"typeString": "struct NZFToken.MintParams"
														},
														"typeName": {
															"id": 1844,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1843,
																"name": "MintParams",
																"nameLocations": [
																	"4197:10:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1545,
																"src": "4197:10:9"
															},
															"referencedDeclaration": 1545,
															"src": "4197:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_storage_ptr",
																"typeString": "struct NZFToken.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"nodeType": "VariableDeclarationStatement",
												"src": "4197:24:9"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1847,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4231:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4238:6:9",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1528,
														"src": "4231:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "4247:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4231:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "4231:22:9"
											},
											{
												"expression": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1853,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4263:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4270:6:9",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1530,
														"src": "4263:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1856,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "4279:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4263:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "4263:22:9"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1859,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4295:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4302:3:9",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1532,
														"src": "4295:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1862,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "4308:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "4295:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "4295:16:9"
											},
											{
												"expression": {
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1865,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4321:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4328:9:9",
														"memberName": "lowerTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1534,
														"src": "4321:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "4340:7:9",
														"subExpression": {
															"hexValue": "383837323230",
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_887220_by_1",
																"typeString": "int_const 887220"
															},
															"value": "887220"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_887220_by_1",
															"typeString": "int_const -887220"
														}
													},
													"src": "4321:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "4321:26:9"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1872,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4357:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4364:9:9",
														"memberName": "upperTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1536,
														"src": "4357:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "383837323230",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4376:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_887220_by_1",
															"typeString": "int_const 887220"
														},
														"value": "887220"
													},
													"src": "4357:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "4357:25:9"
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1878,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4392:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4399:14:9",
														"memberName": "amount0Desired",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "4392:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_500000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "353030303030",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4416:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500000_by_1",
																"typeString": "int_const 500000"
															},
															"value": "500000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4426:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4430:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4426:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1885,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4425:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "4416:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000"
														}
													},
													"src": "4392:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "4392:41:9"
											},
											{
												"expression": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1889,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4443:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4450:14:9",
														"memberName": "amount1Desired",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1540,
														"src": "4443:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_500000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000"
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "353030303030",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4467:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500000_by_1",
																"typeString": "int_const 500000"
															},
															"value": "500000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4477:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4481:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4477:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4476:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "4467:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000"
														}
													},
													"src": "4443:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "4443:41:9"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1900,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4494:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4501:10:9",
														"memberName": "amount0Min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1542,
														"src": "4494:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4514:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4494:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "4494:21:9"
											},
											{
												"expression": {
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1906,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4525:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																"typeString": "struct NZFToken.MintParams memory"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4532:10:9",
														"memberName": "amount1Min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1544,
														"src": "4525:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4545:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4525:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "4525:21:9"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1912,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "4558:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 1913,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4557:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "6d696e742828616464726573732c616464726573732c75696e7432342c696e7432342c696e7432342c75696e743235362c75696e743235362c75696e743235362c75696e743235362929",
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4652:76:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_aa88a96c309cc28f876be109c74abf746cf788f59b823f44fa39c55c95229a1a",
																			"typeString": "literal_string \"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256))\""
																		},
																		"value": "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256))"
																	},
																	{
																		"id": 1922,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "4746:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																			"typeString": "struct NZFToken.MintParams memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_aa88a96c309cc28f876be109c74abf746cf788f59b823f44fa39c55c95229a1a",
																			"typeString": "literal_string \"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256))\""
																		},
																		{
																			"typeIdentifier": "t_struct$_MintParams_$1545_memory_ptr",
																			"typeString": "struct NZFToken.MintParams memory"
																		}
																	],
																	"expression": {
																		"id": 1919,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "4611:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4615:19:9",
																	"memberName": "encodeWithSignature",
																	"nodeType": "MemberAccess",
																	"src": "4611:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (bytes memory)"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4611:155:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1916,
																		"name": "poolAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "4579:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4571:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1914,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4571:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4571:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4593:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4571:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4571:205:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "4557:219:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "4557:219:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1928,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "4794:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f204d696e74",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
																"typeString": "literal_string \"Failed to Mint\""
															},
															"value": "Failed to Mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
																"typeString": "literal_string \"Failed to Mint\""
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4786:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4786:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "4786:34:9"
											}
										]
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolInit",
									"nameLocation": "3515:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "factory_addr",
												"nameLocation": "3541:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "3533:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3571:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "3563:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3595:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "3587:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3618:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "3611:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1793,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3611:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:104:9"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3637:0:9"
									},
									"scope": 1984,
									"src": "3506:1321:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "4916:76:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4935:51:9",
													"nodeType": "YulBlock",
													"src": "4935:51:9",
													"statements": [
														{
															"nativeSrc": "4949:27:9",
															"nodeType": "YulAssignment",
															"src": "4949:27:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bys",
																				"nativeSrc": "4967:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4967:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4972:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4972:2:9",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4963:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:9"
																		},
																		"nativeSrc": "4963:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:12:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4957:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4957:5:9"
																},
																"nativeSrc": "4957:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4957:19:9"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4949:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4949:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1938,
														"isOffset": false,
														"isSlot": false,
														"src": "4949:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1935,
														"isOffset": false,
														"isSlot": false,
														"src": "4967:3:9",
														"valueSize": 1
													}
												],
												"id": 1940,
												"nodeType": "InlineAssembly",
												"src": "4926:60:9"
											}
										]
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bytesToAddress",
									"nameLocation": "4847:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "bys",
												"nameLocation": "4875:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "4862:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4862:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:18:9"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "4910:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "4902:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:9"
									},
									"scope": 1984,
									"src": "4838:154:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "5066:345:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "5084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5093:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5084:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5096:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5076:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "5076:55:9"
											},
											{
												"assignments": [
													1959,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5148:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1982,
														"src": "5143:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1958,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5143:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1976,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "7377617028616464726573732c626f6f6c2c75696e743235362c75696e743136302c627974657329",
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5208:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_dd5a12d862e8f1de2778b2111daa216973ff32a324f61b99db9f7d33beb8d7f9",
																		"typeString": "literal_string \"swap(address,bool,uint256,uint160,bytes)\""
																	},
																	"value": "swap(address,bool,uint256,uint160,bytes)"
																},
																{
																	"expression": {
																		"id": 1965,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5264:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5268:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5264:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5288:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"hexValue": "30",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5307:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5322:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5347:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "5337:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (bytes memory)"
																		},
																		"typeName": {
																			"id": 1970,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "5341:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes"
																			}
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5337:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_dd5a12d862e8f1de2778b2111daa216973ff32a324f61b99db9f7d33beb8d7f9",
																		"typeString": "literal_string \"swap(address,bool,uint256,uint160,bytes)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1962,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5171:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5175:19:9",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "5171:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5171:179:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1960,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "5161:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5166:4:9",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5161:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5161:199:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:218:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "5378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f204d696e74",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5387:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
																"typeString": "literal_string \"Failed to Mint\""
															},
															"value": "Failed to Mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_934aa8ab78db63ed8ea0bdd361449139738b5233cfbd99804fa1a52356892fc8",
																"typeString": "literal_string \"Failed to Mint\""
															}
														],
														"id": 1977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5370:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5370:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "5370:34:9"
											}
										]
									},
									"functionSelector": "d1b8df22",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1948,
												"name": "onlyDeveloper",
												"nameLocations": [
													"5052:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1611,
												"src": "5052:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5052:13:9"
										}
									],
									"name": "buyBack",
									"nameLocation": "5007:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5023:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "5015:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5037:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "5029:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:30:9"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5066:0:9"
									},
									"scope": 1984,
									"src": "4998:413:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1985,
							"src": "291:5123:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								956,
								1237,
								1242,
								1245
							],
							"usedEvents": [
								24,
								811,
								820,
								1593,
								1599
							]
						}
					],
					"src": "32:5383:9"
				},
				"id": 9
			}
		}
	}
}